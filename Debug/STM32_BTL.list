
STM32_BTL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004b40  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  08004c4c  08004c4c  00014c4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004d50  08004d50  00020094  2**0
                  CONTENTS
  4 .ARM          00000000  08004d50  08004d50  00020094  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004d50  08004d50  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004d50  08004d50  00014d50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004d54  08004d54  00014d54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  08004d58  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  20000094  08004dec  00020094  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000210  08004dec  00020210  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 12 .debug_info   00016b26  00000000  00000000  000200bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e50  00000000  00000000  00036be3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000da0  00000000  00000000  00039a38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c60  00000000  00000000  0003a7d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019c1d  00000000  00000000  0003b438  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011b84  00000000  00000000  00055055  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b2e5  00000000  00000000  00066bd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f1ebe  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000039b8  00000000  00000000  000f1f14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000094 	.word	0x20000094
 8000128:	00000000 	.word	0x00000000
 800012c:	08004c34 	.word	0x08004c34

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000098 	.word	0x20000098
 8000148:	08004c34 	.word	0x08004c34

0800014c <fsmHorLEDsRun>:
#include "LEDs_display.h"

int horizontal_status = MODE_INIT;
int vertical_status = MODE_INIT;

void fsmHorLEDsRun() {
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	// FSM for horizontal LEDs

	switch (horizontal_status) {
 8000150:	4b2a      	ldr	r3, [pc, #168]	; (80001fc <fsmHorLEDsRun+0xb0>)
 8000152:	681b      	ldr	r3, [r3, #0]
 8000154:	2b04      	cmp	r3, #4
 8000156:	d847      	bhi.n	80001e8 <fsmHorLEDsRun+0x9c>
 8000158:	a201      	add	r2, pc, #4	; (adr r2, 8000160 <fsmHorLEDsRun+0x14>)
 800015a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800015e:	bf00      	nop
 8000160:	08000175 	.word	0x08000175
 8000164:	080001e9 	.word	0x080001e9
 8000168:	08000189 	.word	0x08000189
 800016c:	080001a9 	.word	0x080001a9
 8000170:	080001c9 	.word	0x080001c9
		case MODE_INIT:
			horizontal_status = AUTO_RED;
 8000174:	4b21      	ldr	r3, [pc, #132]	; (80001fc <fsmHorLEDsRun+0xb0>)
 8000176:	2202      	movs	r2, #2
 8000178:	601a      	str	r2, [r3, #0]
			setTimer(0, RED_time);
 800017a:	4b21      	ldr	r3, [pc, #132]	; (8000200 <fsmHorLEDsRun+0xb4>)
 800017c:	681b      	ldr	r3, [r3, #0]
 800017e:	4619      	mov	r1, r3
 8000180:	2000      	movs	r0, #0
 8000182:	f001 fa1f 	bl	80015c4 <setTimer>
			break;
 8000186:	e036      	b.n	80001f6 <fsmHorLEDsRun+0xaa>

		case AUTO_RED:
			if (isTimerUp(0)) {
 8000188:	2000      	movs	r0, #0
 800018a:	f001 fa07 	bl	800159c <isTimerUp>
 800018e:	4603      	mov	r3, r0
 8000190:	2b00      	cmp	r3, #0
 8000192:	d02b      	beq.n	80001ec <fsmHorLEDsRun+0xa0>
				horizontal_status = AUTO_GREEN;
 8000194:	4b19      	ldr	r3, [pc, #100]	; (80001fc <fsmHorLEDsRun+0xb0>)
 8000196:	2203      	movs	r2, #3
 8000198:	601a      	str	r2, [r3, #0]
				setTimer(0, GREEN_time);
 800019a:	4b1a      	ldr	r3, [pc, #104]	; (8000204 <fsmHorLEDsRun+0xb8>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	4619      	mov	r1, r3
 80001a0:	2000      	movs	r0, #0
 80001a2:	f001 fa0f 	bl	80015c4 <setTimer>
			}
			break;
 80001a6:	e021      	b.n	80001ec <fsmHorLEDsRun+0xa0>

		case AUTO_GREEN:
			if (isTimerUp(0)) {
 80001a8:	2000      	movs	r0, #0
 80001aa:	f001 f9f7 	bl	800159c <isTimerUp>
 80001ae:	4603      	mov	r3, r0
 80001b0:	2b00      	cmp	r3, #0
 80001b2:	d01d      	beq.n	80001f0 <fsmHorLEDsRun+0xa4>
				horizontal_status = AUTO_YELLOW;
 80001b4:	4b11      	ldr	r3, [pc, #68]	; (80001fc <fsmHorLEDsRun+0xb0>)
 80001b6:	2204      	movs	r2, #4
 80001b8:	601a      	str	r2, [r3, #0]
				setTimer(0, YELLOW_time);
 80001ba:	4b13      	ldr	r3, [pc, #76]	; (8000208 <fsmHorLEDsRun+0xbc>)
 80001bc:	681b      	ldr	r3, [r3, #0]
 80001be:	4619      	mov	r1, r3
 80001c0:	2000      	movs	r0, #0
 80001c2:	f001 f9ff 	bl	80015c4 <setTimer>
			}
			break;
 80001c6:	e013      	b.n	80001f0 <fsmHorLEDsRun+0xa4>

		case AUTO_YELLOW:
			if (isTimerUp(0)) {
 80001c8:	2000      	movs	r0, #0
 80001ca:	f001 f9e7 	bl	800159c <isTimerUp>
 80001ce:	4603      	mov	r3, r0
 80001d0:	2b00      	cmp	r3, #0
 80001d2:	d00f      	beq.n	80001f4 <fsmHorLEDsRun+0xa8>
				horizontal_status = AUTO_RED;
 80001d4:	4b09      	ldr	r3, [pc, #36]	; (80001fc <fsmHorLEDsRun+0xb0>)
 80001d6:	2202      	movs	r2, #2
 80001d8:	601a      	str	r2, [r3, #0]
				setTimer(0, RED_time);
 80001da:	4b09      	ldr	r3, [pc, #36]	; (8000200 <fsmHorLEDsRun+0xb4>)
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	4619      	mov	r1, r3
 80001e0:	2000      	movs	r0, #0
 80001e2:	f001 f9ef 	bl	80015c4 <setTimer>
			}
			break;
 80001e6:	e005      	b.n	80001f4 <fsmHorLEDsRun+0xa8>

		default:
			break;
 80001e8:	bf00      	nop
 80001ea:	e004      	b.n	80001f6 <fsmHorLEDsRun+0xaa>
			break;
 80001ec:	bf00      	nop
 80001ee:	e002      	b.n	80001f6 <fsmHorLEDsRun+0xaa>
			break;
 80001f0:	bf00      	nop
 80001f2:	e000      	b.n	80001f6 <fsmHorLEDsRun+0xaa>
			break;
 80001f4:	bf00      	nop
	}
}
 80001f6:	bf00      	nop
 80001f8:	bd80      	pop	{r7, pc}
 80001fa:	bf00      	nop
 80001fc:	200000b0 	.word	0x200000b0
 8000200:	20000018 	.word	0x20000018
 8000204:	2000001c 	.word	0x2000001c
 8000208:	20000020 	.word	0x20000020

0800020c <fsmVerLEDsRun>:


void fsmVerLEDsRun() {
 800020c:	b580      	push	{r7, lr}
 800020e:	af00      	add	r7, sp, #0
	// FSM for vertical LEDs

	switch (vertical_status) {
 8000210:	4b2a      	ldr	r3, [pc, #168]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	2b04      	cmp	r3, #4
 8000216:	d847      	bhi.n	80002a8 <fsmVerLEDsRun+0x9c>
 8000218:	a201      	add	r2, pc, #4	; (adr r2, 8000220 <fsmVerLEDsRun+0x14>)
 800021a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800021e:	bf00      	nop
 8000220:	08000235 	.word	0x08000235
 8000224:	080002a9 	.word	0x080002a9
 8000228:	08000249 	.word	0x08000249
 800022c:	08000269 	.word	0x08000269
 8000230:	08000289 	.word	0x08000289
		case MODE_INIT:
			vertical_status = AUTO_GREEN;
 8000234:	4b21      	ldr	r3, [pc, #132]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000236:	2203      	movs	r2, #3
 8000238:	601a      	str	r2, [r3, #0]
			setTimer(1, GREEN_time);
 800023a:	4b21      	ldr	r3, [pc, #132]	; (80002c0 <fsmVerLEDsRun+0xb4>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4619      	mov	r1, r3
 8000240:	2001      	movs	r0, #1
 8000242:	f001 f9bf 	bl	80015c4 <setTimer>
			break;
 8000246:	e036      	b.n	80002b6 <fsmVerLEDsRun+0xaa>

		case AUTO_RED:
			if (isTimerUp(1)) {
 8000248:	2001      	movs	r0, #1
 800024a:	f001 f9a7 	bl	800159c <isTimerUp>
 800024e:	4603      	mov	r3, r0
 8000250:	2b00      	cmp	r3, #0
 8000252:	d02b      	beq.n	80002ac <fsmVerLEDsRun+0xa0>
				vertical_status = AUTO_GREEN;
 8000254:	4b19      	ldr	r3, [pc, #100]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000256:	2203      	movs	r2, #3
 8000258:	601a      	str	r2, [r3, #0]
				setTimer(1, GREEN_time);
 800025a:	4b19      	ldr	r3, [pc, #100]	; (80002c0 <fsmVerLEDsRun+0xb4>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4619      	mov	r1, r3
 8000260:	2001      	movs	r0, #1
 8000262:	f001 f9af 	bl	80015c4 <setTimer>
			}
			break;
 8000266:	e021      	b.n	80002ac <fsmVerLEDsRun+0xa0>

		case AUTO_GREEN:
			if (isTimerUp(1)) {
 8000268:	2001      	movs	r0, #1
 800026a:	f001 f997 	bl	800159c <isTimerUp>
 800026e:	4603      	mov	r3, r0
 8000270:	2b00      	cmp	r3, #0
 8000272:	d01d      	beq.n	80002b0 <fsmVerLEDsRun+0xa4>
				vertical_status = AUTO_YELLOW;
 8000274:	4b11      	ldr	r3, [pc, #68]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000276:	2204      	movs	r2, #4
 8000278:	601a      	str	r2, [r3, #0]
				setTimer(1, YELLOW_time);
 800027a:	4b12      	ldr	r3, [pc, #72]	; (80002c4 <fsmVerLEDsRun+0xb8>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	4619      	mov	r1, r3
 8000280:	2001      	movs	r0, #1
 8000282:	f001 f99f 	bl	80015c4 <setTimer>
			}
			break;
 8000286:	e013      	b.n	80002b0 <fsmVerLEDsRun+0xa4>

		case AUTO_YELLOW:
			if (isTimerUp(1)) {
 8000288:	2001      	movs	r0, #1
 800028a:	f001 f987 	bl	800159c <isTimerUp>
 800028e:	4603      	mov	r3, r0
 8000290:	2b00      	cmp	r3, #0
 8000292:	d00f      	beq.n	80002b4 <fsmVerLEDsRun+0xa8>
				vertical_status = AUTO_RED;
 8000294:	4b09      	ldr	r3, [pc, #36]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000296:	2202      	movs	r2, #2
 8000298:	601a      	str	r2, [r3, #0]
				setTimer(1, RED_time);
 800029a:	4b0b      	ldr	r3, [pc, #44]	; (80002c8 <fsmVerLEDsRun+0xbc>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4619      	mov	r1, r3
 80002a0:	2001      	movs	r0, #1
 80002a2:	f001 f98f 	bl	80015c4 <setTimer>
			}
			break;
 80002a6:	e005      	b.n	80002b4 <fsmVerLEDsRun+0xa8>

		default:
			break;
 80002a8:	bf00      	nop
 80002aa:	e004      	b.n	80002b6 <fsmVerLEDsRun+0xaa>
			break;
 80002ac:	bf00      	nop
 80002ae:	e002      	b.n	80002b6 <fsmVerLEDsRun+0xaa>
			break;
 80002b0:	bf00      	nop
 80002b2:	e000      	b.n	80002b6 <fsmVerLEDsRun+0xaa>
			break;
 80002b4:	bf00      	nop
	}
}
 80002b6:	bf00      	nop
 80002b8:	bd80      	pop	{r7, pc}
 80002ba:	bf00      	nop
 80002bc:	200000b4 	.word	0x200000b4
 80002c0:	2000001c 	.word	0x2000001c
 80002c4:	20000020 	.word	0x20000020
 80002c8:	20000018 	.word	0x20000018

080002cc <LEDsDisplay>:

void LEDsDisplay() {
 80002cc:	b580      	push	{r7, lr}
 80002ce:	af00      	add	r7, sp, #0
	// Display two ways LEDs

	fsmHorLEDsRun();
 80002d0:	f7ff ff3c 	bl	800014c <fsmHorLEDsRun>
	fsmVerLEDsRun();
 80002d4:	f7ff ff9a 	bl	800020c <fsmVerLEDsRun>

	switch (horizontal_status) {
 80002d8:	4b2f      	ldr	r3, [pc, #188]	; (8000398 <LEDsDisplay+0xcc>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	2b04      	cmp	r3, #4
 80002de:	d01e      	beq.n	800031e <LEDsDisplay+0x52>
 80002e0:	2b04      	cmp	r3, #4
 80002e2:	dc28      	bgt.n	8000336 <LEDsDisplay+0x6a>
 80002e4:	2b02      	cmp	r3, #2
 80002e6:	d002      	beq.n	80002ee <LEDsDisplay+0x22>
 80002e8:	2b03      	cmp	r3, #3
 80002ea:	d00c      	beq.n	8000306 <LEDsDisplay+0x3a>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
			break;

		default:
			break;
 80002ec:	e023      	b.n	8000336 <LEDsDisplay+0x6a>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 80002ee:	2201      	movs	r2, #1
 80002f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80002f4:	4829      	ldr	r0, [pc, #164]	; (800039c <LEDsDisplay+0xd0>)
 80002f6:	f001 ffa6 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_OFF);
 80002fa:	2200      	movs	r2, #0
 80002fc:	2108      	movs	r1, #8
 80002fe:	4828      	ldr	r0, [pc, #160]	; (80003a0 <LEDsDisplay+0xd4>)
 8000300:	f001 ffa1 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 8000304:	e018      	b.n	8000338 <LEDsDisplay+0x6c>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000306:	2200      	movs	r2, #0
 8000308:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800030c:	4823      	ldr	r0, [pc, #140]	; (800039c <LEDsDisplay+0xd0>)
 800030e:	f001 ff9a 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 8000312:	2201      	movs	r2, #1
 8000314:	2108      	movs	r1, #8
 8000316:	4822      	ldr	r0, [pc, #136]	; (80003a0 <LEDsDisplay+0xd4>)
 8000318:	f001 ff95 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 800031c:	e00c      	b.n	8000338 <LEDsDisplay+0x6c>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 800031e:	2201      	movs	r2, #1
 8000320:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000324:	481d      	ldr	r0, [pc, #116]	; (800039c <LEDsDisplay+0xd0>)
 8000326:	f001 ff8e 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 800032a:	2201      	movs	r2, #1
 800032c:	2108      	movs	r1, #8
 800032e:	481c      	ldr	r0, [pc, #112]	; (80003a0 <LEDsDisplay+0xd4>)
 8000330:	f001 ff89 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 8000334:	e000      	b.n	8000338 <LEDsDisplay+0x6c>
			break;
 8000336:	bf00      	nop
	}

	switch (vertical_status) {
 8000338:	4b1a      	ldr	r3, [pc, #104]	; (80003a4 <LEDsDisplay+0xd8>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	2b04      	cmp	r3, #4
 800033e:	d01c      	beq.n	800037a <LEDsDisplay+0xae>
 8000340:	2b04      	cmp	r3, #4
 8000342:	dc25      	bgt.n	8000390 <LEDsDisplay+0xc4>
 8000344:	2b02      	cmp	r3, #2
 8000346:	d002      	beq.n	800034e <LEDsDisplay+0x82>
 8000348:	2b03      	cmp	r3, #3
 800034a:	d00b      	beq.n	8000364 <LEDsDisplay+0x98>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
			break;

		default:
			break;
 800034c:	e020      	b.n	8000390 <LEDsDisplay+0xc4>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 800034e:	2201      	movs	r2, #1
 8000350:	2120      	movs	r1, #32
 8000352:	4813      	ldr	r0, [pc, #76]	; (80003a0 <LEDsDisplay+0xd4>)
 8000354:	f001 ff77 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_OFF);
 8000358:	2200      	movs	r2, #0
 800035a:	2110      	movs	r1, #16
 800035c:	4810      	ldr	r0, [pc, #64]	; (80003a0 <LEDsDisplay+0xd4>)
 800035e:	f001 ff72 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 8000362:	e016      	b.n	8000392 <LEDsDisplay+0xc6>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_OFF);
 8000364:	2200      	movs	r2, #0
 8000366:	2120      	movs	r1, #32
 8000368:	480d      	ldr	r0, [pc, #52]	; (80003a0 <LEDsDisplay+0xd4>)
 800036a:	f001 ff6c 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 800036e:	2201      	movs	r2, #1
 8000370:	2110      	movs	r1, #16
 8000372:	480b      	ldr	r0, [pc, #44]	; (80003a0 <LEDsDisplay+0xd4>)
 8000374:	f001 ff67 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 8000378:	e00b      	b.n	8000392 <LEDsDisplay+0xc6>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 800037a:	2201      	movs	r2, #1
 800037c:	2120      	movs	r1, #32
 800037e:	4808      	ldr	r0, [pc, #32]	; (80003a0 <LEDsDisplay+0xd4>)
 8000380:	f001 ff61 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 8000384:	2201      	movs	r2, #1
 8000386:	2110      	movs	r1, #16
 8000388:	4805      	ldr	r0, [pc, #20]	; (80003a0 <LEDsDisplay+0xd4>)
 800038a:	f001 ff5c 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 800038e:	e000      	b.n	8000392 <LEDsDisplay+0xc6>
			break;
 8000390:	bf00      	nop
	}
}
 8000392:	bf00      	nop
 8000394:	bd80      	pop	{r7, pc}
 8000396:	bf00      	nop
 8000398:	200000b0 	.word	0x200000b0
 800039c:	40010800 	.word	0x40010800
 80003a0:	40010c00 	.word	0x40010c00
 80003a4:	200000b4 	.word	0x200000b4

080003a8 <isButtonPressed>:
int button_flag[NO_OF_BUTTON];
int button_long_flag[NO_OF_BUTTON];
GPIO_PinState key_reg[NO_OF_BUTTON][4];
int counter_for_key_pressed[NO_OF_BUTTON];

int isButtonPressed(int button) {
 80003a8:	b480      	push	{r7}
 80003aa:	b083      	sub	sp, #12
 80003ac:	af00      	add	r7, sp, #0
 80003ae:	6078      	str	r0, [r7, #4]
	if (button_flag[button]) {
 80003b0:	4a09      	ldr	r2, [pc, #36]	; (80003d8 <isButtonPressed+0x30>)
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d006      	beq.n	80003ca <isButtonPressed+0x22>
		button_flag[button] = 0;
 80003bc:	4a06      	ldr	r2, [pc, #24]	; (80003d8 <isButtonPressed+0x30>)
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	2100      	movs	r1, #0
 80003c2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 80003c6:	2301      	movs	r3, #1
 80003c8:	e000      	b.n	80003cc <isButtonPressed+0x24>
	}
	else return 0;
 80003ca:	2300      	movs	r3, #0
}
 80003cc:	4618      	mov	r0, r3
 80003ce:	370c      	adds	r7, #12
 80003d0:	46bd      	mov	sp, r7
 80003d2:	bc80      	pop	{r7}
 80003d4:	4770      	bx	lr
 80003d6:	bf00      	nop
 80003d8:	200000fc 	.word	0x200000fc

080003dc <isButtonLongPressed>:

int isButtonLongPressed(int button) {
 80003dc:	b480      	push	{r7}
 80003de:	b083      	sub	sp, #12
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	6078      	str	r0, [r7, #4]
	if (button_long_flag[button]) {
 80003e4:	4a09      	ldr	r2, [pc, #36]	; (800040c <isButtonLongPressed+0x30>)
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d006      	beq.n	80003fe <isButtonLongPressed+0x22>
		button_long_flag[button] = 0;
 80003f0:	4a06      	ldr	r2, [pc, #24]	; (800040c <isButtonLongPressed+0x30>)
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	2100      	movs	r1, #0
 80003f6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 80003fa:	2301      	movs	r3, #1
 80003fc:	e000      	b.n	8000400 <isButtonLongPressed+0x24>
	}
	else return 0;
 80003fe:	2300      	movs	r3, #0
}
 8000400:	4618      	mov	r0, r3
 8000402:	370c      	adds	r7, #12
 8000404:	46bd      	mov	sp, r7
 8000406:	bc80      	pop	{r7}
 8000408:	4770      	bx	lr
 800040a:	bf00      	nop
 800040c:	2000010c 	.word	0x2000010c

08000410 <subKeyProcess>:

void subKeyProcess(int button) {
 8000410:	b480      	push	{r7}
 8000412:	b083      	sub	sp, #12
 8000414:	af00      	add	r7, sp, #0
 8000416:	6078      	str	r0, [r7, #4]
	button_flag[button] = 1;
 8000418:	4a04      	ldr	r2, [pc, #16]	; (800042c <subKeyProcess+0x1c>)
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	2101      	movs	r1, #1
 800041e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000422:	bf00      	nop
 8000424:	370c      	adds	r7, #12
 8000426:	46bd      	mov	sp, r7
 8000428:	bc80      	pop	{r7}
 800042a:	4770      	bx	lr
 800042c:	200000fc 	.word	0x200000fc

08000430 <subKeyLongProcess>:

void subKeyLongProcess(int button) {
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
 8000436:	6078      	str	r0, [r7, #4]
	button_long_flag[button] = 1;
 8000438:	4a04      	ldr	r2, [pc, #16]	; (800044c <subKeyLongProcess+0x1c>)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	2101      	movs	r1, #1
 800043e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000442:	bf00      	nop
 8000444:	370c      	adds	r7, #12
 8000446:	46bd      	mov	sp, r7
 8000448:	bc80      	pop	{r7}
 800044a:	4770      	bx	lr
 800044c:	2000010c 	.word	0x2000010c

08000450 <resetKey>:

void resetKey(int button) {
 8000450:	b480      	push	{r7}
 8000452:	b083      	sub	sp, #12
 8000454:	af00      	add	r7, sp, #0
 8000456:	6078      	str	r0, [r7, #4]
	button_flag[button] = 0;
 8000458:	4a07      	ldr	r2, [pc, #28]	; (8000478 <resetKey+0x28>)
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	2100      	movs	r1, #0
 800045e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	button_long_flag[button] = 0;
 8000462:	4a06      	ldr	r2, [pc, #24]	; (800047c <resetKey+0x2c>)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	2100      	movs	r1, #0
 8000468:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 800046c:	bf00      	nop
 800046e:	370c      	adds	r7, #12
 8000470:	46bd      	mov	sp, r7
 8000472:	bc80      	pop	{r7}
 8000474:	4770      	bx	lr
 8000476:	bf00      	nop
 8000478:	200000fc 	.word	0x200000fc
 800047c:	2000010c 	.word	0x2000010c

08000480 <setKeyTimer>:

void setKeyTimer(int button) {
 8000480:	b480      	push	{r7}
 8000482:	b083      	sub	sp, #12
 8000484:	af00      	add	r7, sp, #0
 8000486:	6078      	str	r0, [r7, #4]
	counter_for_key_pressed[button] = timer_for_key_pressed / timer_cycle;
 8000488:	4b07      	ldr	r3, [pc, #28]	; (80004a8 <setKeyTimer+0x28>)
 800048a:	681a      	ldr	r2, [r3, #0]
 800048c:	4b07      	ldr	r3, [pc, #28]	; (80004ac <setKeyTimer+0x2c>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	fb92 f2f3 	sdiv	r2, r2, r3
 8000494:	4906      	ldr	r1, [pc, #24]	; (80004b0 <setKeyTimer+0x30>)
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800049c:	bf00      	nop
 800049e:	370c      	adds	r7, #12
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bc80      	pop	{r7}
 80004a4:	4770      	bx	lr
 80004a6:	bf00      	nop
 80004a8:	20000014 	.word	0x20000014
 80004ac:	20000010 	.word	0x20000010
 80004b0:	200000dc 	.word	0x200000dc

080004b4 <getKeyInput>:

void getKeyInput() {
 80004b4:	b580      	push	{r7, lr}
 80004b6:	b082      	sub	sp, #8
 80004b8:	af00      	add	r7, sp, #0
	for (int button = 0; button < NO_OF_BUTTON; button++) {
 80004ba:	2300      	movs	r3, #0
 80004bc:	607b      	str	r3, [r7, #4]
 80004be:	e0b9      	b.n	8000634 <getKeyInput+0x180>
		key_reg[button][0] = key_reg[button][1];
 80004c0:	4a61      	ldr	r2, [pc, #388]	; (8000648 <getKeyInput+0x194>)
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	009b      	lsls	r3, r3, #2
 80004c6:	4413      	add	r3, r2
 80004c8:	7859      	ldrb	r1, [r3, #1]
 80004ca:	4a5f      	ldr	r2, [pc, #380]	; (8000648 <getKeyInput+0x194>)
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
		key_reg[button][1] = key_reg[button][2];
 80004d2:	4a5d      	ldr	r2, [pc, #372]	; (8000648 <getKeyInput+0x194>)
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	009b      	lsls	r3, r3, #2
 80004d8:	4413      	add	r3, r2
 80004da:	7899      	ldrb	r1, [r3, #2]
 80004dc:	4a5a      	ldr	r2, [pc, #360]	; (8000648 <getKeyInput+0x194>)
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	009b      	lsls	r3, r3, #2
 80004e2:	4413      	add	r3, r2
 80004e4:	460a      	mov	r2, r1
 80004e6:	705a      	strb	r2, [r3, #1]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	2b03      	cmp	r3, #3
 80004ec:	d83e      	bhi.n	800056c <getKeyInput+0xb8>
 80004ee:	a201      	add	r2, pc, #4	; (adr r2, 80004f4 <getKeyInput+0x40>)
 80004f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004f4:	08000505 	.word	0x08000505
 80004f8:	0800051f 	.word	0x0800051f
 80004fc:	08000539 	.word	0x08000539
 8000500:	08000553 	.word	0x08000553
		switch (button) {
			case BUTTON_MODE:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_MODE_GPIO_Port, BUTTON_MODE_Pin);
 8000504:	2102      	movs	r1, #2
 8000506:	4851      	ldr	r0, [pc, #324]	; (800064c <getKeyInput+0x198>)
 8000508:	f001 fe86 	bl	8002218 <HAL_GPIO_ReadPin>
 800050c:	4603      	mov	r3, r0
 800050e:	4619      	mov	r1, r3
 8000510:	4a4d      	ldr	r2, [pc, #308]	; (8000648 <getKeyInput+0x194>)
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	009b      	lsls	r3, r3, #2
 8000516:	4413      	add	r3, r2
 8000518:	460a      	mov	r2, r1
 800051a:	709a      	strb	r2, [r3, #2]
				break;
 800051c:	e027      	b.n	800056e <getKeyInput+0xba>
			case BUTTON_SET:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_SET_GPIO_Port, BUTTON_SET_Pin);
 800051e:	2110      	movs	r1, #16
 8000520:	484a      	ldr	r0, [pc, #296]	; (800064c <getKeyInput+0x198>)
 8000522:	f001 fe79 	bl	8002218 <HAL_GPIO_ReadPin>
 8000526:	4603      	mov	r3, r0
 8000528:	4619      	mov	r1, r3
 800052a:	4a47      	ldr	r2, [pc, #284]	; (8000648 <getKeyInput+0x194>)
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	009b      	lsls	r3, r3, #2
 8000530:	4413      	add	r3, r2
 8000532:	460a      	mov	r2, r1
 8000534:	709a      	strb	r2, [r3, #2]
				break;
 8000536:	e01a      	b.n	800056e <getKeyInput+0xba>
			case BUTTON_INC:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_INC_GPIO_Port, BUTTON_INC_Pin);
 8000538:	2101      	movs	r1, #1
 800053a:	4845      	ldr	r0, [pc, #276]	; (8000650 <getKeyInput+0x19c>)
 800053c:	f001 fe6c 	bl	8002218 <HAL_GPIO_ReadPin>
 8000540:	4603      	mov	r3, r0
 8000542:	4619      	mov	r1, r3
 8000544:	4a40      	ldr	r2, [pc, #256]	; (8000648 <getKeyInput+0x194>)
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	009b      	lsls	r3, r3, #2
 800054a:	4413      	add	r3, r2
 800054c:	460a      	mov	r2, r1
 800054e:	709a      	strb	r2, [r3, #2]
				break;
 8000550:	e00d      	b.n	800056e <getKeyInput+0xba>
			case BUTTON_PED:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_PED_GPIO_Port, BUTTON_PED_Pin);
 8000552:	2101      	movs	r1, #1
 8000554:	483d      	ldr	r0, [pc, #244]	; (800064c <getKeyInput+0x198>)
 8000556:	f001 fe5f 	bl	8002218 <HAL_GPIO_ReadPin>
 800055a:	4603      	mov	r3, r0
 800055c:	4619      	mov	r1, r3
 800055e:	4a3a      	ldr	r2, [pc, #232]	; (8000648 <getKeyInput+0x194>)
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	009b      	lsls	r3, r3, #2
 8000564:	4413      	add	r3, r2
 8000566:	460a      	mov	r2, r1
 8000568:	709a      	strb	r2, [r3, #2]
				break;
 800056a:	e000      	b.n	800056e <getKeyInput+0xba>
			default:
				break;
 800056c:	bf00      	nop
		}

		if ((key_reg[button][0] == key_reg[button][1]) && (key_reg[button][1] == key_reg[button][2])) {
 800056e:	4a36      	ldr	r2, [pc, #216]	; (8000648 <getKeyInput+0x194>)
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	f812 2023 	ldrb.w	r2, [r2, r3, lsl #2]
 8000576:	4934      	ldr	r1, [pc, #208]	; (8000648 <getKeyInput+0x194>)
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	009b      	lsls	r3, r3, #2
 800057c:	440b      	add	r3, r1
 800057e:	785b      	ldrb	r3, [r3, #1]
 8000580:	429a      	cmp	r2, r3
 8000582:	d154      	bne.n	800062e <getKeyInput+0x17a>
 8000584:	4a30      	ldr	r2, [pc, #192]	; (8000648 <getKeyInput+0x194>)
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	009b      	lsls	r3, r3, #2
 800058a:	4413      	add	r3, r2
 800058c:	785a      	ldrb	r2, [r3, #1]
 800058e:	492e      	ldr	r1, [pc, #184]	; (8000648 <getKeyInput+0x194>)
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	009b      	lsls	r3, r3, #2
 8000594:	440b      	add	r3, r1
 8000596:	789b      	ldrb	r3, [r3, #2]
 8000598:	429a      	cmp	r2, r3
 800059a:	d148      	bne.n	800062e <getKeyInput+0x17a>

			// Press button, then release
			if (key_reg[button][3] != key_reg[button][2]) {
 800059c:	4a2a      	ldr	r2, [pc, #168]	; (8000648 <getKeyInput+0x194>)
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	009b      	lsls	r3, r3, #2
 80005a2:	4413      	add	r3, r2
 80005a4:	78da      	ldrb	r2, [r3, #3]
 80005a6:	4928      	ldr	r1, [pc, #160]	; (8000648 <getKeyInput+0x194>)
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	009b      	lsls	r3, r3, #2
 80005ac:	440b      	add	r3, r1
 80005ae:	789b      	ldrb	r3, [r3, #2]
 80005b0:	429a      	cmp	r2, r3
 80005b2:	d01c      	beq.n	80005ee <getKeyInput+0x13a>
				key_reg[button][3] = key_reg[button][2];
 80005b4:	4a24      	ldr	r2, [pc, #144]	; (8000648 <getKeyInput+0x194>)
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	009b      	lsls	r3, r3, #2
 80005ba:	4413      	add	r3, r2
 80005bc:	7899      	ldrb	r1, [r3, #2]
 80005be:	4a22      	ldr	r2, [pc, #136]	; (8000648 <getKeyInput+0x194>)
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	009b      	lsls	r3, r3, #2
 80005c4:	4413      	add	r3, r2
 80005c6:	460a      	mov	r2, r1
 80005c8:	70da      	strb	r2, [r3, #3]

				if (key_reg[button][2] == PRESSED_STATE) {
 80005ca:	4a1f      	ldr	r2, [pc, #124]	; (8000648 <getKeyInput+0x194>)
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	009b      	lsls	r3, r3, #2
 80005d0:	4413      	add	r3, r2
 80005d2:	789b      	ldrb	r3, [r3, #2]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d106      	bne.n	80005e6 <getKeyInput+0x132>
					subKeyProcess(button);
 80005d8:	6878      	ldr	r0, [r7, #4]
 80005da:	f7ff ff19 	bl	8000410 <subKeyProcess>
					setKeyTimer(button);
 80005de:	6878      	ldr	r0, [r7, #4]
 80005e0:	f7ff ff4e 	bl	8000480 <setKeyTimer>
 80005e4:	e023      	b.n	800062e <getKeyInput+0x17a>
				}
				else resetKey(button);
 80005e6:	6878      	ldr	r0, [r7, #4]
 80005e8:	f7ff ff32 	bl	8000450 <resetKey>
 80005ec:	e01f      	b.n	800062e <getKeyInput+0x17a>
			}
			// Press and hold button
			else {
				counter_for_key_pressed[button]--;
 80005ee:	4a19      	ldr	r2, [pc, #100]	; (8000654 <getKeyInput+0x1a0>)
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80005f6:	1e5a      	subs	r2, r3, #1
 80005f8:	4916      	ldr	r1, [pc, #88]	; (8000654 <getKeyInput+0x1a0>)
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				if (!counter_for_key_pressed[button]) {
 8000600:	4a14      	ldr	r2, [pc, #80]	; (8000654 <getKeyInput+0x1a0>)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000608:	2b00      	cmp	r3, #0
 800060a:	d110      	bne.n	800062e <getKeyInput+0x17a>
					if (key_reg[button][2] == PRESSED_STATE) {
 800060c:	4a0e      	ldr	r2, [pc, #56]	; (8000648 <getKeyInput+0x194>)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	009b      	lsls	r3, r3, #2
 8000612:	4413      	add	r3, r2
 8000614:	789b      	ldrb	r3, [r3, #2]
 8000616:	2b00      	cmp	r3, #0
 8000618:	d103      	bne.n	8000622 <getKeyInput+0x16e>
						subKeyLongProcess(button);
 800061a:	6878      	ldr	r0, [r7, #4]
 800061c:	f7ff ff08 	bl	8000430 <subKeyLongProcess>
 8000620:	e002      	b.n	8000628 <getKeyInput+0x174>
					}
					else resetKey(button);
 8000622:	6878      	ldr	r0, [r7, #4]
 8000624:	f7ff ff14 	bl	8000450 <resetKey>
					setKeyTimer(button);
 8000628:	6878      	ldr	r0, [r7, #4]
 800062a:	f7ff ff29 	bl	8000480 <setKeyTimer>
	for (int button = 0; button < NO_OF_BUTTON; button++) {
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	3301      	adds	r3, #1
 8000632:	607b      	str	r3, [r7, #4]
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	2b03      	cmp	r3, #3
 8000638:	f77f af42 	ble.w	80004c0 <getKeyInput+0xc>
				}
			}
		}
	}
}
 800063c:	bf00      	nop
 800063e:	bf00      	nop
 8000640:	3708      	adds	r7, #8
 8000642:	46bd      	mov	sp, r7
 8000644:	bd80      	pop	{r7, pc}
 8000646:	bf00      	nop
 8000648:	200000ec 	.word	0x200000ec
 800064c:	40010800 	.word	0x40010800
 8000650:	40010c00 	.word	0x40010c00
 8000654:	200000dc 	.word	0x200000dc

08000658 <fsmAutoModeRun>:
#include "fsm_auto_mode.h"

void fsmAutoModeRun() {
 8000658:	b580      	push	{r7, lr}
 800065a:	af00      	add	r7, sp, #0
	// FSM for AUTO MODE

	switch (mode) {
 800065c:	4b0f      	ldr	r3, [pc, #60]	; (800069c <fsmAutoModeRun+0x44>)
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	2b00      	cmp	r3, #0
 8000662:	d002      	beq.n	800066a <fsmAutoModeRun+0x12>
 8000664:	2b01      	cmp	r3, #1
 8000666:	d006      	beq.n	8000676 <fsmAutoModeRun+0x1e>
			sendTimerCounter();

			break;

		default:
			break;
 8000668:	e015      	b.n	8000696 <fsmAutoModeRun+0x3e>
			mode = AUTO_MODE;
 800066a:	4b0c      	ldr	r3, [pc, #48]	; (800069c <fsmAutoModeRun+0x44>)
 800066c:	2201      	movs	r2, #1
 800066e:	601a      	str	r2, [r3, #0]
			sendModeNoti();
 8000670:	f001 f950 	bl	8001914 <sendModeNoti>
			break;
 8000674:	e00f      	b.n	8000696 <fsmAutoModeRun+0x3e>
			if (isButtonPressed(BUTTON_MODE)) {
 8000676:	2000      	movs	r0, #0
 8000678:	f7ff fe96 	bl	80003a8 <isButtonPressed>
 800067c:	4603      	mov	r3, r0
 800067e:	2b00      	cmp	r3, #0
 8000680:	d004      	beq.n	800068c <fsmAutoModeRun+0x34>
				mode = MAN_MODE;
 8000682:	4b06      	ldr	r3, [pc, #24]	; (800069c <fsmAutoModeRun+0x44>)
 8000684:	2205      	movs	r2, #5
 8000686:	601a      	str	r2, [r3, #0]
				sendModeNoti();
 8000688:	f001 f944 	bl	8001914 <sendModeNoti>
			LEDsDisplay();
 800068c:	f7ff fe1e 	bl	80002cc <LEDsDisplay>
			sendTimerCounter();
 8000690:	f000 ffe6 	bl	8001660 <sendTimerCounter>
			break;
 8000694:	bf00      	nop
	}
}
 8000696:	bf00      	nop
 8000698:	bd80      	pop	{r7, pc}
 800069a:	bf00      	nop
 800069c:	200000c0 	.word	0x200000c0

080006a0 <fsmManualModeRun>:
#include "fsm_manual_mode.h"

void fsmManualModeRun()
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	af00      	add	r7, sp, #0
	// FSM for MANUAL MODE

	switch (mode)
 80006a4:	4b60      	ldr	r3, [pc, #384]	; (8000828 <fsmManualModeRun+0x188>)
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	3b05      	subs	r3, #5
 80006aa:	2b03      	cmp	r3, #3
 80006ac:	f200 80b9 	bhi.w	8000822 <fsmManualModeRun+0x182>
 80006b0:	a201      	add	r2, pc, #4	; (adr r2, 80006b8 <fsmManualModeRun+0x18>)
 80006b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006b6:	bf00      	nop
 80006b8:	080006c9 	.word	0x080006c9
 80006bc:	080006d5 	.word	0x080006d5
 80006c0:	08000741 	.word	0x08000741
 80006c4:	080007ad 	.word	0x080007ad
	{
	case MAN_MODE:
		// Switch to MAN_RED
		sendTimeDuration();
 80006c8:	f001 f822 	bl	8001710 <sendTimeDuration>
		mode = MAN_RED;
 80006cc:	4b56      	ldr	r3, [pc, #344]	; (8000828 <fsmManualModeRun+0x188>)
 80006ce:	2206      	movs	r2, #6
 80006d0:	601a      	str	r2, [r3, #0]
		break;
 80006d2:	e0a6      	b.n	8000822 <fsmManualModeRun+0x182>

	case MAN_RED:

		// Turn on red lights
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 80006d4:	2201      	movs	r2, #1
 80006d6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006da:	4854      	ldr	r0, [pc, #336]	; (800082c <fsmManualModeRun+0x18c>)
 80006dc:	f001 fdb3 	bl	8002246 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_OFF);
 80006e0:	2200      	movs	r2, #0
 80006e2:	2108      	movs	r1, #8
 80006e4:	4852      	ldr	r0, [pc, #328]	; (8000830 <fsmManualModeRun+0x190>)
 80006e6:	f001 fdae 	bl	8002246 <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 80006ea:	2201      	movs	r2, #1
 80006ec:	2120      	movs	r1, #32
 80006ee:	4850      	ldr	r0, [pc, #320]	; (8000830 <fsmManualModeRun+0x190>)
 80006f0:	f001 fda9 	bl	8002246 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_OFF);
 80006f4:	2200      	movs	r2, #0
 80006f6:	2110      	movs	r1, #16
 80006f8:	484d      	ldr	r0, [pc, #308]	; (8000830 <fsmManualModeRun+0x190>)
 80006fa:	f001 fda4 	bl	8002246 <HAL_GPIO_WritePin>

		// Send duration time of red lights
		sendTimeDuration();
 80006fe:	f001 f807 	bl	8001710 <sendTimeDuration>

		// Switch to MAN_GREEN when press SET button
		if (isButtonPressed(BUTTON_SET))
 8000702:	2001      	movs	r0, #1
 8000704:	f7ff fe50 	bl	80003a8 <isButtonPressed>
 8000708:	4603      	mov	r3, r0
 800070a:	2b00      	cmp	r3, #0
 800070c:	d002      	beq.n	8000714 <fsmManualModeRun+0x74>
		{
			mode = MAN_GREEN;
 800070e:	4b46      	ldr	r3, [pc, #280]	; (8000828 <fsmManualModeRun+0x188>)
 8000710:	2207      	movs	r2, #7
 8000712:	601a      	str	r2, [r3, #0]
		}

		// Switch to TUNING MODE when press MODE button
		if (isButtonPressed(BUTTON_MODE))
 8000714:	2000      	movs	r0, #0
 8000716:	f7ff fe47 	bl	80003a8 <isButtonPressed>
 800071a:	4603      	mov	r3, r0
 800071c:	2b00      	cmp	r3, #0
 800071e:	d07b      	beq.n	8000818 <fsmManualModeRun+0x178>
		{
			mode = INC_RED;
 8000720:	4b41      	ldr	r3, [pc, #260]	; (8000828 <fsmManualModeRun+0x188>)
 8000722:	2209      	movs	r2, #9
 8000724:	601a      	str	r2, [r3, #0]
			time_count = RED_time / 1000;
 8000726:	4b43      	ldr	r3, [pc, #268]	; (8000834 <fsmManualModeRun+0x194>)
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	4a43      	ldr	r2, [pc, #268]	; (8000838 <fsmManualModeRun+0x198>)
 800072c:	fb82 1203 	smull	r1, r2, r2, r3
 8000730:	1192      	asrs	r2, r2, #6
 8000732:	17db      	asrs	r3, r3, #31
 8000734:	1ad3      	subs	r3, r2, r3
 8000736:	4a41      	ldr	r2, [pc, #260]	; (800083c <fsmManualModeRun+0x19c>)
 8000738:	6013      	str	r3, [r2, #0]
			sendModeNoti();
 800073a:	f001 f8eb 	bl	8001914 <sendModeNoti>
		}

		break;
 800073e:	e06b      	b.n	8000818 <fsmManualModeRun+0x178>

	case MAN_GREEN:

		// Turn on green lights
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000740:	2200      	movs	r2, #0
 8000742:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000746:	4839      	ldr	r0, [pc, #228]	; (800082c <fsmManualModeRun+0x18c>)
 8000748:	f001 fd7d 	bl	8002246 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 800074c:	2201      	movs	r2, #1
 800074e:	2108      	movs	r1, #8
 8000750:	4837      	ldr	r0, [pc, #220]	; (8000830 <fsmManualModeRun+0x190>)
 8000752:	f001 fd78 	bl	8002246 <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_OFF);
 8000756:	2200      	movs	r2, #0
 8000758:	2120      	movs	r1, #32
 800075a:	4835      	ldr	r0, [pc, #212]	; (8000830 <fsmManualModeRun+0x190>)
 800075c:	f001 fd73 	bl	8002246 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 8000760:	2201      	movs	r2, #1
 8000762:	2110      	movs	r1, #16
 8000764:	4832      	ldr	r0, [pc, #200]	; (8000830 <fsmManualModeRun+0x190>)
 8000766:	f001 fd6e 	bl	8002246 <HAL_GPIO_WritePin>

		// Send duration time of green lights
		sendTimeDuration();
 800076a:	f000 ffd1 	bl	8001710 <sendTimeDuration>

		// Switch to MAN_YELLOW when press SET button
		if (isButtonPressed(BUTTON_SET))
 800076e:	2001      	movs	r0, #1
 8000770:	f7ff fe1a 	bl	80003a8 <isButtonPressed>
 8000774:	4603      	mov	r3, r0
 8000776:	2b00      	cmp	r3, #0
 8000778:	d002      	beq.n	8000780 <fsmManualModeRun+0xe0>
		{
			mode = MAN_YELLOW;
 800077a:	4b2b      	ldr	r3, [pc, #172]	; (8000828 <fsmManualModeRun+0x188>)
 800077c:	2208      	movs	r2, #8
 800077e:	601a      	str	r2, [r3, #0]
		}

		// Switch to TUNING MODE when press MODE button
		if (isButtonPressed(BUTTON_MODE))
 8000780:	2000      	movs	r0, #0
 8000782:	f7ff fe11 	bl	80003a8 <isButtonPressed>
 8000786:	4603      	mov	r3, r0
 8000788:	2b00      	cmp	r3, #0
 800078a:	d047      	beq.n	800081c <fsmManualModeRun+0x17c>
		{
			mode = INC_GREEN;
 800078c:	4b26      	ldr	r3, [pc, #152]	; (8000828 <fsmManualModeRun+0x188>)
 800078e:	220a      	movs	r2, #10
 8000790:	601a      	str	r2, [r3, #0]
			time_count = GREEN_time / 1000;
 8000792:	4b2b      	ldr	r3, [pc, #172]	; (8000840 <fsmManualModeRun+0x1a0>)
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	4a28      	ldr	r2, [pc, #160]	; (8000838 <fsmManualModeRun+0x198>)
 8000798:	fb82 1203 	smull	r1, r2, r2, r3
 800079c:	1192      	asrs	r2, r2, #6
 800079e:	17db      	asrs	r3, r3, #31
 80007a0:	1ad3      	subs	r3, r2, r3
 80007a2:	4a26      	ldr	r2, [pc, #152]	; (800083c <fsmManualModeRun+0x19c>)
 80007a4:	6013      	str	r3, [r2, #0]
			sendModeNoti();
 80007a6:	f001 f8b5 	bl	8001914 <sendModeNoti>
		}

		break;
 80007aa:	e037      	b.n	800081c <fsmManualModeRun+0x17c>

	case MAN_YELLOW:

		// Turn on yellow lights
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 80007ac:	2201      	movs	r2, #1
 80007ae:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80007b2:	481e      	ldr	r0, [pc, #120]	; (800082c <fsmManualModeRun+0x18c>)
 80007b4:	f001 fd47 	bl	8002246 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 80007b8:	2201      	movs	r2, #1
 80007ba:	2108      	movs	r1, #8
 80007bc:	481c      	ldr	r0, [pc, #112]	; (8000830 <fsmManualModeRun+0x190>)
 80007be:	f001 fd42 	bl	8002246 <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 80007c2:	2201      	movs	r2, #1
 80007c4:	2120      	movs	r1, #32
 80007c6:	481a      	ldr	r0, [pc, #104]	; (8000830 <fsmManualModeRun+0x190>)
 80007c8:	f001 fd3d 	bl	8002246 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 80007cc:	2201      	movs	r2, #1
 80007ce:	2110      	movs	r1, #16
 80007d0:	4817      	ldr	r0, [pc, #92]	; (8000830 <fsmManualModeRun+0x190>)
 80007d2:	f001 fd38 	bl	8002246 <HAL_GPIO_WritePin>

		// Send duration time of yellow lights
		sendTimeDuration();
 80007d6:	f000 ff9b 	bl	8001710 <sendTimeDuration>

		// Switch to MAN_RED when press SET button
		if (isButtonPressed(BUTTON_SET))
 80007da:	2001      	movs	r0, #1
 80007dc:	f7ff fde4 	bl	80003a8 <isButtonPressed>
 80007e0:	4603      	mov	r3, r0
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d002      	beq.n	80007ec <fsmManualModeRun+0x14c>
		{
			mode = MAN_RED;
 80007e6:	4b10      	ldr	r3, [pc, #64]	; (8000828 <fsmManualModeRun+0x188>)
 80007e8:	2206      	movs	r2, #6
 80007ea:	601a      	str	r2, [r3, #0]
		}

		// Switch to TUNING MODE when press MODE button
		if (isButtonPressed(BUTTON_MODE))
 80007ec:	2000      	movs	r0, #0
 80007ee:	f7ff fddb 	bl	80003a8 <isButtonPressed>
 80007f2:	4603      	mov	r3, r0
 80007f4:	2b00      	cmp	r3, #0
 80007f6:	d013      	beq.n	8000820 <fsmManualModeRun+0x180>
		{
			mode = INC_YELLOW;
 80007f8:	4b0b      	ldr	r3, [pc, #44]	; (8000828 <fsmManualModeRun+0x188>)
 80007fa:	220b      	movs	r2, #11
 80007fc:	601a      	str	r2, [r3, #0]
			time_count = YELLOW_time / 1000;
 80007fe:	4b11      	ldr	r3, [pc, #68]	; (8000844 <fsmManualModeRun+0x1a4>)
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	4a0d      	ldr	r2, [pc, #52]	; (8000838 <fsmManualModeRun+0x198>)
 8000804:	fb82 1203 	smull	r1, r2, r2, r3
 8000808:	1192      	asrs	r2, r2, #6
 800080a:	17db      	asrs	r3, r3, #31
 800080c:	1ad3      	subs	r3, r2, r3
 800080e:	4a0b      	ldr	r2, [pc, #44]	; (800083c <fsmManualModeRun+0x19c>)
 8000810:	6013      	str	r3, [r2, #0]
			sendModeNoti();
 8000812:	f001 f87f 	bl	8001914 <sendModeNoti>
		}

		break;
 8000816:	e003      	b.n	8000820 <fsmManualModeRun+0x180>
		break;
 8000818:	bf00      	nop
 800081a:	e002      	b.n	8000822 <fsmManualModeRun+0x182>
		break;
 800081c:	bf00      	nop
 800081e:	e000      	b.n	8000822 <fsmManualModeRun+0x182>
		break;
 8000820:	bf00      	nop
	}
}
 8000822:	bf00      	nop
 8000824:	bd80      	pop	{r7, pc}
 8000826:	bf00      	nop
 8000828:	200000c0 	.word	0x200000c0
 800082c:	40010800 	.word	0x40010800
 8000830:	40010c00 	.word	0x40010c00
 8000834:	20000018 	.word	0x20000018
 8000838:	10624dd3 	.word	0x10624dd3
 800083c:	200000bc 	.word	0x200000bc
 8000840:	2000001c 	.word	0x2000001c
 8000844:	20000020 	.word	0x20000020

08000848 <fsmVerPedRun>:
int hor_ped = PED_OFF;
int buzzer_time = BUZZER_time;
int pul = BUZZER_pul;
int state = 0;

void fsmVerPedRun(){
 8000848:	b580      	push	{r7, lr}
 800084a:	af00      	add	r7, sp, #0
	switch(ver_ped){
 800084c:	4b53      	ldr	r3, [pc, #332]	; (800099c <fsmVerPedRun+0x154>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	3b0c      	subs	r3, #12
 8000852:	2b04      	cmp	r3, #4
 8000854:	f200 8094 	bhi.w	8000980 <fsmVerPedRun+0x138>
 8000858:	a201      	add	r2, pc, #4	; (adr r2, 8000860 <fsmVerPedRun+0x18>)
 800085a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800085e:	bf00      	nop
 8000860:	08000875 	.word	0x08000875
 8000864:	080008a5 	.word	0x080008a5
 8000868:	080008e3 	.word	0x080008e3
 800086c:	0800091b 	.word	0x0800091b
 8000870:	08000959 	.word	0x08000959
		case PED_OFF:
			//Reset buzzer
			buzzer_time = BUZZER_time;
 8000874:	4b4a      	ldr	r3, [pc, #296]	; (80009a0 <fsmVerPedRun+0x158>)
 8000876:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800087a:	601a      	str	r2, [r3, #0]
			pul = BUZZER_pul;
 800087c:	4b49      	ldr	r3, [pc, #292]	; (80009a4 <fsmVerPedRun+0x15c>)
 800087e:	f240 2226 	movw	r2, #550	; 0x226
 8000882:	601a      	str	r2, [r3, #0]
			state = 0;
 8000884:	4b48      	ldr	r3, [pc, #288]	; (80009a8 <fsmVerPedRun+0x160>)
 8000886:	2200      	movs	r2, #0
 8000888:	601a      	str	r2, [r3, #0]
			//Bat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 800088a:	2003      	movs	r0, #3
 800088c:	f7ff fd8c 	bl	80003a8 <isButtonPressed>
 8000890:	4603      	mov	r3, r0
 8000892:	2b00      	cmp	r3, #0
 8000894:	d076      	beq.n	8000984 <fsmVerPedRun+0x13c>
				ver_ped = PED_ON;
 8000896:	4b41      	ldr	r3, [pc, #260]	; (800099c <fsmVerPedRun+0x154>)
 8000898:	220d      	movs	r2, #13
 800089a:	601a      	str	r2, [r3, #0]
				hor_ped = PED_ON;
 800089c:	4b43      	ldr	r3, [pc, #268]	; (80009ac <fsmVerPedRun+0x164>)
 800089e:	220d      	movs	r2, #13
 80008a0:	601a      	str	r2, [r3, #0]
			}
			break;
 80008a2:	e06f      	b.n	8000984 <fsmVerPedRun+0x13c>
		case PED_ON:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 80008a4:	2003      	movs	r0, #3
 80008a6:	f7ff fd7f 	bl	80003a8 <isButtonPressed>
 80008aa:	4603      	mov	r3, r0
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	d005      	beq.n	80008bc <fsmVerPedRun+0x74>
				ver_ped = PED_OFF;
 80008b0:	4b3a      	ldr	r3, [pc, #232]	; (800099c <fsmVerPedRun+0x154>)
 80008b2:	220c      	movs	r2, #12
 80008b4:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 80008b6:	4b3d      	ldr	r3, [pc, #244]	; (80009ac <fsmVerPedRun+0x164>)
 80008b8:	220c      	movs	r2, #12
 80008ba:	601a      	str	r2, [r3, #0]
			}
			//Cho phep di
			if(vertical_status == AUTO_RED){
 80008bc:	4b3c      	ldr	r3, [pc, #240]	; (80009b0 <fsmVerPedRun+0x168>)
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	2b02      	cmp	r3, #2
 80008c2:	d102      	bne.n	80008ca <fsmVerPedRun+0x82>
				ver_ped = WALK_ALLOW;
 80008c4:	4b35      	ldr	r3, [pc, #212]	; (800099c <fsmVerPedRun+0x154>)
 80008c6:	220e      	movs	r2, #14
 80008c8:	601a      	str	r2, [r3, #0]
			}
			//Dung lai
			if((vertical_status == AUTO_GREEN) || (vertical_status == AUTO_YELLOW)){
 80008ca:	4b39      	ldr	r3, [pc, #228]	; (80009b0 <fsmVerPedRun+0x168>)
 80008cc:	681b      	ldr	r3, [r3, #0]
 80008ce:	2b03      	cmp	r3, #3
 80008d0:	d003      	beq.n	80008da <fsmVerPedRun+0x92>
 80008d2:	4b37      	ldr	r3, [pc, #220]	; (80009b0 <fsmVerPedRun+0x168>)
 80008d4:	681b      	ldr	r3, [r3, #0]
 80008d6:	2b04      	cmp	r3, #4
 80008d8:	d156      	bne.n	8000988 <fsmVerPedRun+0x140>
				ver_ped = WALK_STOP;
 80008da:	4b30      	ldr	r3, [pc, #192]	; (800099c <fsmVerPedRun+0x154>)
 80008dc:	2210      	movs	r2, #16
 80008de:	601a      	str	r2, [r3, #0]
			}
			break;
 80008e0:	e052      	b.n	8000988 <fsmVerPedRun+0x140>
		case WALK_ALLOW:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 80008e2:	2003      	movs	r0, #3
 80008e4:	f7ff fd60 	bl	80003a8 <isButtonPressed>
 80008e8:	4603      	mov	r3, r0
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	d005      	beq.n	80008fa <fsmVerPedRun+0xb2>
				ver_ped = PED_OFF;
 80008ee:	4b2b      	ldr	r3, [pc, #172]	; (800099c <fsmVerPedRun+0x154>)
 80008f0:	220c      	movs	r2, #12
 80008f2:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 80008f4:	4b2d      	ldr	r3, [pc, #180]	; (80009ac <fsmVerPedRun+0x164>)
 80008f6:	220c      	movs	r2, #12
 80008f8:	601a      	str	r2, [r3, #0]
			}
			//Thoi gian con 3s -> Bat buzzer
			if(currentCounter(1) <= 3000){
 80008fa:	2001      	movs	r0, #1
 80008fc:	f000 fe3e 	bl	800157c <currentCounter>
 8000900:	4603      	mov	r3, r0
 8000902:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000906:	4293      	cmp	r3, r2
 8000908:	dc40      	bgt.n	800098c <fsmVerPedRun+0x144>
				ver_ped = BUZZER_ON;
 800090a:	4b24      	ldr	r3, [pc, #144]	; (800099c <fsmVerPedRun+0x154>)
 800090c:	220f      	movs	r2, #15
 800090e:	601a      	str	r2, [r3, #0]
				setTimer(3, 100);
 8000910:	2164      	movs	r1, #100	; 0x64
 8000912:	2003      	movs	r0, #3
 8000914:	f000 fe56 	bl	80015c4 <setTimer>
			}
			break;
 8000918:	e038      	b.n	800098c <fsmVerPedRun+0x144>
		case BUZZER_ON:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 800091a:	2003      	movs	r0, #3
 800091c:	f7ff fd44 	bl	80003a8 <isButtonPressed>
 8000920:	4603      	mov	r3, r0
 8000922:	2b00      	cmp	r3, #0
 8000924:	d005      	beq.n	8000932 <fsmVerPedRun+0xea>
				ver_ped = PED_OFF;
 8000926:	4b1d      	ldr	r3, [pc, #116]	; (800099c <fsmVerPedRun+0x154>)
 8000928:	220c      	movs	r2, #12
 800092a:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 800092c:	4b1f      	ldr	r3, [pc, #124]	; (80009ac <fsmVerPedRun+0x164>)
 800092e:	220c      	movs	r2, #12
 8000930:	601a      	str	r2, [r3, #0]
			}
			//Dung lai
			if(vertical_status == AUTO_GREEN){
 8000932:	4b1f      	ldr	r3, [pc, #124]	; (80009b0 <fsmVerPedRun+0x168>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	2b03      	cmp	r3, #3
 8000938:	d12a      	bne.n	8000990 <fsmVerPedRun+0x148>
				ver_ped = WALK_STOP;
 800093a:	4b18      	ldr	r3, [pc, #96]	; (800099c <fsmVerPedRun+0x154>)
 800093c:	2210      	movs	r2, #16
 800093e:	601a      	str	r2, [r3, #0]
				//Reset buzzer
				buzzer_time = BUZZER_time;
 8000940:	4b17      	ldr	r3, [pc, #92]	; (80009a0 <fsmVerPedRun+0x158>)
 8000942:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000946:	601a      	str	r2, [r3, #0]
				pul = BUZZER_pul;
 8000948:	4b16      	ldr	r3, [pc, #88]	; (80009a4 <fsmVerPedRun+0x15c>)
 800094a:	f240 2226 	movw	r2, #550	; 0x226
 800094e:	601a      	str	r2, [r3, #0]
				state = 0;
 8000950:	4b15      	ldr	r3, [pc, #84]	; (80009a8 <fsmVerPedRun+0x160>)
 8000952:	2200      	movs	r2, #0
 8000954:	601a      	str	r2, [r3, #0]
			}
			break;
 8000956:	e01b      	b.n	8000990 <fsmVerPedRun+0x148>
		case WALK_STOP:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 8000958:	2003      	movs	r0, #3
 800095a:	f7ff fd25 	bl	80003a8 <isButtonPressed>
 800095e:	4603      	mov	r3, r0
 8000960:	2b00      	cmp	r3, #0
 8000962:	d005      	beq.n	8000970 <fsmVerPedRun+0x128>
				ver_ped = PED_OFF;
 8000964:	4b0d      	ldr	r3, [pc, #52]	; (800099c <fsmVerPedRun+0x154>)
 8000966:	220c      	movs	r2, #12
 8000968:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 800096a:	4b10      	ldr	r3, [pc, #64]	; (80009ac <fsmVerPedRun+0x164>)
 800096c:	220c      	movs	r2, #12
 800096e:	601a      	str	r2, [r3, #0]
			}
			//Cho phep di
			if(vertical_status == AUTO_RED){
 8000970:	4b0f      	ldr	r3, [pc, #60]	; (80009b0 <fsmVerPedRun+0x168>)
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	2b02      	cmp	r3, #2
 8000976:	d10d      	bne.n	8000994 <fsmVerPedRun+0x14c>
				ver_ped = WALK_ALLOW;
 8000978:	4b08      	ldr	r3, [pc, #32]	; (800099c <fsmVerPedRun+0x154>)
 800097a:	220e      	movs	r2, #14
 800097c:	601a      	str	r2, [r3, #0]
			}
			break;
 800097e:	e009      	b.n	8000994 <fsmVerPedRun+0x14c>
		default:
			break;
 8000980:	bf00      	nop
 8000982:	e008      	b.n	8000996 <fsmVerPedRun+0x14e>
			break;
 8000984:	bf00      	nop
 8000986:	e006      	b.n	8000996 <fsmVerPedRun+0x14e>
			break;
 8000988:	bf00      	nop
 800098a:	e004      	b.n	8000996 <fsmVerPedRun+0x14e>
			break;
 800098c:	bf00      	nop
 800098e:	e002      	b.n	8000996 <fsmVerPedRun+0x14e>
			break;
 8000990:	bf00      	nop
 8000992:	e000      	b.n	8000996 <fsmVerPedRun+0x14e>
			break;
 8000994:	bf00      	nop
	}
}
 8000996:	bf00      	nop
 8000998:	bd80      	pop	{r7, pc}
 800099a:	bf00      	nop
 800099c:	20000000 	.word	0x20000000
 80009a0:	20000008 	.word	0x20000008
 80009a4:	2000000c 	.word	0x2000000c
 80009a8:	200000b8 	.word	0x200000b8
 80009ac:	20000004 	.word	0x20000004
 80009b0:	200000b4 	.word	0x200000b4

080009b4 <fsmHorPedRun>:

void fsmHorPedRun(){
 80009b4:	b580      	push	{r7, lr}
 80009b6:	af00      	add	r7, sp, #0
	switch(hor_ped){
 80009b8:	4b53      	ldr	r3, [pc, #332]	; (8000b08 <fsmHorPedRun+0x154>)
 80009ba:	681b      	ldr	r3, [r3, #0]
 80009bc:	3b0c      	subs	r3, #12
 80009be:	2b04      	cmp	r3, #4
 80009c0:	f200 8094 	bhi.w	8000aec <fsmHorPedRun+0x138>
 80009c4:	a201      	add	r2, pc, #4	; (adr r2, 80009cc <fsmHorPedRun+0x18>)
 80009c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009ca:	bf00      	nop
 80009cc:	080009e1 	.word	0x080009e1
 80009d0:	08000a11 	.word	0x08000a11
 80009d4:	08000a4f 	.word	0x08000a4f
 80009d8:	08000a87 	.word	0x08000a87
 80009dc:	08000ac5 	.word	0x08000ac5
		case PED_OFF:
			//Reset buzzer
			buzzer_time = BUZZER_time;
 80009e0:	4b4a      	ldr	r3, [pc, #296]	; (8000b0c <fsmHorPedRun+0x158>)
 80009e2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80009e6:	601a      	str	r2, [r3, #0]
			pul = BUZZER_pul;
 80009e8:	4b49      	ldr	r3, [pc, #292]	; (8000b10 <fsmHorPedRun+0x15c>)
 80009ea:	f240 2226 	movw	r2, #550	; 0x226
 80009ee:	601a      	str	r2, [r3, #0]
			state = 0;
 80009f0:	4b48      	ldr	r3, [pc, #288]	; (8000b14 <fsmHorPedRun+0x160>)
 80009f2:	2200      	movs	r2, #0
 80009f4:	601a      	str	r2, [r3, #0]
			//Bat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 80009f6:	2003      	movs	r0, #3
 80009f8:	f7ff fcd6 	bl	80003a8 <isButtonPressed>
 80009fc:	4603      	mov	r3, r0
 80009fe:	2b00      	cmp	r3, #0
 8000a00:	d076      	beq.n	8000af0 <fsmHorPedRun+0x13c>
				ver_ped = PED_ON;
 8000a02:	4b45      	ldr	r3, [pc, #276]	; (8000b18 <fsmHorPedRun+0x164>)
 8000a04:	220d      	movs	r2, #13
 8000a06:	601a      	str	r2, [r3, #0]
				hor_ped = PED_ON;
 8000a08:	4b3f      	ldr	r3, [pc, #252]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a0a:	220d      	movs	r2, #13
 8000a0c:	601a      	str	r2, [r3, #0]
			}
			break;
 8000a0e:	e06f      	b.n	8000af0 <fsmHorPedRun+0x13c>
		case PED_ON:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 8000a10:	2003      	movs	r0, #3
 8000a12:	f7ff fcc9 	bl	80003a8 <isButtonPressed>
 8000a16:	4603      	mov	r3, r0
 8000a18:	2b00      	cmp	r3, #0
 8000a1a:	d005      	beq.n	8000a28 <fsmHorPedRun+0x74>
				ver_ped = PED_OFF;
 8000a1c:	4b3e      	ldr	r3, [pc, #248]	; (8000b18 <fsmHorPedRun+0x164>)
 8000a1e:	220c      	movs	r2, #12
 8000a20:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000a22:	4b39      	ldr	r3, [pc, #228]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a24:	220c      	movs	r2, #12
 8000a26:	601a      	str	r2, [r3, #0]
			}
			//Cho phep di
			if(horizontal_status == AUTO_RED){
 8000a28:	4b3c      	ldr	r3, [pc, #240]	; (8000b1c <fsmHorPedRun+0x168>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
 8000a2c:	2b02      	cmp	r3, #2
 8000a2e:	d102      	bne.n	8000a36 <fsmHorPedRun+0x82>
				hor_ped = WALK_ALLOW;
 8000a30:	4b35      	ldr	r3, [pc, #212]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a32:	220e      	movs	r2, #14
 8000a34:	601a      	str	r2, [r3, #0]
			}
			//Dung lai
			if((horizontal_status == AUTO_GREEN) || (horizontal_status == AUTO_YELLOW)){
 8000a36:	4b39      	ldr	r3, [pc, #228]	; (8000b1c <fsmHorPedRun+0x168>)
 8000a38:	681b      	ldr	r3, [r3, #0]
 8000a3a:	2b03      	cmp	r3, #3
 8000a3c:	d003      	beq.n	8000a46 <fsmHorPedRun+0x92>
 8000a3e:	4b37      	ldr	r3, [pc, #220]	; (8000b1c <fsmHorPedRun+0x168>)
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	2b04      	cmp	r3, #4
 8000a44:	d156      	bne.n	8000af4 <fsmHorPedRun+0x140>
				hor_ped = WALK_STOP;
 8000a46:	4b30      	ldr	r3, [pc, #192]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a48:	2210      	movs	r2, #16
 8000a4a:	601a      	str	r2, [r3, #0]
			}
			break;
 8000a4c:	e052      	b.n	8000af4 <fsmHorPedRun+0x140>
		case WALK_ALLOW:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 8000a4e:	2003      	movs	r0, #3
 8000a50:	f7ff fcaa 	bl	80003a8 <isButtonPressed>
 8000a54:	4603      	mov	r3, r0
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	d005      	beq.n	8000a66 <fsmHorPedRun+0xb2>
				ver_ped = PED_OFF;
 8000a5a:	4b2f      	ldr	r3, [pc, #188]	; (8000b18 <fsmHorPedRun+0x164>)
 8000a5c:	220c      	movs	r2, #12
 8000a5e:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000a60:	4b29      	ldr	r3, [pc, #164]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a62:	220c      	movs	r2, #12
 8000a64:	601a      	str	r2, [r3, #0]
			}
			//Thoi gian con 3s -> Bat buzzer
			if(currentCounter(0) <= 3000){
 8000a66:	2000      	movs	r0, #0
 8000a68:	f000 fd88 	bl	800157c <currentCounter>
 8000a6c:	4603      	mov	r3, r0
 8000a6e:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000a72:	4293      	cmp	r3, r2
 8000a74:	dc40      	bgt.n	8000af8 <fsmHorPedRun+0x144>
				hor_ped = BUZZER_ON;
 8000a76:	4b24      	ldr	r3, [pc, #144]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a78:	220f      	movs	r2, #15
 8000a7a:	601a      	str	r2, [r3, #0]
				setTimer(2, 100);
 8000a7c:	2164      	movs	r1, #100	; 0x64
 8000a7e:	2002      	movs	r0, #2
 8000a80:	f000 fda0 	bl	80015c4 <setTimer>
			}
			break;
 8000a84:	e038      	b.n	8000af8 <fsmHorPedRun+0x144>
		case BUZZER_ON:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 8000a86:	2003      	movs	r0, #3
 8000a88:	f7ff fc8e 	bl	80003a8 <isButtonPressed>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d005      	beq.n	8000a9e <fsmHorPedRun+0xea>
				ver_ped = PED_OFF;
 8000a92:	4b21      	ldr	r3, [pc, #132]	; (8000b18 <fsmHorPedRun+0x164>)
 8000a94:	220c      	movs	r2, #12
 8000a96:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000a98:	4b1b      	ldr	r3, [pc, #108]	; (8000b08 <fsmHorPedRun+0x154>)
 8000a9a:	220c      	movs	r2, #12
 8000a9c:	601a      	str	r2, [r3, #0]
			}
			//Dung lai
			if(horizontal_status == AUTO_GREEN){
 8000a9e:	4b1f      	ldr	r3, [pc, #124]	; (8000b1c <fsmHorPedRun+0x168>)
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	2b03      	cmp	r3, #3
 8000aa4:	d12a      	bne.n	8000afc <fsmHorPedRun+0x148>
				hor_ped = WALK_STOP;
 8000aa6:	4b18      	ldr	r3, [pc, #96]	; (8000b08 <fsmHorPedRun+0x154>)
 8000aa8:	2210      	movs	r2, #16
 8000aaa:	601a      	str	r2, [r3, #0]
				//Reset buzzer
				buzzer_time = BUZZER_time;
 8000aac:	4b17      	ldr	r3, [pc, #92]	; (8000b0c <fsmHorPedRun+0x158>)
 8000aae:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000ab2:	601a      	str	r2, [r3, #0]
				pul = BUZZER_pul;
 8000ab4:	4b16      	ldr	r3, [pc, #88]	; (8000b10 <fsmHorPedRun+0x15c>)
 8000ab6:	f240 2226 	movw	r2, #550	; 0x226
 8000aba:	601a      	str	r2, [r3, #0]
				state = 0;
 8000abc:	4b15      	ldr	r3, [pc, #84]	; (8000b14 <fsmHorPedRun+0x160>)
 8000abe:	2200      	movs	r2, #0
 8000ac0:	601a      	str	r2, [r3, #0]
			}
			break;
 8000ac2:	e01b      	b.n	8000afc <fsmHorPedRun+0x148>
		case WALK_STOP:
			//Tat che do nguoi di bo
			if(isButtonPressed(BUTTON_PED)){
 8000ac4:	2003      	movs	r0, #3
 8000ac6:	f7ff fc6f 	bl	80003a8 <isButtonPressed>
 8000aca:	4603      	mov	r3, r0
 8000acc:	2b00      	cmp	r3, #0
 8000ace:	d005      	beq.n	8000adc <fsmHorPedRun+0x128>
				ver_ped = PED_OFF;
 8000ad0:	4b11      	ldr	r3, [pc, #68]	; (8000b18 <fsmHorPedRun+0x164>)
 8000ad2:	220c      	movs	r2, #12
 8000ad4:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000ad6:	4b0c      	ldr	r3, [pc, #48]	; (8000b08 <fsmHorPedRun+0x154>)
 8000ad8:	220c      	movs	r2, #12
 8000ada:	601a      	str	r2, [r3, #0]
			}
			//Cho phep di
			if(horizontal_status == AUTO_RED){
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <fsmHorPedRun+0x168>)
 8000ade:	681b      	ldr	r3, [r3, #0]
 8000ae0:	2b02      	cmp	r3, #2
 8000ae2:	d10d      	bne.n	8000b00 <fsmHorPedRun+0x14c>
				hor_ped = WALK_ALLOW;
 8000ae4:	4b08      	ldr	r3, [pc, #32]	; (8000b08 <fsmHorPedRun+0x154>)
 8000ae6:	220e      	movs	r2, #14
 8000ae8:	601a      	str	r2, [r3, #0]
			}
			break;
 8000aea:	e009      	b.n	8000b00 <fsmHorPedRun+0x14c>
		default:
			break;
 8000aec:	bf00      	nop
 8000aee:	e008      	b.n	8000b02 <fsmHorPedRun+0x14e>
			break;
 8000af0:	bf00      	nop
 8000af2:	e006      	b.n	8000b02 <fsmHorPedRun+0x14e>
			break;
 8000af4:	bf00      	nop
 8000af6:	e004      	b.n	8000b02 <fsmHorPedRun+0x14e>
			break;
 8000af8:	bf00      	nop
 8000afa:	e002      	b.n	8000b02 <fsmHorPedRun+0x14e>
			break;
 8000afc:	bf00      	nop
 8000afe:	e000      	b.n	8000b02 <fsmHorPedRun+0x14e>
			break;
 8000b00:	bf00      	nop
	}
}
 8000b02:	bf00      	nop
 8000b04:	bd80      	pop	{r7, pc}
 8000b06:	bf00      	nop
 8000b08:	20000004 	.word	0x20000004
 8000b0c:	20000008 	.word	0x20000008
 8000b10:	2000000c 	.word	0x2000000c
 8000b14:	200000b8 	.word	0x200000b8
 8000b18:	20000000 	.word	0x20000000
 8000b1c:	200000b0 	.word	0x200000b0

08000b20 <fsmPedestrianModeRun>:

void fsmPedestrianModeRun() {
 8000b20:	b580      	push	{r7, lr}
 8000b22:	af00      	add	r7, sp, #0
	fsmVerPedRun();
 8000b24:	f7ff fe90 	bl	8000848 <fsmVerPedRun>
	fsmHorPedRun();
 8000b28:	f7ff ff44 	bl	80009b4 <fsmHorPedRun>

	switch(ver_ped){
 8000b2c:	4ba2      	ldr	r3, [pc, #648]	; (8000db8 <fsmPedestrianModeRun+0x298>)
 8000b2e:	681b      	ldr	r3, [r3, #0]
 8000b30:	3b0c      	subs	r3, #12
 8000b32:	2b04      	cmp	r3, #4
 8000b34:	f200 8098 	bhi.w	8000c68 <fsmPedestrianModeRun+0x148>
 8000b38:	a201      	add	r2, pc, #4	; (adr r2, 8000b40 <fsmPedestrianModeRun+0x20>)
 8000b3a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b3e:	bf00      	nop
 8000b40:	08000b55 	.word	0x08000b55
 8000b44:	08000c69 	.word	0x08000c69
 8000b48:	08000b75 	.word	0x08000b75
 8000b4c:	08000b8d 	.word	0x08000b8d
 8000b50:	08000c49 	.word	0x08000c49
		case PED_OFF:
			HAL_GPIO_WritePin(LED_RED_P2_GPIO_Port, LED_RED_P2_Pin, LED_OFF);
 8000b54:	2200      	movs	r2, #0
 8000b56:	2104      	movs	r1, #4
 8000b58:	4898      	ldr	r0, [pc, #608]	; (8000dbc <fsmPedestrianModeRun+0x29c>)
 8000b5a:	f001 fb74 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P2_GPIO_Port, LED_GREEN_P2_Pin, LED_OFF);
 8000b5e:	2200      	movs	r2, #0
 8000b60:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000b64:	4896      	ldr	r0, [pc, #600]	; (8000dc0 <fsmPedestrianModeRun+0x2a0>)
 8000b66:	f001 fb6e 	bl	8002246 <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, 0);
 8000b6a:	4b96      	ldr	r3, [pc, #600]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000b6c:	681b      	ldr	r3, [r3, #0]
 8000b6e:	2200      	movs	r2, #0
 8000b70:	639a      	str	r2, [r3, #56]	; 0x38
			break;
 8000b72:	e07c      	b.n	8000c6e <fsmPedestrianModeRun+0x14e>
		case PED_ON:
			break;
		case WALK_ALLOW:
			HAL_GPIO_WritePin(LED_RED_P2_GPIO_Port, LED_RED_P2_Pin, LED_OFF);
 8000b74:	2200      	movs	r2, #0
 8000b76:	2104      	movs	r1, #4
 8000b78:	4890      	ldr	r0, [pc, #576]	; (8000dbc <fsmPedestrianModeRun+0x29c>)
 8000b7a:	f001 fb64 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P2_GPIO_Port, LED_GREEN_P2_Pin, LED_ON);
 8000b7e:	2201      	movs	r2, #1
 8000b80:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000b84:	488e      	ldr	r0, [pc, #568]	; (8000dc0 <fsmPedestrianModeRun+0x2a0>)
 8000b86:	f001 fb5e 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 8000b8a:	e070      	b.n	8000c6e <fsmPedestrianModeRun+0x14e>
		case BUZZER_ON:
			//Buzzer se to dan va nhanh hon khi thoi gian gan het
			if(isTimerUp(3) && state == 1){
 8000b8c:	2003      	movs	r0, #3
 8000b8e:	f000 fd05 	bl	800159c <isTimerUp>
 8000b92:	4603      	mov	r3, r0
 8000b94:	2b00      	cmp	r3, #0
 8000b96:	d028      	beq.n	8000bea <fsmPedestrianModeRun+0xca>
 8000b98:	4b8b      	ldr	r3, [pc, #556]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	2b01      	cmp	r3, #1
 8000b9e:	d124      	bne.n	8000bea <fsmPedestrianModeRun+0xca>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, pul);
 8000ba0:	4b8a      	ldr	r3, [pc, #552]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000ba2:	681a      	ldr	r2, [r3, #0]
 8000ba4:	4b87      	ldr	r3, [pc, #540]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000ba6:	681b      	ldr	r3, [r3, #0]
 8000ba8:	639a      	str	r2, [r3, #56]	; 0x38
				setTimer(3, buzzer_time);
 8000baa:	4b89      	ldr	r3, [pc, #548]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000bac:	681b      	ldr	r3, [r3, #0]
 8000bae:	4619      	mov	r1, r3
 8000bb0:	2003      	movs	r0, #3
 8000bb2:	f000 fd07 	bl	80015c4 <setTimer>
				state = 1 - state;
 8000bb6:	4b84      	ldr	r3, [pc, #528]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	f1c3 0301 	rsb	r3, r3, #1
 8000bbe:	4a82      	ldr	r2, [pc, #520]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000bc0:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000bc2:	4b82      	ldr	r3, [pc, #520]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000bca:	4293      	cmp	r3, r2
 8000bcc:	dc04      	bgt.n	8000bd8 <fsmPedestrianModeRun+0xb8>
 8000bce:	4b7f      	ldr	r3, [pc, #508]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	3364      	adds	r3, #100	; 0x64
 8000bd4:	4a7d      	ldr	r2, [pc, #500]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000bd6:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000bd8:	4b7d      	ldr	r3, [pc, #500]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	2b64      	cmp	r3, #100	; 0x64
 8000bde:	dd04      	ble.n	8000bea <fsmPedestrianModeRun+0xca>
 8000be0:	4b7b      	ldr	r3, [pc, #492]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000be2:	681b      	ldr	r3, [r3, #0]
 8000be4:	3b64      	subs	r3, #100	; 0x64
 8000be6:	4a7a      	ldr	r2, [pc, #488]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000be8:	6013      	str	r3, [r2, #0]
			}
			if(isTimerUp(3) && state == 0){
 8000bea:	2003      	movs	r0, #3
 8000bec:	f000 fcd6 	bl	800159c <isTimerUp>
 8000bf0:	4603      	mov	r3, r0
 8000bf2:	2b00      	cmp	r3, #0
 8000bf4:	d03a      	beq.n	8000c6c <fsmPedestrianModeRun+0x14c>
 8000bf6:	4b74      	ldr	r3, [pc, #464]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000bf8:	681b      	ldr	r3, [r3, #0]
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	d136      	bne.n	8000c6c <fsmPedestrianModeRun+0x14c>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, 0);
 8000bfe:	4b71      	ldr	r3, [pc, #452]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	2200      	movs	r2, #0
 8000c04:	639a      	str	r2, [r3, #56]	; 0x38
				setTimer(3, buzzer_time);
 8000c06:	4b72      	ldr	r3, [pc, #456]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000c08:	681b      	ldr	r3, [r3, #0]
 8000c0a:	4619      	mov	r1, r3
 8000c0c:	2003      	movs	r0, #3
 8000c0e:	f000 fcd9 	bl	80015c4 <setTimer>
				state = 1 - state;
 8000c12:	4b6d      	ldr	r3, [pc, #436]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	f1c3 0301 	rsb	r3, r3, #1
 8000c1a:	4a6b      	ldr	r2, [pc, #428]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000c1c:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000c1e:	4b6b      	ldr	r3, [pc, #428]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000c20:	681b      	ldr	r3, [r3, #0]
 8000c22:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000c26:	4293      	cmp	r3, r2
 8000c28:	dc04      	bgt.n	8000c34 <fsmPedestrianModeRun+0x114>
 8000c2a:	4b68      	ldr	r3, [pc, #416]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000c2c:	681b      	ldr	r3, [r3, #0]
 8000c2e:	3364      	adds	r3, #100	; 0x64
 8000c30:	4a66      	ldr	r2, [pc, #408]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000c32:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000c34:	4b66      	ldr	r3, [pc, #408]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000c36:	681b      	ldr	r3, [r3, #0]
 8000c38:	2b64      	cmp	r3, #100	; 0x64
 8000c3a:	dd17      	ble.n	8000c6c <fsmPedestrianModeRun+0x14c>
 8000c3c:	4b64      	ldr	r3, [pc, #400]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	3b64      	subs	r3, #100	; 0x64
 8000c42:	4a63      	ldr	r2, [pc, #396]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000c44:	6013      	str	r3, [r2, #0]
			}
			break;
 8000c46:	e011      	b.n	8000c6c <fsmPedestrianModeRun+0x14c>
		case WALK_STOP:
			HAL_GPIO_WritePin(LED_RED_P2_GPIO_Port, LED_RED_P2_Pin, LED_ON);
 8000c48:	2201      	movs	r2, #1
 8000c4a:	2104      	movs	r1, #4
 8000c4c:	485b      	ldr	r0, [pc, #364]	; (8000dbc <fsmPedestrianModeRun+0x29c>)
 8000c4e:	f001 fafa 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P2_GPIO_Port, LED_GREEN_P2_Pin, LED_OFF);
 8000c52:	2200      	movs	r2, #0
 8000c54:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000c58:	4859      	ldr	r0, [pc, #356]	; (8000dc0 <fsmPedestrianModeRun+0x2a0>)
 8000c5a:	f001 faf4 	bl	8002246 <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, 0);
 8000c5e:	4b59      	ldr	r3, [pc, #356]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000c60:	681b      	ldr	r3, [r3, #0]
 8000c62:	2200      	movs	r2, #0
 8000c64:	639a      	str	r2, [r3, #56]	; 0x38
			break;
 8000c66:	e002      	b.n	8000c6e <fsmPedestrianModeRun+0x14e>
		default:
			break;
 8000c68:	bf00      	nop
 8000c6a:	e000      	b.n	8000c6e <fsmPedestrianModeRun+0x14e>
			break;
 8000c6c:	bf00      	nop
	}

	switch(hor_ped){
 8000c6e:	4b59      	ldr	r3, [pc, #356]	; (8000dd4 <fsmPedestrianModeRun+0x2b4>)
 8000c70:	681b      	ldr	r3, [r3, #0]
 8000c72:	3b0c      	subs	r3, #12
 8000c74:	2b04      	cmp	r3, #4
 8000c76:	f200 809a 	bhi.w	8000dae <fsmPedestrianModeRun+0x28e>
 8000c7a:	a201      	add	r2, pc, #4	; (adr r2, 8000c80 <fsmPedestrianModeRun+0x160>)
 8000c7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c80:	08000c95 	.word	0x08000c95
 8000c84:	08000daf 	.word	0x08000daf
 8000c88:	08000cb7 	.word	0x08000cb7
 8000c8c:	08000cd1 	.word	0x08000cd1
 8000c90:	08000d8d 	.word	0x08000d8d
		case PED_OFF:
			HAL_GPIO_WritePin(LED_RED_P1_GPIO_Port, LED_RED_P1_Pin, LED_OFF);
 8000c94:	2200      	movs	r2, #0
 8000c96:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000c9a:	4848      	ldr	r0, [pc, #288]	; (8000dbc <fsmPedestrianModeRun+0x29c>)
 8000c9c:	f001 fad3 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P1_GPIO_Port, LED_GREEN_P1_Pin, LED_OFF);
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000ca6:	4846      	ldr	r0, [pc, #280]	; (8000dc0 <fsmPedestrianModeRun+0x2a0>)
 8000ca8:	f001 facd 	bl	8002246 <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, 0);
 8000cac:	4b45      	ldr	r3, [pc, #276]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000cae:	681b      	ldr	r3, [r3, #0]
 8000cb0:	2200      	movs	r2, #0
 8000cb2:	635a      	str	r2, [r3, #52]	; 0x34
			break;
 8000cb4:	e07e      	b.n	8000db4 <fsmPedestrianModeRun+0x294>
		case PED_ON:
			break;
		case WALK_ALLOW:
			HAL_GPIO_WritePin(LED_RED_P1_GPIO_Port, LED_RED_P1_Pin, LED_OFF);
 8000cb6:	2200      	movs	r2, #0
 8000cb8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000cbc:	483f      	ldr	r0, [pc, #252]	; (8000dbc <fsmPedestrianModeRun+0x29c>)
 8000cbe:	f001 fac2 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P1_GPIO_Port, LED_GREEN_P1_Pin, LED_ON);
 8000cc2:	2201      	movs	r2, #1
 8000cc4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000cc8:	483d      	ldr	r0, [pc, #244]	; (8000dc0 <fsmPedestrianModeRun+0x2a0>)
 8000cca:	f001 fabc 	bl	8002246 <HAL_GPIO_WritePin>
			break;
 8000cce:	e071      	b.n	8000db4 <fsmPedestrianModeRun+0x294>
		case BUZZER_ON:
			//Buzzer se to dan va nhanh hon khi thoi gian gan het
			if(isTimerUp(2) && state == 1){
 8000cd0:	2002      	movs	r0, #2
 8000cd2:	f000 fc63 	bl	800159c <isTimerUp>
 8000cd6:	4603      	mov	r3, r0
 8000cd8:	2b00      	cmp	r3, #0
 8000cda:	d028      	beq.n	8000d2e <fsmPedestrianModeRun+0x20e>
 8000cdc:	4b3a      	ldr	r3, [pc, #232]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000cde:	681b      	ldr	r3, [r3, #0]
 8000ce0:	2b01      	cmp	r3, #1
 8000ce2:	d124      	bne.n	8000d2e <fsmPedestrianModeRun+0x20e>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, pul);
 8000ce4:	4b39      	ldr	r3, [pc, #228]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000ce6:	681a      	ldr	r2, [r3, #0]
 8000ce8:	4b36      	ldr	r3, [pc, #216]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000cea:	681b      	ldr	r3, [r3, #0]
 8000cec:	635a      	str	r2, [r3, #52]	; 0x34
				setTimer(2, buzzer_time);
 8000cee:	4b38      	ldr	r3, [pc, #224]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000cf0:	681b      	ldr	r3, [r3, #0]
 8000cf2:	4619      	mov	r1, r3
 8000cf4:	2002      	movs	r0, #2
 8000cf6:	f000 fc65 	bl	80015c4 <setTimer>
				state = 1 - state;
 8000cfa:	4b33      	ldr	r3, [pc, #204]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000cfc:	681b      	ldr	r3, [r3, #0]
 8000cfe:	f1c3 0301 	rsb	r3, r3, #1
 8000d02:	4a31      	ldr	r2, [pc, #196]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000d04:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000d06:	4b31      	ldr	r3, [pc, #196]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000d0e:	4293      	cmp	r3, r2
 8000d10:	dc04      	bgt.n	8000d1c <fsmPedestrianModeRun+0x1fc>
 8000d12:	4b2e      	ldr	r3, [pc, #184]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000d14:	681b      	ldr	r3, [r3, #0]
 8000d16:	3364      	adds	r3, #100	; 0x64
 8000d18:	4a2c      	ldr	r2, [pc, #176]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000d1a:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000d1c:	4b2c      	ldr	r3, [pc, #176]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	2b64      	cmp	r3, #100	; 0x64
 8000d22:	dd04      	ble.n	8000d2e <fsmPedestrianModeRun+0x20e>
 8000d24:	4b2a      	ldr	r3, [pc, #168]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d26:	681b      	ldr	r3, [r3, #0]
 8000d28:	3b64      	subs	r3, #100	; 0x64
 8000d2a:	4a29      	ldr	r2, [pc, #164]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d2c:	6013      	str	r3, [r2, #0]
			}
			if(isTimerUp(2) && state == 0){
 8000d2e:	2002      	movs	r0, #2
 8000d30:	f000 fc34 	bl	800159c <isTimerUp>
 8000d34:	4603      	mov	r3, r0
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d03b      	beq.n	8000db2 <fsmPedestrianModeRun+0x292>
 8000d3a:	4b23      	ldr	r3, [pc, #140]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000d3c:	681b      	ldr	r3, [r3, #0]
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d137      	bne.n	8000db2 <fsmPedestrianModeRun+0x292>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, 0);
 8000d42:	4b20      	ldr	r3, [pc, #128]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000d44:	681b      	ldr	r3, [r3, #0]
 8000d46:	2200      	movs	r2, #0
 8000d48:	635a      	str	r2, [r3, #52]	; 0x34
				setTimer(2, buzzer_time);
 8000d4a:	4b21      	ldr	r3, [pc, #132]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d4c:	681b      	ldr	r3, [r3, #0]
 8000d4e:	4619      	mov	r1, r3
 8000d50:	2002      	movs	r0, #2
 8000d52:	f000 fc37 	bl	80015c4 <setTimer>
				state = 1 - state;
 8000d56:	4b1c      	ldr	r3, [pc, #112]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000d58:	681b      	ldr	r3, [r3, #0]
 8000d5a:	f1c3 0301 	rsb	r3, r3, #1
 8000d5e:	4a1a      	ldr	r2, [pc, #104]	; (8000dc8 <fsmPedestrianModeRun+0x2a8>)
 8000d60:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000d62:	4b1a      	ldr	r3, [pc, #104]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000d64:	681b      	ldr	r3, [r3, #0]
 8000d66:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000d6a:	4293      	cmp	r3, r2
 8000d6c:	dc04      	bgt.n	8000d78 <fsmPedestrianModeRun+0x258>
 8000d6e:	4b17      	ldr	r3, [pc, #92]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	3364      	adds	r3, #100	; 0x64
 8000d74:	4a15      	ldr	r2, [pc, #84]	; (8000dcc <fsmPedestrianModeRun+0x2ac>)
 8000d76:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000d78:	4b15      	ldr	r3, [pc, #84]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	2b64      	cmp	r3, #100	; 0x64
 8000d7e:	dd18      	ble.n	8000db2 <fsmPedestrianModeRun+0x292>
 8000d80:	4b13      	ldr	r3, [pc, #76]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	3b64      	subs	r3, #100	; 0x64
 8000d86:	4a12      	ldr	r2, [pc, #72]	; (8000dd0 <fsmPedestrianModeRun+0x2b0>)
 8000d88:	6013      	str	r3, [r2, #0]
			}
			break;
 8000d8a:	e012      	b.n	8000db2 <fsmPedestrianModeRun+0x292>
		case WALK_STOP:
			HAL_GPIO_WritePin(LED_RED_P1_GPIO_Port, LED_RED_P1_Pin, LED_ON);
 8000d8c:	2201      	movs	r2, #1
 8000d8e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000d92:	480a      	ldr	r0, [pc, #40]	; (8000dbc <fsmPedestrianModeRun+0x29c>)
 8000d94:	f001 fa57 	bl	8002246 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P1_GPIO_Port, LED_GREEN_P1_Pin, LED_OFF);
 8000d98:	2200      	movs	r2, #0
 8000d9a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d9e:	4808      	ldr	r0, [pc, #32]	; (8000dc0 <fsmPedestrianModeRun+0x2a0>)
 8000da0:	f001 fa51 	bl	8002246 <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, 0);
 8000da4:	4b07      	ldr	r3, [pc, #28]	; (8000dc4 <fsmPedestrianModeRun+0x2a4>)
 8000da6:	681b      	ldr	r3, [r3, #0]
 8000da8:	2200      	movs	r2, #0
 8000daa:	635a      	str	r2, [r3, #52]	; 0x34
			break;
 8000dac:	e002      	b.n	8000db4 <fsmPedestrianModeRun+0x294>
		default:
			break;
 8000dae:	bf00      	nop
 8000db0:	e000      	b.n	8000db4 <fsmPedestrianModeRun+0x294>
			break;
 8000db2:	bf00      	nop
	}


}
 8000db4:	bf00      	nop
 8000db6:	bd80      	pop	{r7, pc}
 8000db8:	20000000 	.word	0x20000000
 8000dbc:	40010c00 	.word	0x40010c00
 8000dc0:	40010800 	.word	0x40010800
 8000dc4:	2000011c 	.word	0x2000011c
 8000dc8:	200000b8 	.word	0x200000b8
 8000dcc:	2000000c 	.word	0x2000000c
 8000dd0:	20000008 	.word	0x20000008
 8000dd4:	20000004 	.word	0x20000004

08000dd8 <fsmTuningModeRun>:
#include "fsm_tuning_mode.h"

int time_count = 0;

void fsmTuningModeRun() {
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	af00      	add	r7, sp, #0
	// FSM for TUNING MODE

	switch (mode) {
 8000ddc:	4b59      	ldr	r3, [pc, #356]	; (8000f44 <fsmTuningModeRun+0x16c>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	2b0b      	cmp	r3, #11
 8000de2:	d075      	beq.n	8000ed0 <fsmTuningModeRun+0xf8>
 8000de4:	2b0b      	cmp	r3, #11
 8000de6:	f300 80aa 	bgt.w	8000f3e <fsmTuningModeRun+0x166>
 8000dea:	2b09      	cmp	r3, #9
 8000dec:	d002      	beq.n	8000df4 <fsmTuningModeRun+0x1c>
 8000dee:	2b0a      	cmp	r3, #10
 8000df0:	d037      	beq.n	8000e62 <fsmTuningModeRun+0x8a>
			sendTimeInc();

			break;

		default:
			break;
 8000df2:	e0a4      	b.n	8000f3e <fsmTuningModeRun+0x166>
			if (isButtonPressed(BUTTON_MODE)) {
 8000df4:	2000      	movs	r0, #0
 8000df6:	f7ff fad7 	bl	80003a8 <isButtonPressed>
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	2b00      	cmp	r3, #0
 8000dfe:	d004      	beq.n	8000e0a <fsmTuningModeRun+0x32>
				mode = AUTO_MODE;
 8000e00:	4b50      	ldr	r3, [pc, #320]	; (8000f44 <fsmTuningModeRun+0x16c>)
 8000e02:	2201      	movs	r2, #1
 8000e04:	601a      	str	r2, [r3, #0]
				sendModeNoti();
 8000e06:	f000 fd85 	bl	8001914 <sendModeNoti>
			if (isButtonPressed(BUTTON_SET)) {
 8000e0a:	2001      	movs	r0, #1
 8000e0c:	f7ff facc 	bl	80003a8 <isButtonPressed>
 8000e10:	4603      	mov	r3, r0
 8000e12:	2b00      	cmp	r3, #0
 8000e14:	d009      	beq.n	8000e2a <fsmTuningModeRun+0x52>
				RED_time = time_count * 1000;
 8000e16:	4b4c      	ldr	r3, [pc, #304]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000e18:	681b      	ldr	r3, [r3, #0]
 8000e1a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000e1e:	fb02 f303 	mul.w	r3, r2, r3
 8000e22:	4a4a      	ldr	r2, [pc, #296]	; (8000f4c <fsmTuningModeRun+0x174>)
 8000e24:	6013      	str	r3, [r2, #0]
				sendSetNoti();
 8000e26:	f000 fde7 	bl	80019f8 <sendSetNoti>
			if (isButtonPressed(BUTTON_INC) || isButtonLongPressed(BUTTON_INC)) {
 8000e2a:	2002      	movs	r0, #2
 8000e2c:	f7ff fabc 	bl	80003a8 <isButtonPressed>
 8000e30:	4603      	mov	r3, r0
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d105      	bne.n	8000e42 <fsmTuningModeRun+0x6a>
 8000e36:	2002      	movs	r0, #2
 8000e38:	f7ff fad0 	bl	80003dc <isButtonLongPressed>
 8000e3c:	4603      	mov	r3, r0
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	d00c      	beq.n	8000e5c <fsmTuningModeRun+0x84>
				if (time_count >= 99) time_count = 5;
 8000e42:	4b41      	ldr	r3, [pc, #260]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000e44:	681b      	ldr	r3, [r3, #0]
 8000e46:	2b62      	cmp	r3, #98	; 0x62
 8000e48:	dd03      	ble.n	8000e52 <fsmTuningModeRun+0x7a>
 8000e4a:	4b3f      	ldr	r3, [pc, #252]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000e4c:	2205      	movs	r2, #5
 8000e4e:	601a      	str	r2, [r3, #0]
 8000e50:	e004      	b.n	8000e5c <fsmTuningModeRun+0x84>
				else time_count++;
 8000e52:	4b3d      	ldr	r3, [pc, #244]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000e54:	681b      	ldr	r3, [r3, #0]
 8000e56:	3301      	adds	r3, #1
 8000e58:	4a3b      	ldr	r2, [pc, #236]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000e5a:	6013      	str	r3, [r2, #0]
			sendTimeInc();
 8000e5c:	f000 fcfe 	bl	800185c <sendTimeInc>
			break;
 8000e60:	e06e      	b.n	8000f40 <fsmTuningModeRun+0x168>
			if (isButtonPressed(BUTTON_MODE)) {
 8000e62:	2000      	movs	r0, #0
 8000e64:	f7ff faa0 	bl	80003a8 <isButtonPressed>
 8000e68:	4603      	mov	r3, r0
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d004      	beq.n	8000e78 <fsmTuningModeRun+0xa0>
				mode = AUTO_MODE;
 8000e6e:	4b35      	ldr	r3, [pc, #212]	; (8000f44 <fsmTuningModeRun+0x16c>)
 8000e70:	2201      	movs	r2, #1
 8000e72:	601a      	str	r2, [r3, #0]
				sendModeNoti();
 8000e74:	f000 fd4e 	bl	8001914 <sendModeNoti>
			if (isButtonPressed(BUTTON_SET)) {
 8000e78:	2001      	movs	r0, #1
 8000e7a:	f7ff fa95 	bl	80003a8 <isButtonPressed>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d009      	beq.n	8000e98 <fsmTuningModeRun+0xc0>
				GREEN_time = time_count * 1000;
 8000e84:	4b30      	ldr	r3, [pc, #192]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000e8c:	fb02 f303 	mul.w	r3, r2, r3
 8000e90:	4a2f      	ldr	r2, [pc, #188]	; (8000f50 <fsmTuningModeRun+0x178>)
 8000e92:	6013      	str	r3, [r2, #0]
				sendSetNoti();
 8000e94:	f000 fdb0 	bl	80019f8 <sendSetNoti>
			if (isButtonPressed(BUTTON_INC) || isButtonLongPressed(BUTTON_INC)) {
 8000e98:	2002      	movs	r0, #2
 8000e9a:	f7ff fa85 	bl	80003a8 <isButtonPressed>
 8000e9e:	4603      	mov	r3, r0
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d105      	bne.n	8000eb0 <fsmTuningModeRun+0xd8>
 8000ea4:	2002      	movs	r0, #2
 8000ea6:	f7ff fa99 	bl	80003dc <isButtonLongPressed>
 8000eaa:	4603      	mov	r3, r0
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	d00c      	beq.n	8000eca <fsmTuningModeRun+0xf2>
				if (time_count >= 89) time_count = 3;
 8000eb0:	4b25      	ldr	r3, [pc, #148]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	2b58      	cmp	r3, #88	; 0x58
 8000eb6:	dd03      	ble.n	8000ec0 <fsmTuningModeRun+0xe8>
 8000eb8:	4b23      	ldr	r3, [pc, #140]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000eba:	2203      	movs	r2, #3
 8000ebc:	601a      	str	r2, [r3, #0]
 8000ebe:	e004      	b.n	8000eca <fsmTuningModeRun+0xf2>
				else time_count++;
 8000ec0:	4b21      	ldr	r3, [pc, #132]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000ec2:	681b      	ldr	r3, [r3, #0]
 8000ec4:	3301      	adds	r3, #1
 8000ec6:	4a20      	ldr	r2, [pc, #128]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000ec8:	6013      	str	r3, [r2, #0]
			sendTimeInc();
 8000eca:	f000 fcc7 	bl	800185c <sendTimeInc>
			break;
 8000ece:	e037      	b.n	8000f40 <fsmTuningModeRun+0x168>
			if (isButtonPressed(BUTTON_MODE)) {
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	f7ff fa69 	bl	80003a8 <isButtonPressed>
 8000ed6:	4603      	mov	r3, r0
 8000ed8:	2b00      	cmp	r3, #0
 8000eda:	d004      	beq.n	8000ee6 <fsmTuningModeRun+0x10e>
				mode = AUTO_MODE;
 8000edc:	4b19      	ldr	r3, [pc, #100]	; (8000f44 <fsmTuningModeRun+0x16c>)
 8000ede:	2201      	movs	r2, #1
 8000ee0:	601a      	str	r2, [r3, #0]
				sendModeNoti();
 8000ee2:	f000 fd17 	bl	8001914 <sendModeNoti>
			if (isButtonPressed(BUTTON_SET)) {
 8000ee6:	2001      	movs	r0, #1
 8000ee8:	f7ff fa5e 	bl	80003a8 <isButtonPressed>
 8000eec:	4603      	mov	r3, r0
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d009      	beq.n	8000f06 <fsmTuningModeRun+0x12e>
				YELLOW_time = time_count * 1000;
 8000ef2:	4b15      	ldr	r3, [pc, #84]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000ef4:	681b      	ldr	r3, [r3, #0]
 8000ef6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000efa:	fb02 f303 	mul.w	r3, r2, r3
 8000efe:	4a15      	ldr	r2, [pc, #84]	; (8000f54 <fsmTuningModeRun+0x17c>)
 8000f00:	6013      	str	r3, [r2, #0]
				sendSetNoti();
 8000f02:	f000 fd79 	bl	80019f8 <sendSetNoti>
			if (isButtonPressed(BUTTON_INC) || isButtonLongPressed(BUTTON_INC)) {
 8000f06:	2002      	movs	r0, #2
 8000f08:	f7ff fa4e 	bl	80003a8 <isButtonPressed>
 8000f0c:	4603      	mov	r3, r0
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d105      	bne.n	8000f1e <fsmTuningModeRun+0x146>
 8000f12:	2002      	movs	r0, #2
 8000f14:	f7ff fa62 	bl	80003dc <isButtonLongPressed>
 8000f18:	4603      	mov	r3, r0
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d00c      	beq.n	8000f38 <fsmTuningModeRun+0x160>
				if (time_count >= 10) time_count = 2;
 8000f1e:	4b0a      	ldr	r3, [pc, #40]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	2b09      	cmp	r3, #9
 8000f24:	dd03      	ble.n	8000f2e <fsmTuningModeRun+0x156>
 8000f26:	4b08      	ldr	r3, [pc, #32]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000f28:	2202      	movs	r2, #2
 8000f2a:	601a      	str	r2, [r3, #0]
 8000f2c:	e004      	b.n	8000f38 <fsmTuningModeRun+0x160>
				else time_count++;
 8000f2e:	4b06      	ldr	r3, [pc, #24]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	3301      	adds	r3, #1
 8000f34:	4a04      	ldr	r2, [pc, #16]	; (8000f48 <fsmTuningModeRun+0x170>)
 8000f36:	6013      	str	r3, [r2, #0]
			sendTimeInc();
 8000f38:	f000 fc90 	bl	800185c <sendTimeInc>
			break;
 8000f3c:	e000      	b.n	8000f40 <fsmTuningModeRun+0x168>
			break;
 8000f3e:	bf00      	nop
	}
}
 8000f40:	bf00      	nop
 8000f42:	bd80      	pop	{r7, pc}
 8000f44:	200000c0 	.word	0x200000c0
 8000f48:	200000bc 	.word	0x200000bc
 8000f4c:	20000018 	.word	0x20000018
 8000f50:	2000001c 	.word	0x2000001c
 8000f54:	20000020 	.word	0x20000020

08000f58 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f5c:	f000 fdb8 	bl	8001ad0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f60:	f000 f81c 	bl	8000f9c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f64:	f000 f908 	bl	8001178 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000f68:	f000 f8dc 	bl	8001124 <MX_USART2_UART_Init>
  MX_TIM3_Init();
 8000f6c:	f000 f858 	bl	8001020 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim3);
 8000f70:	4809      	ldr	r0, [pc, #36]	; (8000f98 <main+0x40>)
 8000f72:	f001 fe0d 	bl	8002b90 <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000f76:	2100      	movs	r1, #0
 8000f78:	4807      	ldr	r0, [pc, #28]	; (8000f98 <main+0x40>)
 8000f7a:	f001 feb3 	bl	8002ce4 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 8000f7e:	2104      	movs	r1, #4
 8000f80:	4805      	ldr	r0, [pc, #20]	; (8000f98 <main+0x40>)
 8000f82:	f001 feaf 	bl	8002ce4 <HAL_TIM_PWM_Start>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  while (1)
  {
	  fsmAutoModeRun();
 8000f86:	f7ff fb67 	bl	8000658 <fsmAutoModeRun>
	  fsmManualModeRun();
 8000f8a:	f7ff fb89 	bl	80006a0 <fsmManualModeRun>
	  fsmTuningModeRun();
 8000f8e:	f7ff ff23 	bl	8000dd8 <fsmTuningModeRun>
	  fsmPedestrianModeRun();
 8000f92:	f7ff fdc5 	bl	8000b20 <fsmPedestrianModeRun>
	  fsmAutoModeRun();
 8000f96:	e7f6      	b.n	8000f86 <main+0x2e>
 8000f98:	2000011c 	.word	0x2000011c

08000f9c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	b090      	sub	sp, #64	; 0x40
 8000fa0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000fa2:	f107 0318 	add.w	r3, r7, #24
 8000fa6:	2228      	movs	r2, #40	; 0x28
 8000fa8:	2100      	movs	r1, #0
 8000faa:	4618      	mov	r0, r3
 8000fac:	f003 fa00 	bl	80043b0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000fb0:	1d3b      	adds	r3, r7, #4
 8000fb2:	2200      	movs	r2, #0
 8000fb4:	601a      	str	r2, [r3, #0]
 8000fb6:	605a      	str	r2, [r3, #4]
 8000fb8:	609a      	str	r2, [r3, #8]
 8000fba:	60da      	str	r2, [r3, #12]
 8000fbc:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000fbe:	2302      	movs	r3, #2
 8000fc0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000fc6:	2310      	movs	r3, #16
 8000fc8:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000fca:	2302      	movs	r3, #2
 8000fcc:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000fce:	2300      	movs	r3, #0
 8000fd0:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000fd2:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000fd6:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000fd8:	f107 0318 	add.w	r3, r7, #24
 8000fdc:	4618      	mov	r0, r3
 8000fde:	f001 f96d 	bl	80022bc <HAL_RCC_OscConfig>
 8000fe2:	4603      	mov	r3, r0
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	d001      	beq.n	8000fec <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000fe8:	f000 f972 	bl	80012d0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000fec:	230f      	movs	r3, #15
 8000fee:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000ff0:	2302      	movs	r3, #2
 8000ff2:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ff4:	2300      	movs	r3, #0
 8000ff6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000ff8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ffc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ffe:	2300      	movs	r3, #0
 8001000:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001002:	1d3b      	adds	r3, r7, #4
 8001004:	2102      	movs	r1, #2
 8001006:	4618      	mov	r0, r3
 8001008:	f001 fbd8 	bl	80027bc <HAL_RCC_ClockConfig>
 800100c:	4603      	mov	r3, r0
 800100e:	2b00      	cmp	r3, #0
 8001010:	d001      	beq.n	8001016 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8001012:	f000 f95d 	bl	80012d0 <Error_Handler>
  }
}
 8001016:	bf00      	nop
 8001018:	3740      	adds	r7, #64	; 0x40
 800101a:	46bd      	mov	sp, r7
 800101c:	bd80      	pop	{r7, pc}
	...

08001020 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001020:	b580      	push	{r7, lr}
 8001022:	b08e      	sub	sp, #56	; 0x38
 8001024:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001026:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800102a:	2200      	movs	r2, #0
 800102c:	601a      	str	r2, [r3, #0]
 800102e:	605a      	str	r2, [r3, #4]
 8001030:	609a      	str	r2, [r3, #8]
 8001032:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001034:	f107 0320 	add.w	r3, r7, #32
 8001038:	2200      	movs	r2, #0
 800103a:	601a      	str	r2, [r3, #0]
 800103c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800103e:	1d3b      	adds	r3, r7, #4
 8001040:	2200      	movs	r2, #0
 8001042:	601a      	str	r2, [r3, #0]
 8001044:	605a      	str	r2, [r3, #4]
 8001046:	609a      	str	r2, [r3, #8]
 8001048:	60da      	str	r2, [r3, #12]
 800104a:	611a      	str	r2, [r3, #16]
 800104c:	615a      	str	r2, [r3, #20]
 800104e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001050:	4b32      	ldr	r3, [pc, #200]	; (800111c <MX_TIM3_Init+0xfc>)
 8001052:	4a33      	ldr	r2, [pc, #204]	; (8001120 <MX_TIM3_Init+0x100>)
 8001054:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8001056:	4b31      	ldr	r3, [pc, #196]	; (800111c <MX_TIM3_Init+0xfc>)
 8001058:	223f      	movs	r2, #63	; 0x3f
 800105a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800105c:	4b2f      	ldr	r3, [pc, #188]	; (800111c <MX_TIM3_Init+0xfc>)
 800105e:	2200      	movs	r2, #0
 8001060:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001062:	4b2e      	ldr	r3, [pc, #184]	; (800111c <MX_TIM3_Init+0xfc>)
 8001064:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001068:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800106a:	4b2c      	ldr	r3, [pc, #176]	; (800111c <MX_TIM3_Init+0xfc>)
 800106c:	2200      	movs	r2, #0
 800106e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001070:	4b2a      	ldr	r3, [pc, #168]	; (800111c <MX_TIM3_Init+0xfc>)
 8001072:	2200      	movs	r2, #0
 8001074:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001076:	4829      	ldr	r0, [pc, #164]	; (800111c <MX_TIM3_Init+0xfc>)
 8001078:	f001 fd3a 	bl	8002af0 <HAL_TIM_Base_Init>
 800107c:	4603      	mov	r3, r0
 800107e:	2b00      	cmp	r3, #0
 8001080:	d001      	beq.n	8001086 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8001082:	f000 f925 	bl	80012d0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001086:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800108a:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800108c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001090:	4619      	mov	r1, r3
 8001092:	4822      	ldr	r0, [pc, #136]	; (800111c <MX_TIM3_Init+0xfc>)
 8001094:	f002 f88e 	bl	80031b4 <HAL_TIM_ConfigClockSource>
 8001098:	4603      	mov	r3, r0
 800109a:	2b00      	cmp	r3, #0
 800109c:	d001      	beq.n	80010a2 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 800109e:	f000 f917 	bl	80012d0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80010a2:	481e      	ldr	r0, [pc, #120]	; (800111c <MX_TIM3_Init+0xfc>)
 80010a4:	f001 fdc6 	bl	8002c34 <HAL_TIM_PWM_Init>
 80010a8:	4603      	mov	r3, r0
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d001      	beq.n	80010b2 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 80010ae:	f000 f90f 	bl	80012d0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80010b2:	2300      	movs	r3, #0
 80010b4:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80010b6:	2300      	movs	r3, #0
 80010b8:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80010ba:	f107 0320 	add.w	r3, r7, #32
 80010be:	4619      	mov	r1, r3
 80010c0:	4816      	ldr	r0, [pc, #88]	; (800111c <MX_TIM3_Init+0xfc>)
 80010c2:	f002 fc03 	bl	80038cc <HAL_TIMEx_MasterConfigSynchronization>
 80010c6:	4603      	mov	r3, r0
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d001      	beq.n	80010d0 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 80010cc:	f000 f900 	bl	80012d0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80010d0:	2360      	movs	r3, #96	; 0x60
 80010d2:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80010d4:	2300      	movs	r3, #0
 80010d6:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010d8:	2300      	movs	r3, #0
 80010da:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80010dc:	2300      	movs	r3, #0
 80010de:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80010e0:	1d3b      	adds	r3, r7, #4
 80010e2:	2200      	movs	r2, #0
 80010e4:	4619      	mov	r1, r3
 80010e6:	480d      	ldr	r0, [pc, #52]	; (800111c <MX_TIM3_Init+0xfc>)
 80010e8:	f001 ffa6 	bl	8003038 <HAL_TIM_PWM_ConfigChannel>
 80010ec:	4603      	mov	r3, r0
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d001      	beq.n	80010f6 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80010f2:	f000 f8ed 	bl	80012d0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80010f6:	1d3b      	adds	r3, r7, #4
 80010f8:	2204      	movs	r2, #4
 80010fa:	4619      	mov	r1, r3
 80010fc:	4807      	ldr	r0, [pc, #28]	; (800111c <MX_TIM3_Init+0xfc>)
 80010fe:	f001 ff9b 	bl	8003038 <HAL_TIM_PWM_ConfigChannel>
 8001102:	4603      	mov	r3, r0
 8001104:	2b00      	cmp	r3, #0
 8001106:	d001      	beq.n	800110c <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 8001108:	f000 f8e2 	bl	80012d0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800110c:	4803      	ldr	r0, [pc, #12]	; (800111c <MX_TIM3_Init+0xfc>)
 800110e:	f000 f93d 	bl	800138c <HAL_TIM_MspPostInit>

}
 8001112:	bf00      	nop
 8001114:	3738      	adds	r7, #56	; 0x38
 8001116:	46bd      	mov	sp, r7
 8001118:	bd80      	pop	{r7, pc}
 800111a:	bf00      	nop
 800111c:	2000011c 	.word	0x2000011c
 8001120:	40000400 	.word	0x40000400

08001124 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001128:	4b11      	ldr	r3, [pc, #68]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 800112a:	4a12      	ldr	r2, [pc, #72]	; (8001174 <MX_USART2_UART_Init+0x50>)
 800112c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800112e:	4b10      	ldr	r3, [pc, #64]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 8001130:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001134:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001136:	4b0e      	ldr	r3, [pc, #56]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 8001138:	2200      	movs	r2, #0
 800113a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800113c:	4b0c      	ldr	r3, [pc, #48]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 800113e:	2200      	movs	r2, #0
 8001140:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001142:	4b0b      	ldr	r3, [pc, #44]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 8001144:	2200      	movs	r2, #0
 8001146:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001148:	4b09      	ldr	r3, [pc, #36]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 800114a:	220c      	movs	r2, #12
 800114c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800114e:	4b08      	ldr	r3, [pc, #32]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 8001150:	2200      	movs	r2, #0
 8001152:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001154:	4b06      	ldr	r3, [pc, #24]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 8001156:	2200      	movs	r2, #0
 8001158:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800115a:	4805      	ldr	r0, [pc, #20]	; (8001170 <MX_USART2_UART_Init+0x4c>)
 800115c:	f002 fc26 	bl	80039ac <HAL_UART_Init>
 8001160:	4603      	mov	r3, r0
 8001162:	2b00      	cmp	r3, #0
 8001164:	d001      	beq.n	800116a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001166:	f000 f8b3 	bl	80012d0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800116a:	bf00      	nop
 800116c:	bd80      	pop	{r7, pc}
 800116e:	bf00      	nop
 8001170:	20000184 	.word	0x20000184
 8001174:	40004400 	.word	0x40004400

08001178 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001178:	b580      	push	{r7, lr}
 800117a:	b088      	sub	sp, #32
 800117c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800117e:	f107 0310 	add.w	r3, r7, #16
 8001182:	2200      	movs	r2, #0
 8001184:	601a      	str	r2, [r3, #0]
 8001186:	605a      	str	r2, [r3, #4]
 8001188:	609a      	str	r2, [r3, #8]
 800118a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800118c:	4b45      	ldr	r3, [pc, #276]	; (80012a4 <MX_GPIO_Init+0x12c>)
 800118e:	699b      	ldr	r3, [r3, #24]
 8001190:	4a44      	ldr	r2, [pc, #272]	; (80012a4 <MX_GPIO_Init+0x12c>)
 8001192:	f043 0310 	orr.w	r3, r3, #16
 8001196:	6193      	str	r3, [r2, #24]
 8001198:	4b42      	ldr	r3, [pc, #264]	; (80012a4 <MX_GPIO_Init+0x12c>)
 800119a:	699b      	ldr	r3, [r3, #24]
 800119c:	f003 0310 	and.w	r3, r3, #16
 80011a0:	60fb      	str	r3, [r7, #12]
 80011a2:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80011a4:	4b3f      	ldr	r3, [pc, #252]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011a6:	699b      	ldr	r3, [r3, #24]
 80011a8:	4a3e      	ldr	r2, [pc, #248]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011aa:	f043 0320 	orr.w	r3, r3, #32
 80011ae:	6193      	str	r3, [r2, #24]
 80011b0:	4b3c      	ldr	r3, [pc, #240]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011b2:	699b      	ldr	r3, [r3, #24]
 80011b4:	f003 0320 	and.w	r3, r3, #32
 80011b8:	60bb      	str	r3, [r7, #8]
 80011ba:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80011bc:	4b39      	ldr	r3, [pc, #228]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011be:	699b      	ldr	r3, [r3, #24]
 80011c0:	4a38      	ldr	r2, [pc, #224]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011c2:	f043 0304 	orr.w	r3, r3, #4
 80011c6:	6193      	str	r3, [r2, #24]
 80011c8:	4b36      	ldr	r3, [pc, #216]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011ca:	699b      	ldr	r3, [r3, #24]
 80011cc:	f003 0304 	and.w	r3, r3, #4
 80011d0:	607b      	str	r3, [r7, #4]
 80011d2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80011d4:	4b33      	ldr	r3, [pc, #204]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011d6:	699b      	ldr	r3, [r3, #24]
 80011d8:	4a32      	ldr	r2, [pc, #200]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011da:	f043 0308 	orr.w	r3, r3, #8
 80011de:	6193      	str	r3, [r2, #24]
 80011e0:	4b30      	ldr	r3, [pc, #192]	; (80012a4 <MX_GPIO_Init+0x12c>)
 80011e2:	699b      	ldr	r3, [r3, #24]
 80011e4:	f003 0308 	and.w	r3, r3, #8
 80011e8:	603b      	str	r3, [r7, #0]
 80011ea:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|LED_GREEN_P1_Pin|LED_GREEN_P2_Pin|LED_RED_1_Pin, GPIO_PIN_RESET);
 80011ec:	2200      	movs	r2, #0
 80011ee:	f44f 61e4 	mov.w	r1, #1824	; 0x720
 80011f2:	482d      	ldr	r0, [pc, #180]	; (80012a8 <MX_GPIO_Init+0x130>)
 80011f4:	f001 f827 	bl	8002246 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_RED_P2_Pin|LED_RED_P1_Pin|LED_GREEN_1_Pin|LED_GREEN_2_Pin
 80011f8:	2200      	movs	r2, #0
 80011fa:	f240 413c 	movw	r1, #1084	; 0x43c
 80011fe:	482b      	ldr	r0, [pc, #172]	; (80012ac <MX_GPIO_Init+0x134>)
 8001200:	f001 f821 	bl	8002246 <HAL_GPIO_WritePin>
                          |LED_RED_2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001204:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001208:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800120a:	4b29      	ldr	r3, [pc, #164]	; (80012b0 <MX_GPIO_Init+0x138>)
 800120c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800120e:	2300      	movs	r3, #0
 8001210:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001212:	f107 0310 	add.w	r3, r7, #16
 8001216:	4619      	mov	r1, r3
 8001218:	4826      	ldr	r0, [pc, #152]	; (80012b4 <MX_GPIO_Init+0x13c>)
 800121a:	f000 fe79 	bl	8001f10 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON_PED_Pin BUTTON_MODE_Pin BUTTON_SET_Pin */
  GPIO_InitStruct.Pin = BUTTON_PED_Pin|BUTTON_MODE_Pin|BUTTON_SET_Pin;
 800121e:	2313      	movs	r3, #19
 8001220:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001222:	2300      	movs	r3, #0
 8001224:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001226:	2301      	movs	r3, #1
 8001228:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800122a:	f107 0310 	add.w	r3, r7, #16
 800122e:	4619      	mov	r1, r3
 8001230:	481d      	ldr	r0, [pc, #116]	; (80012a8 <MX_GPIO_Init+0x130>)
 8001232:	f000 fe6d 	bl	8001f10 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin LED_GREEN_P1_Pin LED_GREEN_P2_Pin LED_RED_1_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|LED_GREEN_P1_Pin|LED_GREEN_P2_Pin|LED_RED_1_Pin;
 8001236:	f44f 63e4 	mov.w	r3, #1824	; 0x720
 800123a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800123c:	2301      	movs	r3, #1
 800123e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001240:	2300      	movs	r3, #0
 8001242:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001244:	2302      	movs	r3, #2
 8001246:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001248:	f107 0310 	add.w	r3, r7, #16
 800124c:	4619      	mov	r1, r3
 800124e:	4816      	ldr	r0, [pc, #88]	; (80012a8 <MX_GPIO_Init+0x130>)
 8001250:	f000 fe5e 	bl	8001f10 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_INC_Pin */
  GPIO_InitStruct.Pin = BUTTON_INC_Pin;
 8001254:	2301      	movs	r3, #1
 8001256:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001258:	2300      	movs	r3, #0
 800125a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800125c:	2301      	movs	r3, #1
 800125e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BUTTON_INC_GPIO_Port, &GPIO_InitStruct);
 8001260:	f107 0310 	add.w	r3, r7, #16
 8001264:	4619      	mov	r1, r3
 8001266:	4811      	ldr	r0, [pc, #68]	; (80012ac <MX_GPIO_Init+0x134>)
 8001268:	f000 fe52 	bl	8001f10 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_RED_P2_Pin LED_RED_P1_Pin LED_GREEN_1_Pin LED_GREEN_2_Pin
                           LED_RED_2_Pin */
  GPIO_InitStruct.Pin = LED_RED_P2_Pin|LED_RED_P1_Pin|LED_GREEN_1_Pin|LED_GREEN_2_Pin
 800126c:	f240 433c 	movw	r3, #1084	; 0x43c
 8001270:	613b      	str	r3, [r7, #16]
                          |LED_RED_2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001272:	2301      	movs	r3, #1
 8001274:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001276:	2300      	movs	r3, #0
 8001278:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800127a:	2302      	movs	r3, #2
 800127c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800127e:	f107 0310 	add.w	r3, r7, #16
 8001282:	4619      	mov	r1, r3
 8001284:	4809      	ldr	r0, [pc, #36]	; (80012ac <MX_GPIO_Init+0x134>)
 8001286:	f000 fe43 	bl	8001f10 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800128a:	2200      	movs	r2, #0
 800128c:	2100      	movs	r1, #0
 800128e:	2028      	movs	r0, #40	; 0x28
 8001290:	f000 fd57 	bl	8001d42 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001294:	2028      	movs	r0, #40	; 0x28
 8001296:	f000 fd70 	bl	8001d7a <HAL_NVIC_EnableIRQ>

}
 800129a:	bf00      	nop
 800129c:	3720      	adds	r7, #32
 800129e:	46bd      	mov	sp, r7
 80012a0:	bd80      	pop	{r7, pc}
 80012a2:	bf00      	nop
 80012a4:	40021000 	.word	0x40021000
 80012a8:	40010800 	.word	0x40010800
 80012ac:	40010c00 	.word	0x40010c00
 80012b0:	10110000 	.word	0x10110000
 80012b4:	40011000 	.word	0x40011000

080012b8 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b082      	sub	sp, #8
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
	timerRun();
 80012c0:	f000 f99e 	bl	8001600 <timerRun>
	getKeyInput();
 80012c4:	f7ff f8f6 	bl	80004b4 <getKeyInput>
}
 80012c8:	bf00      	nop
 80012ca:	3708      	adds	r7, #8
 80012cc:	46bd      	mov	sp, r7
 80012ce:	bd80      	pop	{r7, pc}

080012d0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80012d0:	b480      	push	{r7}
 80012d2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80012d4:	b672      	cpsid	i
}
 80012d6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80012d8:	e7fe      	b.n	80012d8 <Error_Handler+0x8>
	...

080012dc <HAL_MspInit>:
 80012dc:	b480      	push	{r7}
 80012de:	b085      	sub	sp, #20
 80012e0:	af00      	add	r7, sp, #0
 80012e2:	4b15      	ldr	r3, [pc, #84]	; (8001338 <HAL_MspInit+0x5c>)
 80012e4:	699b      	ldr	r3, [r3, #24]
 80012e6:	4a14      	ldr	r2, [pc, #80]	; (8001338 <HAL_MspInit+0x5c>)
 80012e8:	f043 0301 	orr.w	r3, r3, #1
 80012ec:	6193      	str	r3, [r2, #24]
 80012ee:	4b12      	ldr	r3, [pc, #72]	; (8001338 <HAL_MspInit+0x5c>)
 80012f0:	699b      	ldr	r3, [r3, #24]
 80012f2:	f003 0301 	and.w	r3, r3, #1
 80012f6:	60bb      	str	r3, [r7, #8]
 80012f8:	68bb      	ldr	r3, [r7, #8]
 80012fa:	4b0f      	ldr	r3, [pc, #60]	; (8001338 <HAL_MspInit+0x5c>)
 80012fc:	69db      	ldr	r3, [r3, #28]
 80012fe:	4a0e      	ldr	r2, [pc, #56]	; (8001338 <HAL_MspInit+0x5c>)
 8001300:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001304:	61d3      	str	r3, [r2, #28]
 8001306:	4b0c      	ldr	r3, [pc, #48]	; (8001338 <HAL_MspInit+0x5c>)
 8001308:	69db      	ldr	r3, [r3, #28]
 800130a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800130e:	607b      	str	r3, [r7, #4]
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	4b0a      	ldr	r3, [pc, #40]	; (800133c <HAL_MspInit+0x60>)
 8001314:	685b      	ldr	r3, [r3, #4]
 8001316:	60fb      	str	r3, [r7, #12]
 8001318:	68fb      	ldr	r3, [r7, #12]
 800131a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 800131e:	60fb      	str	r3, [r7, #12]
 8001320:	68fb      	ldr	r3, [r7, #12]
 8001322:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001326:	60fb      	str	r3, [r7, #12]
 8001328:	4a04      	ldr	r2, [pc, #16]	; (800133c <HAL_MspInit+0x60>)
 800132a:	68fb      	ldr	r3, [r7, #12]
 800132c:	6053      	str	r3, [r2, #4]
 800132e:	bf00      	nop
 8001330:	3714      	adds	r7, #20
 8001332:	46bd      	mov	sp, r7
 8001334:	bc80      	pop	{r7}
 8001336:	4770      	bx	lr
 8001338:	40021000 	.word	0x40021000
 800133c:	40010000 	.word	0x40010000

08001340 <HAL_TIM_Base_MspInit>:
 8001340:	b580      	push	{r7, lr}
 8001342:	b084      	sub	sp, #16
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	4a0d      	ldr	r2, [pc, #52]	; (8001384 <HAL_TIM_Base_MspInit+0x44>)
 800134e:	4293      	cmp	r3, r2
 8001350:	d113      	bne.n	800137a <HAL_TIM_Base_MspInit+0x3a>
 8001352:	4b0d      	ldr	r3, [pc, #52]	; (8001388 <HAL_TIM_Base_MspInit+0x48>)
 8001354:	69db      	ldr	r3, [r3, #28]
 8001356:	4a0c      	ldr	r2, [pc, #48]	; (8001388 <HAL_TIM_Base_MspInit+0x48>)
 8001358:	f043 0302 	orr.w	r3, r3, #2
 800135c:	61d3      	str	r3, [r2, #28]
 800135e:	4b0a      	ldr	r3, [pc, #40]	; (8001388 <HAL_TIM_Base_MspInit+0x48>)
 8001360:	69db      	ldr	r3, [r3, #28]
 8001362:	f003 0302 	and.w	r3, r3, #2
 8001366:	60fb      	str	r3, [r7, #12]
 8001368:	68fb      	ldr	r3, [r7, #12]
 800136a:	2200      	movs	r2, #0
 800136c:	2100      	movs	r1, #0
 800136e:	201d      	movs	r0, #29
 8001370:	f000 fce7 	bl	8001d42 <HAL_NVIC_SetPriority>
 8001374:	201d      	movs	r0, #29
 8001376:	f000 fd00 	bl	8001d7a <HAL_NVIC_EnableIRQ>
 800137a:	bf00      	nop
 800137c:	3710      	adds	r7, #16
 800137e:	46bd      	mov	sp, r7
 8001380:	bd80      	pop	{r7, pc}
 8001382:	bf00      	nop
 8001384:	40000400 	.word	0x40000400
 8001388:	40021000 	.word	0x40021000

0800138c <HAL_TIM_MspPostInit>:
 800138c:	b580      	push	{r7, lr}
 800138e:	b088      	sub	sp, #32
 8001390:	af00      	add	r7, sp, #0
 8001392:	6078      	str	r0, [r7, #4]
 8001394:	f107 0310 	add.w	r3, r7, #16
 8001398:	2200      	movs	r2, #0
 800139a:	601a      	str	r2, [r3, #0]
 800139c:	605a      	str	r2, [r3, #4]
 800139e:	609a      	str	r2, [r3, #8]
 80013a0:	60da      	str	r2, [r3, #12]
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	4a0f      	ldr	r2, [pc, #60]	; (80013e4 <HAL_TIM_MspPostInit+0x58>)
 80013a8:	4293      	cmp	r3, r2
 80013aa:	d117      	bne.n	80013dc <HAL_TIM_MspPostInit+0x50>
 80013ac:	4b0e      	ldr	r3, [pc, #56]	; (80013e8 <HAL_TIM_MspPostInit+0x5c>)
 80013ae:	699b      	ldr	r3, [r3, #24]
 80013b0:	4a0d      	ldr	r2, [pc, #52]	; (80013e8 <HAL_TIM_MspPostInit+0x5c>)
 80013b2:	f043 0304 	orr.w	r3, r3, #4
 80013b6:	6193      	str	r3, [r2, #24]
 80013b8:	4b0b      	ldr	r3, [pc, #44]	; (80013e8 <HAL_TIM_MspPostInit+0x5c>)
 80013ba:	699b      	ldr	r3, [r3, #24]
 80013bc:	f003 0304 	and.w	r3, r3, #4
 80013c0:	60fb      	str	r3, [r7, #12]
 80013c2:	68fb      	ldr	r3, [r7, #12]
 80013c4:	23c0      	movs	r3, #192	; 0xc0
 80013c6:	613b      	str	r3, [r7, #16]
 80013c8:	2302      	movs	r3, #2
 80013ca:	617b      	str	r3, [r7, #20]
 80013cc:	2302      	movs	r3, #2
 80013ce:	61fb      	str	r3, [r7, #28]
 80013d0:	f107 0310 	add.w	r3, r7, #16
 80013d4:	4619      	mov	r1, r3
 80013d6:	4805      	ldr	r0, [pc, #20]	; (80013ec <HAL_TIM_MspPostInit+0x60>)
 80013d8:	f000 fd9a 	bl	8001f10 <HAL_GPIO_Init>
 80013dc:	bf00      	nop
 80013de:	3720      	adds	r7, #32
 80013e0:	46bd      	mov	sp, r7
 80013e2:	bd80      	pop	{r7, pc}
 80013e4:	40000400 	.word	0x40000400
 80013e8:	40021000 	.word	0x40021000
 80013ec:	40010800 	.word	0x40010800

080013f0 <HAL_UART_MspInit>:
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b088      	sub	sp, #32
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
 80013f8:	f107 0310 	add.w	r3, r7, #16
 80013fc:	2200      	movs	r2, #0
 80013fe:	601a      	str	r2, [r3, #0]
 8001400:	605a      	str	r2, [r3, #4]
 8001402:	609a      	str	r2, [r3, #8]
 8001404:	60da      	str	r2, [r3, #12]
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	4a19      	ldr	r2, [pc, #100]	; (8001470 <HAL_UART_MspInit+0x80>)
 800140c:	4293      	cmp	r3, r2
 800140e:	d12b      	bne.n	8001468 <HAL_UART_MspInit+0x78>
 8001410:	4b18      	ldr	r3, [pc, #96]	; (8001474 <HAL_UART_MspInit+0x84>)
 8001412:	69db      	ldr	r3, [r3, #28]
 8001414:	4a17      	ldr	r2, [pc, #92]	; (8001474 <HAL_UART_MspInit+0x84>)
 8001416:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800141a:	61d3      	str	r3, [r2, #28]
 800141c:	4b15      	ldr	r3, [pc, #84]	; (8001474 <HAL_UART_MspInit+0x84>)
 800141e:	69db      	ldr	r3, [r3, #28]
 8001420:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001424:	60fb      	str	r3, [r7, #12]
 8001426:	68fb      	ldr	r3, [r7, #12]
 8001428:	4b12      	ldr	r3, [pc, #72]	; (8001474 <HAL_UART_MspInit+0x84>)
 800142a:	699b      	ldr	r3, [r3, #24]
 800142c:	4a11      	ldr	r2, [pc, #68]	; (8001474 <HAL_UART_MspInit+0x84>)
 800142e:	f043 0304 	orr.w	r3, r3, #4
 8001432:	6193      	str	r3, [r2, #24]
 8001434:	4b0f      	ldr	r3, [pc, #60]	; (8001474 <HAL_UART_MspInit+0x84>)
 8001436:	699b      	ldr	r3, [r3, #24]
 8001438:	f003 0304 	and.w	r3, r3, #4
 800143c:	60bb      	str	r3, [r7, #8]
 800143e:	68bb      	ldr	r3, [r7, #8]
 8001440:	230c      	movs	r3, #12
 8001442:	613b      	str	r3, [r7, #16]
 8001444:	2302      	movs	r3, #2
 8001446:	617b      	str	r3, [r7, #20]
 8001448:	2302      	movs	r3, #2
 800144a:	61fb      	str	r3, [r7, #28]
 800144c:	f107 0310 	add.w	r3, r7, #16
 8001450:	4619      	mov	r1, r3
 8001452:	4809      	ldr	r0, [pc, #36]	; (8001478 <HAL_UART_MspInit+0x88>)
 8001454:	f000 fd5c 	bl	8001f10 <HAL_GPIO_Init>
 8001458:	2200      	movs	r2, #0
 800145a:	2100      	movs	r1, #0
 800145c:	2026      	movs	r0, #38	; 0x26
 800145e:	f000 fc70 	bl	8001d42 <HAL_NVIC_SetPriority>
 8001462:	2026      	movs	r0, #38	; 0x26
 8001464:	f000 fc89 	bl	8001d7a <HAL_NVIC_EnableIRQ>
 8001468:	bf00      	nop
 800146a:	3720      	adds	r7, #32
 800146c:	46bd      	mov	sp, r7
 800146e:	bd80      	pop	{r7, pc}
 8001470:	40004400 	.word	0x40004400
 8001474:	40021000 	.word	0x40021000
 8001478:	40010800 	.word	0x40010800

0800147c <NMI_Handler>:
 800147c:	b480      	push	{r7}
 800147e:	af00      	add	r7, sp, #0
 8001480:	e7fe      	b.n	8001480 <NMI_Handler+0x4>

08001482 <HardFault_Handler>:
 8001482:	b480      	push	{r7}
 8001484:	af00      	add	r7, sp, #0
 8001486:	e7fe      	b.n	8001486 <HardFault_Handler+0x4>

08001488 <MemManage_Handler>:
 8001488:	b480      	push	{r7}
 800148a:	af00      	add	r7, sp, #0
 800148c:	e7fe      	b.n	800148c <MemManage_Handler+0x4>

0800148e <BusFault_Handler>:
 800148e:	b480      	push	{r7}
 8001490:	af00      	add	r7, sp, #0
 8001492:	e7fe      	b.n	8001492 <BusFault_Handler+0x4>

08001494 <UsageFault_Handler>:
 8001494:	b480      	push	{r7}
 8001496:	af00      	add	r7, sp, #0
 8001498:	e7fe      	b.n	8001498 <UsageFault_Handler+0x4>

0800149a <SVC_Handler>:
 800149a:	b480      	push	{r7}
 800149c:	af00      	add	r7, sp, #0
 800149e:	bf00      	nop
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bc80      	pop	{r7}
 80014a4:	4770      	bx	lr

080014a6 <DebugMon_Handler>:
 80014a6:	b480      	push	{r7}
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	bf00      	nop
 80014ac:	46bd      	mov	sp, r7
 80014ae:	bc80      	pop	{r7}
 80014b0:	4770      	bx	lr

080014b2 <PendSV_Handler>:
 80014b2:	b480      	push	{r7}
 80014b4:	af00      	add	r7, sp, #0
 80014b6:	bf00      	nop
 80014b8:	46bd      	mov	sp, r7
 80014ba:	bc80      	pop	{r7}
 80014bc:	4770      	bx	lr

080014be <SysTick_Handler>:
 80014be:	b580      	push	{r7, lr}
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	f000 fb4b 	bl	8001b5c <HAL_IncTick>
 80014c6:	bf00      	nop
 80014c8:	bd80      	pop	{r7, pc}
	...

080014cc <TIM3_IRQHandler>:
 80014cc:	b580      	push	{r7, lr}
 80014ce:	af00      	add	r7, sp, #0
 80014d0:	4802      	ldr	r0, [pc, #8]	; (80014dc <TIM3_IRQHandler+0x10>)
 80014d2:	f001 fca9 	bl	8002e28 <HAL_TIM_IRQHandler>
 80014d6:	bf00      	nop
 80014d8:	bd80      	pop	{r7, pc}
 80014da:	bf00      	nop
 80014dc:	2000011c 	.word	0x2000011c

080014e0 <USART2_IRQHandler>:
 80014e0:	b580      	push	{r7, lr}
 80014e2:	af00      	add	r7, sp, #0
 80014e4:	4802      	ldr	r0, [pc, #8]	; (80014f0 <USART2_IRQHandler+0x10>)
 80014e6:	f002 fb41 	bl	8003b6c <HAL_UART_IRQHandler>
 80014ea:	bf00      	nop
 80014ec:	bd80      	pop	{r7, pc}
 80014ee:	bf00      	nop
 80014f0:	20000184 	.word	0x20000184

080014f4 <EXTI15_10_IRQHandler>:
 80014f4:	b580      	push	{r7, lr}
 80014f6:	af00      	add	r7, sp, #0
 80014f8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80014fc:	f000 febc 	bl	8002278 <HAL_GPIO_EXTI_IRQHandler>
 8001500:	bf00      	nop
 8001502:	bd80      	pop	{r7, pc}

08001504 <_sbrk>:
 8001504:	b580      	push	{r7, lr}
 8001506:	b086      	sub	sp, #24
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
 800150c:	4a14      	ldr	r2, [pc, #80]	; (8001560 <_sbrk+0x5c>)
 800150e:	4b15      	ldr	r3, [pc, #84]	; (8001564 <_sbrk+0x60>)
 8001510:	1ad3      	subs	r3, r2, r3
 8001512:	617b      	str	r3, [r7, #20]
 8001514:	697b      	ldr	r3, [r7, #20]
 8001516:	613b      	str	r3, [r7, #16]
 8001518:	4b13      	ldr	r3, [pc, #76]	; (8001568 <_sbrk+0x64>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	2b00      	cmp	r3, #0
 800151e:	d102      	bne.n	8001526 <_sbrk+0x22>
 8001520:	4b11      	ldr	r3, [pc, #68]	; (8001568 <_sbrk+0x64>)
 8001522:	4a12      	ldr	r2, [pc, #72]	; (800156c <_sbrk+0x68>)
 8001524:	601a      	str	r2, [r3, #0]
 8001526:	4b10      	ldr	r3, [pc, #64]	; (8001568 <_sbrk+0x64>)
 8001528:	681a      	ldr	r2, [r3, #0]
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	4413      	add	r3, r2
 800152e:	693a      	ldr	r2, [r7, #16]
 8001530:	429a      	cmp	r2, r3
 8001532:	d207      	bcs.n	8001544 <_sbrk+0x40>
 8001534:	f002 ff12 	bl	800435c <__errno>
 8001538:	4603      	mov	r3, r0
 800153a:	220c      	movs	r2, #12
 800153c:	601a      	str	r2, [r3, #0]
 800153e:	f04f 33ff 	mov.w	r3, #4294967295
 8001542:	e009      	b.n	8001558 <_sbrk+0x54>
 8001544:	4b08      	ldr	r3, [pc, #32]	; (8001568 <_sbrk+0x64>)
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	60fb      	str	r3, [r7, #12]
 800154a:	4b07      	ldr	r3, [pc, #28]	; (8001568 <_sbrk+0x64>)
 800154c:	681a      	ldr	r2, [r3, #0]
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	4413      	add	r3, r2
 8001552:	4a05      	ldr	r2, [pc, #20]	; (8001568 <_sbrk+0x64>)
 8001554:	6013      	str	r3, [r2, #0]
 8001556:	68fb      	ldr	r3, [r7, #12]
 8001558:	4618      	mov	r0, r3
 800155a:	3718      	adds	r7, #24
 800155c:	46bd      	mov	sp, r7
 800155e:	bd80      	pop	{r7, pc}
 8001560:	20005000 	.word	0x20005000
 8001564:	00000400 	.word	0x00000400
 8001568:	200000c4 	.word	0x200000c4
 800156c:	20000210 	.word	0x20000210

08001570 <SystemInit>:
 8001570:	b480      	push	{r7}
 8001572:	af00      	add	r7, sp, #0
 8001574:	bf00      	nop
 8001576:	46bd      	mov	sp, r7
 8001578:	bc80      	pop	{r7}
 800157a:	4770      	bx	lr

0800157c <currentCounter>:
#include "timer.h"

int timer_counter[NO_OF_TIMER];
int timer_flag[NO_OF_TIMER];

int currentCounter(int timer) {
 800157c:	b480      	push	{r7}
 800157e:	b083      	sub	sp, #12
 8001580:	af00      	add	r7, sp, #0
 8001582:	6078      	str	r0, [r7, #4]
	return timer_counter[timer];
 8001584:	4a04      	ldr	r2, [pc, #16]	; (8001598 <currentCounter+0x1c>)
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
}
 800158c:	4618      	mov	r0, r3
 800158e:	370c      	adds	r7, #12
 8001590:	46bd      	mov	sp, r7
 8001592:	bc80      	pop	{r7}
 8001594:	4770      	bx	lr
 8001596:	bf00      	nop
 8001598:	20000164 	.word	0x20000164

0800159c <isTimerUp>:

int isTimerUp(int timer) {
 800159c:	b480      	push	{r7}
 800159e:	b083      	sub	sp, #12
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	6078      	str	r0, [r7, #4]
	return (timer_flag[timer] == 1);
 80015a4:	4a06      	ldr	r2, [pc, #24]	; (80015c0 <isTimerUp+0x24>)
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015ac:	2b01      	cmp	r3, #1
 80015ae:	bf0c      	ite	eq
 80015b0:	2301      	moveq	r3, #1
 80015b2:	2300      	movne	r3, #0
 80015b4:	b2db      	uxtb	r3, r3
}
 80015b6:	4618      	mov	r0, r3
 80015b8:	370c      	adds	r7, #12
 80015ba:	46bd      	mov	sp, r7
 80015bc:	bc80      	pop	{r7}
 80015be:	4770      	bx	lr
 80015c0:	20000174 	.word	0x20000174

080015c4 <setTimer>:

void setTimer(int timer, int duration){
 80015c4:	b480      	push	{r7}
 80015c6:	b083      	sub	sp, #12
 80015c8:	af00      	add	r7, sp, #0
 80015ca:	6078      	str	r0, [r7, #4]
 80015cc:	6039      	str	r1, [r7, #0]
	timer_counter[timer] = duration / timer_cycle;
 80015ce:	4b09      	ldr	r3, [pc, #36]	; (80015f4 <setTimer+0x30>)
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	683a      	ldr	r2, [r7, #0]
 80015d4:	fb92 f2f3 	sdiv	r2, r2, r3
 80015d8:	4907      	ldr	r1, [pc, #28]	; (80015f8 <setTimer+0x34>)
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	timer_flag[timer] = 0;
 80015e0:	4a06      	ldr	r2, [pc, #24]	; (80015fc <setTimer+0x38>)
 80015e2:	687b      	ldr	r3, [r7, #4]
 80015e4:	2100      	movs	r1, #0
 80015e6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80015ea:	bf00      	nop
 80015ec:	370c      	adds	r7, #12
 80015ee:	46bd      	mov	sp, r7
 80015f0:	bc80      	pop	{r7}
 80015f2:	4770      	bx	lr
 80015f4:	20000010 	.word	0x20000010
 80015f8:	20000164 	.word	0x20000164
 80015fc:	20000174 	.word	0x20000174

08001600 <timerRun>:
void timerRun(){
 8001600:	b480      	push	{r7}
 8001602:	b083      	sub	sp, #12
 8001604:	af00      	add	r7, sp, #0
	for (int timer = 0; timer < NO_OF_TIMER; timer++) {
 8001606:	2300      	movs	r3, #0
 8001608:	607b      	str	r3, [r7, #4]
 800160a:	e01c      	b.n	8001646 <timerRun+0x46>
		if(timer_counter[timer] > 0){
 800160c:	4a12      	ldr	r2, [pc, #72]	; (8001658 <timerRun+0x58>)
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001614:	2b00      	cmp	r3, #0
 8001616:	dd13      	ble.n	8001640 <timerRun+0x40>
			timer_counter[timer]--;
 8001618:	4a0f      	ldr	r2, [pc, #60]	; (8001658 <timerRun+0x58>)
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001620:	1e5a      	subs	r2, r3, #1
 8001622:	490d      	ldr	r1, [pc, #52]	; (8001658 <timerRun+0x58>)
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if(timer_counter[timer] == 0) {
 800162a:	4a0b      	ldr	r2, [pc, #44]	; (8001658 <timerRun+0x58>)
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001632:	2b00      	cmp	r3, #0
 8001634:	d104      	bne.n	8001640 <timerRun+0x40>
				timer_flag[timer] = 1;
 8001636:	4a09      	ldr	r2, [pc, #36]	; (800165c <timerRun+0x5c>)
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	2101      	movs	r1, #1
 800163c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int timer = 0; timer < NO_OF_TIMER; timer++) {
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	3301      	adds	r3, #1
 8001644:	607b      	str	r3, [r7, #4]
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	2b03      	cmp	r3, #3
 800164a:	dddf      	ble.n	800160c <timerRun+0xc>
			}
		}
	}
}
 800164c:	bf00      	nop
 800164e:	bf00      	nop
 8001650:	370c      	adds	r7, #12
 8001652:	46bd      	mov	sp, r7
 8001654:	bc80      	pop	{r7}
 8001656:	4770      	bx	lr
 8001658:	20000164 	.word	0x20000164
 800165c:	20000174 	.word	0x20000174

08001660 <sendTimerCounter>:
int count1 = 0;
int count2 = 0;
char str[50];
UART_HandleTypeDef huart2;

void sendTimerCounter() {
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0

	// Send current time counter of horizontal traffic lights
	if (count1 != currentCounter(0) / 100) {
 8001664:	2000      	movs	r0, #0
 8001666:	f7ff ff89 	bl	800157c <currentCounter>
 800166a:	4603      	mov	r3, r0
 800166c:	4a1f      	ldr	r2, [pc, #124]	; (80016ec <sendTimerCounter+0x8c>)
 800166e:	fb82 1203 	smull	r1, r2, r2, r3
 8001672:	1152      	asrs	r2, r2, #5
 8001674:	17db      	asrs	r3, r3, #31
 8001676:	1ad2      	subs	r2, r2, r3
 8001678:	4b1d      	ldr	r3, [pc, #116]	; (80016f0 <sendTimerCounter+0x90>)
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	429a      	cmp	r2, r3
 800167e:	d033      	beq.n	80016e8 <sendTimerCounter+0x88>
		count1 = currentCounter(0) / 100;
 8001680:	2000      	movs	r0, #0
 8001682:	f7ff ff7b 	bl	800157c <currentCounter>
 8001686:	4603      	mov	r3, r0
 8001688:	4a18      	ldr	r2, [pc, #96]	; (80016ec <sendTimerCounter+0x8c>)
 800168a:	fb82 1203 	smull	r1, r2, r2, r3
 800168e:	1152      	asrs	r2, r2, #5
 8001690:	17db      	asrs	r3, r3, #31
 8001692:	1ad3      	subs	r3, r2, r3
 8001694:	4a16      	ldr	r2, [pc, #88]	; (80016f0 <sendTimerCounter+0x90>)
 8001696:	6013      	str	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d - ", "H: ", count1), 100);
 8001698:	4b15      	ldr	r3, [pc, #84]	; (80016f0 <sendTimerCounter+0x90>)
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	4a15      	ldr	r2, [pc, #84]	; (80016f4 <sendTimerCounter+0x94>)
 800169e:	4916      	ldr	r1, [pc, #88]	; (80016f8 <sendTimerCounter+0x98>)
 80016a0:	4816      	ldr	r0, [pc, #88]	; (80016fc <sendTimerCounter+0x9c>)
 80016a2:	f002 fe8d 	bl	80043c0 <siprintf>
 80016a6:	4603      	mov	r3, r0
 80016a8:	b29a      	uxth	r2, r3
 80016aa:	2364      	movs	r3, #100	; 0x64
 80016ac:	4913      	ldr	r1, [pc, #76]	; (80016fc <sendTimerCounter+0x9c>)
 80016ae:	4814      	ldr	r0, [pc, #80]	; (8001700 <sendTimerCounter+0xa0>)
 80016b0:	f002 f9c9 	bl	8003a46 <HAL_UART_Transmit>

		count2 = currentCounter(1) / 100;
 80016b4:	2001      	movs	r0, #1
 80016b6:	f7ff ff61 	bl	800157c <currentCounter>
 80016ba:	4603      	mov	r3, r0
 80016bc:	4a0b      	ldr	r2, [pc, #44]	; (80016ec <sendTimerCounter+0x8c>)
 80016be:	fb82 1203 	smull	r1, r2, r2, r3
 80016c2:	1152      	asrs	r2, r2, #5
 80016c4:	17db      	asrs	r3, r3, #31
 80016c6:	1ad3      	subs	r3, r2, r3
 80016c8:	4a0e      	ldr	r2, [pc, #56]	; (8001704 <sendTimerCounter+0xa4>)
 80016ca:	6013      	str	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "V: ", count2), 100);
 80016cc:	4b0d      	ldr	r3, [pc, #52]	; (8001704 <sendTimerCounter+0xa4>)
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	4a0d      	ldr	r2, [pc, #52]	; (8001708 <sendTimerCounter+0xa8>)
 80016d2:	490e      	ldr	r1, [pc, #56]	; (800170c <sendTimerCounter+0xac>)
 80016d4:	4809      	ldr	r0, [pc, #36]	; (80016fc <sendTimerCounter+0x9c>)
 80016d6:	f002 fe73 	bl	80043c0 <siprintf>
 80016da:	4603      	mov	r3, r0
 80016dc:	b29a      	uxth	r2, r3
 80016de:	2364      	movs	r3, #100	; 0x64
 80016e0:	4906      	ldr	r1, [pc, #24]	; (80016fc <sendTimerCounter+0x9c>)
 80016e2:	4807      	ldr	r0, [pc, #28]	; (8001700 <sendTimerCounter+0xa0>)
 80016e4:	f002 f9af 	bl	8003a46 <HAL_UART_Transmit>

//	if (count2 != currentCounter(1) / 100) {
//		count2 = currentCounter(1) / 100;
//		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "V: ", count2), 100);
//	}
}
 80016e8:	bf00      	nop
 80016ea:	bd80      	pop	{r7, pc}
 80016ec:	51eb851f 	.word	0x51eb851f
 80016f0:	200000cc 	.word	0x200000cc
 80016f4:	08004c4c 	.word	0x08004c4c
 80016f8:	08004c50 	.word	0x08004c50
 80016fc:	200001c8 	.word	0x200001c8
 8001700:	20000184 	.word	0x20000184
 8001704:	200000d0 	.word	0x200000d0
 8001708:	08004c58 	.word	0x08004c58
 800170c:	08004c5c 	.word	0x08004c5c

08001710 <sendTimeDuration>:

void sendTimeDuration() {
 8001710:	b580      	push	{r7, lr}
 8001712:	af00      	add	r7, sp, #0
	switch (mode) {
 8001714:	4b45      	ldr	r3, [pc, #276]	; (800182c <sendTimeDuration+0x11c>)
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	3b05      	subs	r3, #5
 800171a:	2b03      	cmp	r3, #3
 800171c:	d87d      	bhi.n	800181a <sendTimeDuration+0x10a>
 800171e:	a201      	add	r2, pc, #4	; (adr r2, 8001724 <sendTimeDuration+0x14>)
 8001720:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001724:	08001735 	.word	0x08001735
 8001728:	0800173d 	.word	0x0800173d
 800172c:	08001787 	.word	0x08001787
 8001730:	080017d1 	.word	0x080017d1
		case MAN_MODE:
			count = 0;
 8001734:	4b3e      	ldr	r3, [pc, #248]	; (8001830 <sendTimeDuration+0x120>)
 8001736:	2200      	movs	r2, #0
 8001738:	601a      	str	r2, [r3, #0]
			break;
 800173a:	e075      	b.n	8001828 <sendTimeDuration+0x118>

		case MAN_RED:
			// Send duration time of red lights
			if (count != RED_time / 1000)
 800173c:	4b3d      	ldr	r3, [pc, #244]	; (8001834 <sendTimeDuration+0x124>)
 800173e:	681b      	ldr	r3, [r3, #0]
 8001740:	4a3d      	ldr	r2, [pc, #244]	; (8001838 <sendTimeDuration+0x128>)
 8001742:	fb82 1203 	smull	r1, r2, r2, r3
 8001746:	1192      	asrs	r2, r2, #6
 8001748:	17db      	asrs	r3, r3, #31
 800174a:	1ad2      	subs	r2, r2, r3
 800174c:	4b38      	ldr	r3, [pc, #224]	; (8001830 <sendTimeDuration+0x120>)
 800174e:	681b      	ldr	r3, [r3, #0]
 8001750:	429a      	cmp	r2, r3
 8001752:	d064      	beq.n	800181e <sendTimeDuration+0x10e>
			{
				count = RED_time / 1000;
 8001754:	4b37      	ldr	r3, [pc, #220]	; (8001834 <sendTimeDuration+0x124>)
 8001756:	681b      	ldr	r3, [r3, #0]
 8001758:	4a37      	ldr	r2, [pc, #220]	; (8001838 <sendTimeDuration+0x128>)
 800175a:	fb82 1203 	smull	r1, r2, r2, r3
 800175e:	1192      	asrs	r2, r2, #6
 8001760:	17db      	asrs	r3, r3, #31
 8001762:	1ad3      	subs	r3, r2, r3
 8001764:	4a32      	ldr	r2, [pc, #200]	; (8001830 <sendTimeDuration+0x120>)
 8001766:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Red = ", count), 100);
 8001768:	4b31      	ldr	r3, [pc, #196]	; (8001830 <sendTimeDuration+0x120>)
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	4a33      	ldr	r2, [pc, #204]	; (800183c <sendTimeDuration+0x12c>)
 800176e:	4934      	ldr	r1, [pc, #208]	; (8001840 <sendTimeDuration+0x130>)
 8001770:	4834      	ldr	r0, [pc, #208]	; (8001844 <sendTimeDuration+0x134>)
 8001772:	f002 fe25 	bl	80043c0 <siprintf>
 8001776:	4603      	mov	r3, r0
 8001778:	b29a      	uxth	r2, r3
 800177a:	2364      	movs	r3, #100	; 0x64
 800177c:	4931      	ldr	r1, [pc, #196]	; (8001844 <sendTimeDuration+0x134>)
 800177e:	4832      	ldr	r0, [pc, #200]	; (8001848 <sendTimeDuration+0x138>)
 8001780:	f002 f961 	bl	8003a46 <HAL_UART_Transmit>
			}
			break;
 8001784:	e04b      	b.n	800181e <sendTimeDuration+0x10e>

		case MAN_GREEN:
			// Send duration time of green lights
			if (count != GREEN_time / 1000)
 8001786:	4b31      	ldr	r3, [pc, #196]	; (800184c <sendTimeDuration+0x13c>)
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	4a2b      	ldr	r2, [pc, #172]	; (8001838 <sendTimeDuration+0x128>)
 800178c:	fb82 1203 	smull	r1, r2, r2, r3
 8001790:	1192      	asrs	r2, r2, #6
 8001792:	17db      	asrs	r3, r3, #31
 8001794:	1ad2      	subs	r2, r2, r3
 8001796:	4b26      	ldr	r3, [pc, #152]	; (8001830 <sendTimeDuration+0x120>)
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	429a      	cmp	r2, r3
 800179c:	d041      	beq.n	8001822 <sendTimeDuration+0x112>
			{
				count = GREEN_time / 1000;
 800179e:	4b2b      	ldr	r3, [pc, #172]	; (800184c <sendTimeDuration+0x13c>)
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	4a25      	ldr	r2, [pc, #148]	; (8001838 <sendTimeDuration+0x128>)
 80017a4:	fb82 1203 	smull	r1, r2, r2, r3
 80017a8:	1192      	asrs	r2, r2, #6
 80017aa:	17db      	asrs	r3, r3, #31
 80017ac:	1ad3      	subs	r3, r2, r3
 80017ae:	4a20      	ldr	r2, [pc, #128]	; (8001830 <sendTimeDuration+0x120>)
 80017b0:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Green = ", count), 100);
 80017b2:	4b1f      	ldr	r3, [pc, #124]	; (8001830 <sendTimeDuration+0x120>)
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	4a26      	ldr	r2, [pc, #152]	; (8001850 <sendTimeDuration+0x140>)
 80017b8:	4921      	ldr	r1, [pc, #132]	; (8001840 <sendTimeDuration+0x130>)
 80017ba:	4822      	ldr	r0, [pc, #136]	; (8001844 <sendTimeDuration+0x134>)
 80017bc:	f002 fe00 	bl	80043c0 <siprintf>
 80017c0:	4603      	mov	r3, r0
 80017c2:	b29a      	uxth	r2, r3
 80017c4:	2364      	movs	r3, #100	; 0x64
 80017c6:	491f      	ldr	r1, [pc, #124]	; (8001844 <sendTimeDuration+0x134>)
 80017c8:	481f      	ldr	r0, [pc, #124]	; (8001848 <sendTimeDuration+0x138>)
 80017ca:	f002 f93c 	bl	8003a46 <HAL_UART_Transmit>
			}
			break;
 80017ce:	e028      	b.n	8001822 <sendTimeDuration+0x112>

		case MAN_YELLOW:
			// Send duration time of yellow lights
			if (count != YELLOW_time / 1000)
 80017d0:	4b20      	ldr	r3, [pc, #128]	; (8001854 <sendTimeDuration+0x144>)
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	4a18      	ldr	r2, [pc, #96]	; (8001838 <sendTimeDuration+0x128>)
 80017d6:	fb82 1203 	smull	r1, r2, r2, r3
 80017da:	1192      	asrs	r2, r2, #6
 80017dc:	17db      	asrs	r3, r3, #31
 80017de:	1ad2      	subs	r2, r2, r3
 80017e0:	4b13      	ldr	r3, [pc, #76]	; (8001830 <sendTimeDuration+0x120>)
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	429a      	cmp	r2, r3
 80017e6:	d01e      	beq.n	8001826 <sendTimeDuration+0x116>
			{
				count = YELLOW_time / 1000;
 80017e8:	4b1a      	ldr	r3, [pc, #104]	; (8001854 <sendTimeDuration+0x144>)
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	4a12      	ldr	r2, [pc, #72]	; (8001838 <sendTimeDuration+0x128>)
 80017ee:	fb82 1203 	smull	r1, r2, r2, r3
 80017f2:	1192      	asrs	r2, r2, #6
 80017f4:	17db      	asrs	r3, r3, #31
 80017f6:	1ad3      	subs	r3, r2, r3
 80017f8:	4a0d      	ldr	r2, [pc, #52]	; (8001830 <sendTimeDuration+0x120>)
 80017fa:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Yellow = ", count), 100);
 80017fc:	4b0c      	ldr	r3, [pc, #48]	; (8001830 <sendTimeDuration+0x120>)
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	4a15      	ldr	r2, [pc, #84]	; (8001858 <sendTimeDuration+0x148>)
 8001802:	490f      	ldr	r1, [pc, #60]	; (8001840 <sendTimeDuration+0x130>)
 8001804:	480f      	ldr	r0, [pc, #60]	; (8001844 <sendTimeDuration+0x134>)
 8001806:	f002 fddb 	bl	80043c0 <siprintf>
 800180a:	4603      	mov	r3, r0
 800180c:	b29a      	uxth	r2, r3
 800180e:	2364      	movs	r3, #100	; 0x64
 8001810:	490c      	ldr	r1, [pc, #48]	; (8001844 <sendTimeDuration+0x134>)
 8001812:	480d      	ldr	r0, [pc, #52]	; (8001848 <sendTimeDuration+0x138>)
 8001814:	f002 f917 	bl	8003a46 <HAL_UART_Transmit>
			}
			break;
 8001818:	e005      	b.n	8001826 <sendTimeDuration+0x116>

		default:
			break;
 800181a:	bf00      	nop
 800181c:	e004      	b.n	8001828 <sendTimeDuration+0x118>
			break;
 800181e:	bf00      	nop
 8001820:	e002      	b.n	8001828 <sendTimeDuration+0x118>
			break;
 8001822:	bf00      	nop
 8001824:	e000      	b.n	8001828 <sendTimeDuration+0x118>
			break;
 8001826:	bf00      	nop
	}
}
 8001828:	bf00      	nop
 800182a:	bd80      	pop	{r7, pc}
 800182c:	200000c0 	.word	0x200000c0
 8001830:	200000c8 	.word	0x200000c8
 8001834:	20000018 	.word	0x20000018
 8001838:	10624dd3 	.word	0x10624dd3
 800183c:	08004c64 	.word	0x08004c64
 8001840:	08004c5c 	.word	0x08004c5c
 8001844:	200001c8 	.word	0x200001c8
 8001848:	20000184 	.word	0x20000184
 800184c:	2000001c 	.word	0x2000001c
 8001850:	08004c6c 	.word	0x08004c6c
 8001854:	20000020 	.word	0x20000020
 8001858:	08004c78 	.word	0x08004c78

0800185c <sendTimeInc>:

void sendTimeInc() {
 800185c:	b580      	push	{r7, lr}
 800185e:	af00      	add	r7, sp, #0
	if (count != time_count) {
 8001860:	4b23      	ldr	r3, [pc, #140]	; (80018f0 <sendTimeInc+0x94>)
 8001862:	681a      	ldr	r2, [r3, #0]
 8001864:	4b23      	ldr	r3, [pc, #140]	; (80018f4 <sendTimeInc+0x98>)
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	429a      	cmp	r2, r3
 800186a:	d03b      	beq.n	80018e4 <sendTimeInc+0x88>
		count = time_count;
 800186c:	4b21      	ldr	r3, [pc, #132]	; (80018f4 <sendTimeInc+0x98>)
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	4a1f      	ldr	r2, [pc, #124]	; (80018f0 <sendTimeInc+0x94>)
 8001872:	6013      	str	r3, [r2, #0]

		switch (mode) {
 8001874:	4b20      	ldr	r3, [pc, #128]	; (80018f8 <sendTimeInc+0x9c>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	2b0b      	cmp	r3, #11
 800187a:	d024      	beq.n	80018c6 <sendTimeInc+0x6a>
 800187c:	2b0b      	cmp	r3, #11
 800187e:	dc33      	bgt.n	80018e8 <sendTimeInc+0x8c>
 8001880:	2b09      	cmp	r3, #9
 8001882:	d002      	beq.n	800188a <sendTimeInc+0x2e>
 8001884:	2b0a      	cmp	r3, #10
 8001886:	d00f      	beq.n	80018a8 <sendTimeInc+0x4c>
				// Send counter to increase duration time of red lights
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Y_inc = ", count), 100);
				break;

			default:
				break;
 8001888:	e02e      	b.n	80018e8 <sendTimeInc+0x8c>
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "R_inc = ", count), 100);
 800188a:	4b19      	ldr	r3, [pc, #100]	; (80018f0 <sendTimeInc+0x94>)
 800188c:	681b      	ldr	r3, [r3, #0]
 800188e:	4a1b      	ldr	r2, [pc, #108]	; (80018fc <sendTimeInc+0xa0>)
 8001890:	491b      	ldr	r1, [pc, #108]	; (8001900 <sendTimeInc+0xa4>)
 8001892:	481c      	ldr	r0, [pc, #112]	; (8001904 <sendTimeInc+0xa8>)
 8001894:	f002 fd94 	bl	80043c0 <siprintf>
 8001898:	4603      	mov	r3, r0
 800189a:	b29a      	uxth	r2, r3
 800189c:	2364      	movs	r3, #100	; 0x64
 800189e:	4919      	ldr	r1, [pc, #100]	; (8001904 <sendTimeInc+0xa8>)
 80018a0:	4819      	ldr	r0, [pc, #100]	; (8001908 <sendTimeInc+0xac>)
 80018a2:	f002 f8d0 	bl	8003a46 <HAL_UART_Transmit>
				break;
 80018a6:	e020      	b.n	80018ea <sendTimeInc+0x8e>
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "G_inc = ", count), 100);
 80018a8:	4b11      	ldr	r3, [pc, #68]	; (80018f0 <sendTimeInc+0x94>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	4a17      	ldr	r2, [pc, #92]	; (800190c <sendTimeInc+0xb0>)
 80018ae:	4914      	ldr	r1, [pc, #80]	; (8001900 <sendTimeInc+0xa4>)
 80018b0:	4814      	ldr	r0, [pc, #80]	; (8001904 <sendTimeInc+0xa8>)
 80018b2:	f002 fd85 	bl	80043c0 <siprintf>
 80018b6:	4603      	mov	r3, r0
 80018b8:	b29a      	uxth	r2, r3
 80018ba:	2364      	movs	r3, #100	; 0x64
 80018bc:	4911      	ldr	r1, [pc, #68]	; (8001904 <sendTimeInc+0xa8>)
 80018be:	4812      	ldr	r0, [pc, #72]	; (8001908 <sendTimeInc+0xac>)
 80018c0:	f002 f8c1 	bl	8003a46 <HAL_UART_Transmit>
				break;
 80018c4:	e011      	b.n	80018ea <sendTimeInc+0x8e>
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Y_inc = ", count), 100);
 80018c6:	4b0a      	ldr	r3, [pc, #40]	; (80018f0 <sendTimeInc+0x94>)
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	4a11      	ldr	r2, [pc, #68]	; (8001910 <sendTimeInc+0xb4>)
 80018cc:	490c      	ldr	r1, [pc, #48]	; (8001900 <sendTimeInc+0xa4>)
 80018ce:	480d      	ldr	r0, [pc, #52]	; (8001904 <sendTimeInc+0xa8>)
 80018d0:	f002 fd76 	bl	80043c0 <siprintf>
 80018d4:	4603      	mov	r3, r0
 80018d6:	b29a      	uxth	r2, r3
 80018d8:	2364      	movs	r3, #100	; 0x64
 80018da:	490a      	ldr	r1, [pc, #40]	; (8001904 <sendTimeInc+0xa8>)
 80018dc:	480a      	ldr	r0, [pc, #40]	; (8001908 <sendTimeInc+0xac>)
 80018de:	f002 f8b2 	bl	8003a46 <HAL_UART_Transmit>
				break;
 80018e2:	e002      	b.n	80018ea <sendTimeInc+0x8e>
		}
	}
 80018e4:	bf00      	nop
 80018e6:	e000      	b.n	80018ea <sendTimeInc+0x8e>
				break;
 80018e8:	bf00      	nop
}
 80018ea:	bf00      	nop
 80018ec:	bd80      	pop	{r7, pc}
 80018ee:	bf00      	nop
 80018f0:	200000c8 	.word	0x200000c8
 80018f4:	200000bc 	.word	0x200000bc
 80018f8:	200000c0 	.word	0x200000c0
 80018fc:	08004c84 	.word	0x08004c84
 8001900:	08004c5c 	.word	0x08004c5c
 8001904:	200001c8 	.word	0x200001c8
 8001908:	20000184 	.word	0x20000184
 800190c:	08004c90 	.word	0x08004c90
 8001910:	08004c9c 	.word	0x08004c9c

08001914 <sendModeNoti>:

void sendModeNoti() {
 8001914:	b580      	push	{r7, lr}
 8001916:	af00      	add	r7, sp, #0
	switch (mode) {
 8001918:	4b30      	ldr	r3, [pc, #192]	; (80019dc <sendModeNoti+0xc8>)
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	3b01      	subs	r3, #1
 800191e:	2b0a      	cmp	r3, #10
 8001920:	d859      	bhi.n	80019d6 <sendModeNoti+0xc2>
 8001922:	a201      	add	r2, pc, #4	; (adr r2, 8001928 <sendModeNoti+0x14>)
 8001924:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001928:	08001955 	.word	0x08001955
 800192c:	080019d7 	.word	0x080019d7
 8001930:	080019d7 	.word	0x080019d7
 8001934:	080019d7 	.word	0x080019d7
 8001938:	0800196f 	.word	0x0800196f
 800193c:	080019d7 	.word	0x080019d7
 8001940:	080019d7 	.word	0x080019d7
 8001944:	080019d7 	.word	0x080019d7
 8001948:	08001989 	.word	0x08001989
 800194c:	080019a3 	.word	0x080019a3
 8001950:	080019bd 	.word	0x080019bd
		case AUTO_MODE:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "AUTO MODE"), 100);
 8001954:	4a22      	ldr	r2, [pc, #136]	; (80019e0 <sendModeNoti+0xcc>)
 8001956:	4923      	ldr	r1, [pc, #140]	; (80019e4 <sendModeNoti+0xd0>)
 8001958:	4823      	ldr	r0, [pc, #140]	; (80019e8 <sendModeNoti+0xd4>)
 800195a:	f002 fd31 	bl	80043c0 <siprintf>
 800195e:	4603      	mov	r3, r0
 8001960:	b29a      	uxth	r2, r3
 8001962:	2364      	movs	r3, #100	; 0x64
 8001964:	4920      	ldr	r1, [pc, #128]	; (80019e8 <sendModeNoti+0xd4>)
 8001966:	4821      	ldr	r0, [pc, #132]	; (80019ec <sendModeNoti+0xd8>)
 8001968:	f002 f86d 	bl	8003a46 <HAL_UART_Transmit>
			break;
 800196c:	e034      	b.n	80019d8 <sendModeNoti+0xc4>
		case MAN_MODE:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "MANUAL MODE"), 100);
 800196e:	4a20      	ldr	r2, [pc, #128]	; (80019f0 <sendModeNoti+0xdc>)
 8001970:	491c      	ldr	r1, [pc, #112]	; (80019e4 <sendModeNoti+0xd0>)
 8001972:	481d      	ldr	r0, [pc, #116]	; (80019e8 <sendModeNoti+0xd4>)
 8001974:	f002 fd24 	bl	80043c0 <siprintf>
 8001978:	4603      	mov	r3, r0
 800197a:	b29a      	uxth	r2, r3
 800197c:	2364      	movs	r3, #100	; 0x64
 800197e:	491a      	ldr	r1, [pc, #104]	; (80019e8 <sendModeNoti+0xd4>)
 8001980:	481a      	ldr	r0, [pc, #104]	; (80019ec <sendModeNoti+0xd8>)
 8001982:	f002 f860 	bl	8003a46 <HAL_UART_Transmit>
			break;
 8001986:	e027      	b.n	80019d8 <sendModeNoti+0xc4>
		case INC_RED:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "TUNING MODE"), 100);
 8001988:	4a1a      	ldr	r2, [pc, #104]	; (80019f4 <sendModeNoti+0xe0>)
 800198a:	4916      	ldr	r1, [pc, #88]	; (80019e4 <sendModeNoti+0xd0>)
 800198c:	4816      	ldr	r0, [pc, #88]	; (80019e8 <sendModeNoti+0xd4>)
 800198e:	f002 fd17 	bl	80043c0 <siprintf>
 8001992:	4603      	mov	r3, r0
 8001994:	b29a      	uxth	r2, r3
 8001996:	2364      	movs	r3, #100	; 0x64
 8001998:	4913      	ldr	r1, [pc, #76]	; (80019e8 <sendModeNoti+0xd4>)
 800199a:	4814      	ldr	r0, [pc, #80]	; (80019ec <sendModeNoti+0xd8>)
 800199c:	f002 f853 	bl	8003a46 <HAL_UART_Transmit>
			break;
 80019a0:	e01a      	b.n	80019d8 <sendModeNoti+0xc4>
		case INC_GREEN:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "TUNING MODE"), 100);
 80019a2:	4a14      	ldr	r2, [pc, #80]	; (80019f4 <sendModeNoti+0xe0>)
 80019a4:	490f      	ldr	r1, [pc, #60]	; (80019e4 <sendModeNoti+0xd0>)
 80019a6:	4810      	ldr	r0, [pc, #64]	; (80019e8 <sendModeNoti+0xd4>)
 80019a8:	f002 fd0a 	bl	80043c0 <siprintf>
 80019ac:	4603      	mov	r3, r0
 80019ae:	b29a      	uxth	r2, r3
 80019b0:	2364      	movs	r3, #100	; 0x64
 80019b2:	490d      	ldr	r1, [pc, #52]	; (80019e8 <sendModeNoti+0xd4>)
 80019b4:	480d      	ldr	r0, [pc, #52]	; (80019ec <sendModeNoti+0xd8>)
 80019b6:	f002 f846 	bl	8003a46 <HAL_UART_Transmit>
			break;
 80019ba:	e00d      	b.n	80019d8 <sendModeNoti+0xc4>
		case INC_YELLOW:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "TUNING MODE"), 100);
 80019bc:	4a0d      	ldr	r2, [pc, #52]	; (80019f4 <sendModeNoti+0xe0>)
 80019be:	4909      	ldr	r1, [pc, #36]	; (80019e4 <sendModeNoti+0xd0>)
 80019c0:	4809      	ldr	r0, [pc, #36]	; (80019e8 <sendModeNoti+0xd4>)
 80019c2:	f002 fcfd 	bl	80043c0 <siprintf>
 80019c6:	4603      	mov	r3, r0
 80019c8:	b29a      	uxth	r2, r3
 80019ca:	2364      	movs	r3, #100	; 0x64
 80019cc:	4906      	ldr	r1, [pc, #24]	; (80019e8 <sendModeNoti+0xd4>)
 80019ce:	4807      	ldr	r0, [pc, #28]	; (80019ec <sendModeNoti+0xd8>)
 80019d0:	f002 f839 	bl	8003a46 <HAL_UART_Transmit>
			break;
 80019d4:	e000      	b.n	80019d8 <sendModeNoti+0xc4>
		default:
			break;
 80019d6:	bf00      	nop
	}
}
 80019d8:	bf00      	nop
 80019da:	bd80      	pop	{r7, pc}
 80019dc:	200000c0 	.word	0x200000c0
 80019e0:	08004ca8 	.word	0x08004ca8
 80019e4:	08004cb4 	.word	0x08004cb4
 80019e8:	200001c8 	.word	0x200001c8
 80019ec:	20000184 	.word	0x20000184
 80019f0:	08004cbc 	.word	0x08004cbc
 80019f4:	08004cc8 	.word	0x08004cc8

080019f8 <sendSetNoti>:

void sendSetNoti() {
 80019f8:	b580      	push	{r7, lr}
 80019fa:	af00      	add	r7, sp, #0
	switch (mode) {
 80019fc:	4b1a      	ldr	r3, [pc, #104]	; (8001a68 <sendSetNoti+0x70>)
 80019fe:	681b      	ldr	r3, [r3, #0]
 8001a00:	2b0b      	cmp	r3, #11
 8001a02:	d020      	beq.n	8001a46 <sendSetNoti+0x4e>
 8001a04:	2b0b      	cmp	r3, #11
 8001a06:	dc2b      	bgt.n	8001a60 <sendSetNoti+0x68>
 8001a08:	2b09      	cmp	r3, #9
 8001a0a:	d002      	beq.n	8001a12 <sendSetNoti+0x1a>
 8001a0c:	2b0a      	cmp	r3, #10
 8001a0e:	d00d      	beq.n	8001a2c <sendSetNoti+0x34>
		break;
	case INC_YELLOW:
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET YELLOW"), 100);
		break;
		default:
			break;
 8001a10:	e026      	b.n	8001a60 <sendSetNoti+0x68>
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET RED"), 100);
 8001a12:	4a16      	ldr	r2, [pc, #88]	; (8001a6c <sendSetNoti+0x74>)
 8001a14:	4916      	ldr	r1, [pc, #88]	; (8001a70 <sendSetNoti+0x78>)
 8001a16:	4817      	ldr	r0, [pc, #92]	; (8001a74 <sendSetNoti+0x7c>)
 8001a18:	f002 fcd2 	bl	80043c0 <siprintf>
 8001a1c:	4603      	mov	r3, r0
 8001a1e:	b29a      	uxth	r2, r3
 8001a20:	2364      	movs	r3, #100	; 0x64
 8001a22:	4914      	ldr	r1, [pc, #80]	; (8001a74 <sendSetNoti+0x7c>)
 8001a24:	4814      	ldr	r0, [pc, #80]	; (8001a78 <sendSetNoti+0x80>)
 8001a26:	f002 f80e 	bl	8003a46 <HAL_UART_Transmit>
		break;
 8001a2a:	e01a      	b.n	8001a62 <sendSetNoti+0x6a>
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET GREEN"), 100);
 8001a2c:	4a13      	ldr	r2, [pc, #76]	; (8001a7c <sendSetNoti+0x84>)
 8001a2e:	4910      	ldr	r1, [pc, #64]	; (8001a70 <sendSetNoti+0x78>)
 8001a30:	4810      	ldr	r0, [pc, #64]	; (8001a74 <sendSetNoti+0x7c>)
 8001a32:	f002 fcc5 	bl	80043c0 <siprintf>
 8001a36:	4603      	mov	r3, r0
 8001a38:	b29a      	uxth	r2, r3
 8001a3a:	2364      	movs	r3, #100	; 0x64
 8001a3c:	490d      	ldr	r1, [pc, #52]	; (8001a74 <sendSetNoti+0x7c>)
 8001a3e:	480e      	ldr	r0, [pc, #56]	; (8001a78 <sendSetNoti+0x80>)
 8001a40:	f002 f801 	bl	8003a46 <HAL_UART_Transmit>
		break;
 8001a44:	e00d      	b.n	8001a62 <sendSetNoti+0x6a>
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET YELLOW"), 100);
 8001a46:	4a0e      	ldr	r2, [pc, #56]	; (8001a80 <sendSetNoti+0x88>)
 8001a48:	4909      	ldr	r1, [pc, #36]	; (8001a70 <sendSetNoti+0x78>)
 8001a4a:	480a      	ldr	r0, [pc, #40]	; (8001a74 <sendSetNoti+0x7c>)
 8001a4c:	f002 fcb8 	bl	80043c0 <siprintf>
 8001a50:	4603      	mov	r3, r0
 8001a52:	b29a      	uxth	r2, r3
 8001a54:	2364      	movs	r3, #100	; 0x64
 8001a56:	4907      	ldr	r1, [pc, #28]	; (8001a74 <sendSetNoti+0x7c>)
 8001a58:	4807      	ldr	r0, [pc, #28]	; (8001a78 <sendSetNoti+0x80>)
 8001a5a:	f001 fff4 	bl	8003a46 <HAL_UART_Transmit>
		break;
 8001a5e:	e000      	b.n	8001a62 <sendSetNoti+0x6a>
			break;
 8001a60:	bf00      	nop
	}
}
 8001a62:	bf00      	nop
 8001a64:	bd80      	pop	{r7, pc}
 8001a66:	bf00      	nop
 8001a68:	200000c0 	.word	0x200000c0
 8001a6c:	08004cd4 	.word	0x08004cd4
 8001a70:	08004cb4 	.word	0x08004cb4
 8001a74:	200001c8 	.word	0x200001c8
 8001a78:	20000184 	.word	0x20000184
 8001a7c:	08004cdc 	.word	0x08004cdc
 8001a80:	08004ce8 	.word	0x08004ce8

08001a84 <Reset_Handler>:
 8001a84:	480c      	ldr	r0, [pc, #48]	; (8001ab8 <LoopFillZerobss+0x12>)
 8001a86:	490d      	ldr	r1, [pc, #52]	; (8001abc <LoopFillZerobss+0x16>)
 8001a88:	4a0d      	ldr	r2, [pc, #52]	; (8001ac0 <LoopFillZerobss+0x1a>)
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	e002      	b.n	8001a94 <LoopCopyDataInit>

08001a8e <CopyDataInit>:
 8001a8e:	58d4      	ldr	r4, [r2, r3]
 8001a90:	50c4      	str	r4, [r0, r3]
 8001a92:	3304      	adds	r3, #4

08001a94 <LoopCopyDataInit>:
 8001a94:	18c4      	adds	r4, r0, r3
 8001a96:	428c      	cmp	r4, r1
 8001a98:	d3f9      	bcc.n	8001a8e <CopyDataInit>
 8001a9a:	4a0a      	ldr	r2, [pc, #40]	; (8001ac4 <LoopFillZerobss+0x1e>)
 8001a9c:	4c0a      	ldr	r4, [pc, #40]	; (8001ac8 <LoopFillZerobss+0x22>)
 8001a9e:	2300      	movs	r3, #0
 8001aa0:	e001      	b.n	8001aa6 <LoopFillZerobss>

08001aa2 <FillZerobss>:
 8001aa2:	6013      	str	r3, [r2, #0]
 8001aa4:	3204      	adds	r2, #4

08001aa6 <LoopFillZerobss>:
 8001aa6:	42a2      	cmp	r2, r4
 8001aa8:	d3fb      	bcc.n	8001aa2 <FillZerobss>
 8001aaa:	f7ff fd61 	bl	8001570 <SystemInit>
 8001aae:	f002 fc5b 	bl	8004368 <__libc_init_array>
 8001ab2:	f7ff fa51 	bl	8000f58 <main>
 8001ab6:	4770      	bx	lr
 8001ab8:	20000000 	.word	0x20000000
 8001abc:	20000094 	.word	0x20000094
 8001ac0:	08004d58 	.word	0x08004d58
 8001ac4:	20000094 	.word	0x20000094
 8001ac8:	20000210 	.word	0x20000210

08001acc <ADC1_2_IRQHandler>:
 8001acc:	e7fe      	b.n	8001acc <ADC1_2_IRQHandler>
	...

08001ad0 <HAL_Init>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	4b08      	ldr	r3, [pc, #32]	; (8001af8 <HAL_Init+0x28>)
 8001ad6:	681b      	ldr	r3, [r3, #0]
 8001ad8:	4a07      	ldr	r2, [pc, #28]	; (8001af8 <HAL_Init+0x28>)
 8001ada:	f043 0310 	orr.w	r3, r3, #16
 8001ade:	6013      	str	r3, [r2, #0]
 8001ae0:	2003      	movs	r0, #3
 8001ae2:	f000 f923 	bl	8001d2c <HAL_NVIC_SetPriorityGrouping>
 8001ae6:	2000      	movs	r0, #0
 8001ae8:	f000 f808 	bl	8001afc <HAL_InitTick>
 8001aec:	f7ff fbf6 	bl	80012dc <HAL_MspInit>
 8001af0:	2300      	movs	r3, #0
 8001af2:	4618      	mov	r0, r3
 8001af4:	bd80      	pop	{r7, pc}
 8001af6:	bf00      	nop
 8001af8:	40022000 	.word	0x40022000

08001afc <HAL_InitTick>:
 8001afc:	b580      	push	{r7, lr}
 8001afe:	b082      	sub	sp, #8
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	4b12      	ldr	r3, [pc, #72]	; (8001b50 <HAL_InitTick+0x54>)
 8001b06:	681a      	ldr	r2, [r3, #0]
 8001b08:	4b12      	ldr	r3, [pc, #72]	; (8001b54 <HAL_InitTick+0x58>)
 8001b0a:	781b      	ldrb	r3, [r3, #0]
 8001b0c:	4619      	mov	r1, r3
 8001b0e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b12:	fbb3 f3f1 	udiv	r3, r3, r1
 8001b16:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b1a:	4618      	mov	r0, r3
 8001b1c:	f000 f93b 	bl	8001d96 <HAL_SYSTICK_Config>
 8001b20:	4603      	mov	r3, r0
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d001      	beq.n	8001b2a <HAL_InitTick+0x2e>
 8001b26:	2301      	movs	r3, #1
 8001b28:	e00e      	b.n	8001b48 <HAL_InitTick+0x4c>
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	2b0f      	cmp	r3, #15
 8001b2e:	d80a      	bhi.n	8001b46 <HAL_InitTick+0x4a>
 8001b30:	2200      	movs	r2, #0
 8001b32:	6879      	ldr	r1, [r7, #4]
 8001b34:	f04f 30ff 	mov.w	r0, #4294967295
 8001b38:	f000 f903 	bl	8001d42 <HAL_NVIC_SetPriority>
 8001b3c:	4a06      	ldr	r2, [pc, #24]	; (8001b58 <HAL_InitTick+0x5c>)
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	6013      	str	r3, [r2, #0]
 8001b42:	2300      	movs	r3, #0
 8001b44:	e000      	b.n	8001b48 <HAL_InitTick+0x4c>
 8001b46:	2301      	movs	r3, #1
 8001b48:	4618      	mov	r0, r3
 8001b4a:	3708      	adds	r7, #8
 8001b4c:	46bd      	mov	sp, r7
 8001b4e:	bd80      	pop	{r7, pc}
 8001b50:	20000024 	.word	0x20000024
 8001b54:	2000002c 	.word	0x2000002c
 8001b58:	20000028 	.word	0x20000028

08001b5c <HAL_IncTick>:
 8001b5c:	b480      	push	{r7}
 8001b5e:	af00      	add	r7, sp, #0
 8001b60:	4b05      	ldr	r3, [pc, #20]	; (8001b78 <HAL_IncTick+0x1c>)
 8001b62:	781b      	ldrb	r3, [r3, #0]
 8001b64:	461a      	mov	r2, r3
 8001b66:	4b05      	ldr	r3, [pc, #20]	; (8001b7c <HAL_IncTick+0x20>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4413      	add	r3, r2
 8001b6c:	4a03      	ldr	r2, [pc, #12]	; (8001b7c <HAL_IncTick+0x20>)
 8001b6e:	6013      	str	r3, [r2, #0]
 8001b70:	bf00      	nop
 8001b72:	46bd      	mov	sp, r7
 8001b74:	bc80      	pop	{r7}
 8001b76:	4770      	bx	lr
 8001b78:	2000002c 	.word	0x2000002c
 8001b7c:	200001fc 	.word	0x200001fc

08001b80 <HAL_GetTick>:
 8001b80:	b480      	push	{r7}
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	4b02      	ldr	r3, [pc, #8]	; (8001b90 <HAL_GetTick+0x10>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	4618      	mov	r0, r3
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	bc80      	pop	{r7}
 8001b8e:	4770      	bx	lr
 8001b90:	200001fc 	.word	0x200001fc

08001b94 <__NVIC_SetPriorityGrouping>:
 8001b94:	b480      	push	{r7}
 8001b96:	b085      	sub	sp, #20
 8001b98:	af00      	add	r7, sp, #0
 8001b9a:	6078      	str	r0, [r7, #4]
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	f003 0307 	and.w	r3, r3, #7
 8001ba2:	60fb      	str	r3, [r7, #12]
 8001ba4:	4b0c      	ldr	r3, [pc, #48]	; (8001bd8 <__NVIC_SetPriorityGrouping+0x44>)
 8001ba6:	68db      	ldr	r3, [r3, #12]
 8001ba8:	60bb      	str	r3, [r7, #8]
 8001baa:	68ba      	ldr	r2, [r7, #8]
 8001bac:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001bb0:	4013      	ands	r3, r2
 8001bb2:	60bb      	str	r3, [r7, #8]
 8001bb4:	68fb      	ldr	r3, [r7, #12]
 8001bb6:	021a      	lsls	r2, r3, #8
 8001bb8:	68bb      	ldr	r3, [r7, #8]
 8001bba:	4313      	orrs	r3, r2
 8001bbc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001bc0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001bc4:	60bb      	str	r3, [r7, #8]
 8001bc6:	4a04      	ldr	r2, [pc, #16]	; (8001bd8 <__NVIC_SetPriorityGrouping+0x44>)
 8001bc8:	68bb      	ldr	r3, [r7, #8]
 8001bca:	60d3      	str	r3, [r2, #12]
 8001bcc:	bf00      	nop
 8001bce:	3714      	adds	r7, #20
 8001bd0:	46bd      	mov	sp, r7
 8001bd2:	bc80      	pop	{r7}
 8001bd4:	4770      	bx	lr
 8001bd6:	bf00      	nop
 8001bd8:	e000ed00 	.word	0xe000ed00

08001bdc <__NVIC_GetPriorityGrouping>:
 8001bdc:	b480      	push	{r7}
 8001bde:	af00      	add	r7, sp, #0
 8001be0:	4b04      	ldr	r3, [pc, #16]	; (8001bf4 <__NVIC_GetPriorityGrouping+0x18>)
 8001be2:	68db      	ldr	r3, [r3, #12]
 8001be4:	0a1b      	lsrs	r3, r3, #8
 8001be6:	f003 0307 	and.w	r3, r3, #7
 8001bea:	4618      	mov	r0, r3
 8001bec:	46bd      	mov	sp, r7
 8001bee:	bc80      	pop	{r7}
 8001bf0:	4770      	bx	lr
 8001bf2:	bf00      	nop
 8001bf4:	e000ed00 	.word	0xe000ed00

08001bf8 <__NVIC_EnableIRQ>:
 8001bf8:	b480      	push	{r7}
 8001bfa:	b083      	sub	sp, #12
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	4603      	mov	r3, r0
 8001c00:	71fb      	strb	r3, [r7, #7]
 8001c02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	db0b      	blt.n	8001c22 <__NVIC_EnableIRQ+0x2a>
 8001c0a:	79fb      	ldrb	r3, [r7, #7]
 8001c0c:	f003 021f 	and.w	r2, r3, #31
 8001c10:	4906      	ldr	r1, [pc, #24]	; (8001c2c <__NVIC_EnableIRQ+0x34>)
 8001c12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c16:	095b      	lsrs	r3, r3, #5
 8001c18:	2001      	movs	r0, #1
 8001c1a:	fa00 f202 	lsl.w	r2, r0, r2
 8001c1e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c22:	bf00      	nop
 8001c24:	370c      	adds	r7, #12
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bc80      	pop	{r7}
 8001c2a:	4770      	bx	lr
 8001c2c:	e000e100 	.word	0xe000e100

08001c30 <__NVIC_SetPriority>:
 8001c30:	b480      	push	{r7}
 8001c32:	b083      	sub	sp, #12
 8001c34:	af00      	add	r7, sp, #0
 8001c36:	4603      	mov	r3, r0
 8001c38:	6039      	str	r1, [r7, #0]
 8001c3a:	71fb      	strb	r3, [r7, #7]
 8001c3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c40:	2b00      	cmp	r3, #0
 8001c42:	db0a      	blt.n	8001c5a <__NVIC_SetPriority+0x2a>
 8001c44:	683b      	ldr	r3, [r7, #0]
 8001c46:	b2da      	uxtb	r2, r3
 8001c48:	490c      	ldr	r1, [pc, #48]	; (8001c7c <__NVIC_SetPriority+0x4c>)
 8001c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c4e:	0112      	lsls	r2, r2, #4
 8001c50:	b2d2      	uxtb	r2, r2
 8001c52:	440b      	add	r3, r1
 8001c54:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001c58:	e00a      	b.n	8001c70 <__NVIC_SetPriority+0x40>
 8001c5a:	683b      	ldr	r3, [r7, #0]
 8001c5c:	b2da      	uxtb	r2, r3
 8001c5e:	4908      	ldr	r1, [pc, #32]	; (8001c80 <__NVIC_SetPriority+0x50>)
 8001c60:	79fb      	ldrb	r3, [r7, #7]
 8001c62:	f003 030f 	and.w	r3, r3, #15
 8001c66:	3b04      	subs	r3, #4
 8001c68:	0112      	lsls	r2, r2, #4
 8001c6a:	b2d2      	uxtb	r2, r2
 8001c6c:	440b      	add	r3, r1
 8001c6e:	761a      	strb	r2, [r3, #24]
 8001c70:	bf00      	nop
 8001c72:	370c      	adds	r7, #12
 8001c74:	46bd      	mov	sp, r7
 8001c76:	bc80      	pop	{r7}
 8001c78:	4770      	bx	lr
 8001c7a:	bf00      	nop
 8001c7c:	e000e100 	.word	0xe000e100
 8001c80:	e000ed00 	.word	0xe000ed00

08001c84 <NVIC_EncodePriority>:
 8001c84:	b480      	push	{r7}
 8001c86:	b089      	sub	sp, #36	; 0x24
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	60f8      	str	r0, [r7, #12]
 8001c8c:	60b9      	str	r1, [r7, #8]
 8001c8e:	607a      	str	r2, [r7, #4]
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	f003 0307 	and.w	r3, r3, #7
 8001c96:	61fb      	str	r3, [r7, #28]
 8001c98:	69fb      	ldr	r3, [r7, #28]
 8001c9a:	f1c3 0307 	rsb	r3, r3, #7
 8001c9e:	2b04      	cmp	r3, #4
 8001ca0:	bf28      	it	cs
 8001ca2:	2304      	movcs	r3, #4
 8001ca4:	61bb      	str	r3, [r7, #24]
 8001ca6:	69fb      	ldr	r3, [r7, #28]
 8001ca8:	3304      	adds	r3, #4
 8001caa:	2b06      	cmp	r3, #6
 8001cac:	d902      	bls.n	8001cb4 <NVIC_EncodePriority+0x30>
 8001cae:	69fb      	ldr	r3, [r7, #28]
 8001cb0:	3b03      	subs	r3, #3
 8001cb2:	e000      	b.n	8001cb6 <NVIC_EncodePriority+0x32>
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	617b      	str	r3, [r7, #20]
 8001cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8001cbc:	69bb      	ldr	r3, [r7, #24]
 8001cbe:	fa02 f303 	lsl.w	r3, r2, r3
 8001cc2:	43da      	mvns	r2, r3
 8001cc4:	68bb      	ldr	r3, [r7, #8]
 8001cc6:	401a      	ands	r2, r3
 8001cc8:	697b      	ldr	r3, [r7, #20]
 8001cca:	409a      	lsls	r2, r3
 8001ccc:	f04f 31ff 	mov.w	r1, #4294967295
 8001cd0:	697b      	ldr	r3, [r7, #20]
 8001cd2:	fa01 f303 	lsl.w	r3, r1, r3
 8001cd6:	43d9      	mvns	r1, r3
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	400b      	ands	r3, r1
 8001cdc:	4313      	orrs	r3, r2
 8001cde:	4618      	mov	r0, r3
 8001ce0:	3724      	adds	r7, #36	; 0x24
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	bc80      	pop	{r7}
 8001ce6:	4770      	bx	lr

08001ce8 <SysTick_Config>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b082      	sub	sp, #8
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	6078      	str	r0, [r7, #4]
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	3b01      	subs	r3, #1
 8001cf4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001cf8:	d301      	bcc.n	8001cfe <SysTick_Config+0x16>
 8001cfa:	2301      	movs	r3, #1
 8001cfc:	e00f      	b.n	8001d1e <SysTick_Config+0x36>
 8001cfe:	4a0a      	ldr	r2, [pc, #40]	; (8001d28 <SysTick_Config+0x40>)
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	3b01      	subs	r3, #1
 8001d04:	6053      	str	r3, [r2, #4]
 8001d06:	210f      	movs	r1, #15
 8001d08:	f04f 30ff 	mov.w	r0, #4294967295
 8001d0c:	f7ff ff90 	bl	8001c30 <__NVIC_SetPriority>
 8001d10:	4b05      	ldr	r3, [pc, #20]	; (8001d28 <SysTick_Config+0x40>)
 8001d12:	2200      	movs	r2, #0
 8001d14:	609a      	str	r2, [r3, #8]
 8001d16:	4b04      	ldr	r3, [pc, #16]	; (8001d28 <SysTick_Config+0x40>)
 8001d18:	2207      	movs	r2, #7
 8001d1a:	601a      	str	r2, [r3, #0]
 8001d1c:	2300      	movs	r3, #0
 8001d1e:	4618      	mov	r0, r3
 8001d20:	3708      	adds	r7, #8
 8001d22:	46bd      	mov	sp, r7
 8001d24:	bd80      	pop	{r7, pc}
 8001d26:	bf00      	nop
 8001d28:	e000e010 	.word	0xe000e010

08001d2c <HAL_NVIC_SetPriorityGrouping>:
 8001d2c:	b580      	push	{r7, lr}
 8001d2e:	b082      	sub	sp, #8
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	6078      	str	r0, [r7, #4]
 8001d34:	6878      	ldr	r0, [r7, #4]
 8001d36:	f7ff ff2d 	bl	8001b94 <__NVIC_SetPriorityGrouping>
 8001d3a:	bf00      	nop
 8001d3c:	3708      	adds	r7, #8
 8001d3e:	46bd      	mov	sp, r7
 8001d40:	bd80      	pop	{r7, pc}

08001d42 <HAL_NVIC_SetPriority>:
 8001d42:	b580      	push	{r7, lr}
 8001d44:	b086      	sub	sp, #24
 8001d46:	af00      	add	r7, sp, #0
 8001d48:	4603      	mov	r3, r0
 8001d4a:	60b9      	str	r1, [r7, #8]
 8001d4c:	607a      	str	r2, [r7, #4]
 8001d4e:	73fb      	strb	r3, [r7, #15]
 8001d50:	2300      	movs	r3, #0
 8001d52:	617b      	str	r3, [r7, #20]
 8001d54:	f7ff ff42 	bl	8001bdc <__NVIC_GetPriorityGrouping>
 8001d58:	6178      	str	r0, [r7, #20]
 8001d5a:	687a      	ldr	r2, [r7, #4]
 8001d5c:	68b9      	ldr	r1, [r7, #8]
 8001d5e:	6978      	ldr	r0, [r7, #20]
 8001d60:	f7ff ff90 	bl	8001c84 <NVIC_EncodePriority>
 8001d64:	4602      	mov	r2, r0
 8001d66:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d6a:	4611      	mov	r1, r2
 8001d6c:	4618      	mov	r0, r3
 8001d6e:	f7ff ff5f 	bl	8001c30 <__NVIC_SetPriority>
 8001d72:	bf00      	nop
 8001d74:	3718      	adds	r7, #24
 8001d76:	46bd      	mov	sp, r7
 8001d78:	bd80      	pop	{r7, pc}

08001d7a <HAL_NVIC_EnableIRQ>:
 8001d7a:	b580      	push	{r7, lr}
 8001d7c:	b082      	sub	sp, #8
 8001d7e:	af00      	add	r7, sp, #0
 8001d80:	4603      	mov	r3, r0
 8001d82:	71fb      	strb	r3, [r7, #7]
 8001d84:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d88:	4618      	mov	r0, r3
 8001d8a:	f7ff ff35 	bl	8001bf8 <__NVIC_EnableIRQ>
 8001d8e:	bf00      	nop
 8001d90:	3708      	adds	r7, #8
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bd80      	pop	{r7, pc}

08001d96 <HAL_SYSTICK_Config>:
 8001d96:	b580      	push	{r7, lr}
 8001d98:	b082      	sub	sp, #8
 8001d9a:	af00      	add	r7, sp, #0
 8001d9c:	6078      	str	r0, [r7, #4]
 8001d9e:	6878      	ldr	r0, [r7, #4]
 8001da0:	f7ff ffa2 	bl	8001ce8 <SysTick_Config>
 8001da4:	4603      	mov	r3, r0
 8001da6:	4618      	mov	r0, r3
 8001da8:	3708      	adds	r7, #8
 8001daa:	46bd      	mov	sp, r7
 8001dac:	bd80      	pop	{r7, pc}

08001dae <HAL_DMA_Abort>:
 8001dae:	b480      	push	{r7}
 8001db0:	b085      	sub	sp, #20
 8001db2:	af00      	add	r7, sp, #0
 8001db4:	6078      	str	r0, [r7, #4]
 8001db6:	2300      	movs	r3, #0
 8001db8:	73fb      	strb	r3, [r7, #15]
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001dc0:	2b02      	cmp	r3, #2
 8001dc2:	d008      	beq.n	8001dd6 <HAL_DMA_Abort+0x28>
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	2204      	movs	r2, #4
 8001dc8:	639a      	str	r2, [r3, #56]	; 0x38
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	2200      	movs	r2, #0
 8001dce:	f883 2020 	strb.w	r2, [r3, #32]
 8001dd2:	2301      	movs	r3, #1
 8001dd4:	e020      	b.n	8001e18 <HAL_DMA_Abort+0x6a>
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	681a      	ldr	r2, [r3, #0]
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	f022 020e 	bic.w	r2, r2, #14
 8001de4:	601a      	str	r2, [r3, #0]
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	681a      	ldr	r2, [r3, #0]
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	f022 0201 	bic.w	r2, r2, #1
 8001df4:	601a      	str	r2, [r3, #0]
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001dfe:	2101      	movs	r1, #1
 8001e00:	fa01 f202 	lsl.w	r2, r1, r2
 8001e04:	605a      	str	r2, [r3, #4]
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	2201      	movs	r2, #1
 8001e0a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	2200      	movs	r2, #0
 8001e12:	f883 2020 	strb.w	r2, [r3, #32]
 8001e16:	7bfb      	ldrb	r3, [r7, #15]
 8001e18:	4618      	mov	r0, r3
 8001e1a:	3714      	adds	r7, #20
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	bc80      	pop	{r7}
 8001e20:	4770      	bx	lr
	...

08001e24 <HAL_DMA_Abort_IT>:
 8001e24:	b580      	push	{r7, lr}
 8001e26:	b084      	sub	sp, #16
 8001e28:	af00      	add	r7, sp, #0
 8001e2a:	6078      	str	r0, [r7, #4]
 8001e2c:	2300      	movs	r3, #0
 8001e2e:	73fb      	strb	r3, [r7, #15]
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001e36:	2b02      	cmp	r3, #2
 8001e38:	d005      	beq.n	8001e46 <HAL_DMA_Abort_IT+0x22>
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	2204      	movs	r2, #4
 8001e3e:	639a      	str	r2, [r3, #56]	; 0x38
 8001e40:	2301      	movs	r3, #1
 8001e42:	73fb      	strb	r3, [r7, #15]
 8001e44:	e051      	b.n	8001eea <HAL_DMA_Abort_IT+0xc6>
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	681a      	ldr	r2, [r3, #0]
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	f022 020e 	bic.w	r2, r2, #14
 8001e54:	601a      	str	r2, [r3, #0]
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	681a      	ldr	r2, [r3, #0]
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	f022 0201 	bic.w	r2, r2, #1
 8001e64:	601a      	str	r2, [r3, #0]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	4a22      	ldr	r2, [pc, #136]	; (8001ef4 <HAL_DMA_Abort_IT+0xd0>)
 8001e6c:	4293      	cmp	r3, r2
 8001e6e:	d029      	beq.n	8001ec4 <HAL_DMA_Abort_IT+0xa0>
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	681b      	ldr	r3, [r3, #0]
 8001e74:	4a20      	ldr	r2, [pc, #128]	; (8001ef8 <HAL_DMA_Abort_IT+0xd4>)
 8001e76:	4293      	cmp	r3, r2
 8001e78:	d022      	beq.n	8001ec0 <HAL_DMA_Abort_IT+0x9c>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	4a1f      	ldr	r2, [pc, #124]	; (8001efc <HAL_DMA_Abort_IT+0xd8>)
 8001e80:	4293      	cmp	r3, r2
 8001e82:	d01a      	beq.n	8001eba <HAL_DMA_Abort_IT+0x96>
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	4a1d      	ldr	r2, [pc, #116]	; (8001f00 <HAL_DMA_Abort_IT+0xdc>)
 8001e8a:	4293      	cmp	r3, r2
 8001e8c:	d012      	beq.n	8001eb4 <HAL_DMA_Abort_IT+0x90>
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	4a1c      	ldr	r2, [pc, #112]	; (8001f04 <HAL_DMA_Abort_IT+0xe0>)
 8001e94:	4293      	cmp	r3, r2
 8001e96:	d00a      	beq.n	8001eae <HAL_DMA_Abort_IT+0x8a>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	4a1a      	ldr	r2, [pc, #104]	; (8001f08 <HAL_DMA_Abort_IT+0xe4>)
 8001e9e:	4293      	cmp	r3, r2
 8001ea0:	d102      	bne.n	8001ea8 <HAL_DMA_Abort_IT+0x84>
 8001ea2:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001ea6:	e00e      	b.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001ea8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001eac:	e00b      	b.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001eae:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001eb2:	e008      	b.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001eb4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001eb8:	e005      	b.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001eba:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001ebe:	e002      	b.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001ec0:	2310      	movs	r3, #16
 8001ec2:	e000      	b.n	8001ec6 <HAL_DMA_Abort_IT+0xa2>
 8001ec4:	2301      	movs	r3, #1
 8001ec6:	4a11      	ldr	r2, [pc, #68]	; (8001f0c <HAL_DMA_Abort_IT+0xe8>)
 8001ec8:	6053      	str	r3, [r2, #4]
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	2201      	movs	r2, #1
 8001ece:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	2200      	movs	r2, #0
 8001ed6:	f883 2020 	strb.w	r2, [r3, #32]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	d003      	beq.n	8001eea <HAL_DMA_Abort_IT+0xc6>
 8001ee2:	687b      	ldr	r3, [r7, #4]
 8001ee4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001ee6:	6878      	ldr	r0, [r7, #4]
 8001ee8:	4798      	blx	r3
 8001eea:	7bfb      	ldrb	r3, [r7, #15]
 8001eec:	4618      	mov	r0, r3
 8001eee:	3710      	adds	r7, #16
 8001ef0:	46bd      	mov	sp, r7
 8001ef2:	bd80      	pop	{r7, pc}
 8001ef4:	40020008 	.word	0x40020008
 8001ef8:	4002001c 	.word	0x4002001c
 8001efc:	40020030 	.word	0x40020030
 8001f00:	40020044 	.word	0x40020044
 8001f04:	40020058 	.word	0x40020058
 8001f08:	4002006c 	.word	0x4002006c
 8001f0c:	40020000 	.word	0x40020000

08001f10 <HAL_GPIO_Init>:
 8001f10:	b480      	push	{r7}
 8001f12:	b08b      	sub	sp, #44	; 0x2c
 8001f14:	af00      	add	r7, sp, #0
 8001f16:	6078      	str	r0, [r7, #4]
 8001f18:	6039      	str	r1, [r7, #0]
 8001f1a:	2300      	movs	r3, #0
 8001f1c:	627b      	str	r3, [r7, #36]	; 0x24
 8001f1e:	2300      	movs	r3, #0
 8001f20:	623b      	str	r3, [r7, #32]
 8001f22:	e169      	b.n	80021f8 <HAL_GPIO_Init+0x2e8>
 8001f24:	2201      	movs	r2, #1
 8001f26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f28:	fa02 f303 	lsl.w	r3, r2, r3
 8001f2c:	61fb      	str	r3, [r7, #28]
 8001f2e:	683b      	ldr	r3, [r7, #0]
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	69fa      	ldr	r2, [r7, #28]
 8001f34:	4013      	ands	r3, r2
 8001f36:	61bb      	str	r3, [r7, #24]
 8001f38:	69ba      	ldr	r2, [r7, #24]
 8001f3a:	69fb      	ldr	r3, [r7, #28]
 8001f3c:	429a      	cmp	r2, r3
 8001f3e:	f040 8158 	bne.w	80021f2 <HAL_GPIO_Init+0x2e2>
 8001f42:	683b      	ldr	r3, [r7, #0]
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	4a9a      	ldr	r2, [pc, #616]	; (80021b0 <HAL_GPIO_Init+0x2a0>)
 8001f48:	4293      	cmp	r3, r2
 8001f4a:	d05e      	beq.n	800200a <HAL_GPIO_Init+0xfa>
 8001f4c:	4a98      	ldr	r2, [pc, #608]	; (80021b0 <HAL_GPIO_Init+0x2a0>)
 8001f4e:	4293      	cmp	r3, r2
 8001f50:	d875      	bhi.n	800203e <HAL_GPIO_Init+0x12e>
 8001f52:	4a98      	ldr	r2, [pc, #608]	; (80021b4 <HAL_GPIO_Init+0x2a4>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d058      	beq.n	800200a <HAL_GPIO_Init+0xfa>
 8001f58:	4a96      	ldr	r2, [pc, #600]	; (80021b4 <HAL_GPIO_Init+0x2a4>)
 8001f5a:	4293      	cmp	r3, r2
 8001f5c:	d86f      	bhi.n	800203e <HAL_GPIO_Init+0x12e>
 8001f5e:	4a96      	ldr	r2, [pc, #600]	; (80021b8 <HAL_GPIO_Init+0x2a8>)
 8001f60:	4293      	cmp	r3, r2
 8001f62:	d052      	beq.n	800200a <HAL_GPIO_Init+0xfa>
 8001f64:	4a94      	ldr	r2, [pc, #592]	; (80021b8 <HAL_GPIO_Init+0x2a8>)
 8001f66:	4293      	cmp	r3, r2
 8001f68:	d869      	bhi.n	800203e <HAL_GPIO_Init+0x12e>
 8001f6a:	4a94      	ldr	r2, [pc, #592]	; (80021bc <HAL_GPIO_Init+0x2ac>)
 8001f6c:	4293      	cmp	r3, r2
 8001f6e:	d04c      	beq.n	800200a <HAL_GPIO_Init+0xfa>
 8001f70:	4a92      	ldr	r2, [pc, #584]	; (80021bc <HAL_GPIO_Init+0x2ac>)
 8001f72:	4293      	cmp	r3, r2
 8001f74:	d863      	bhi.n	800203e <HAL_GPIO_Init+0x12e>
 8001f76:	4a92      	ldr	r2, [pc, #584]	; (80021c0 <HAL_GPIO_Init+0x2b0>)
 8001f78:	4293      	cmp	r3, r2
 8001f7a:	d046      	beq.n	800200a <HAL_GPIO_Init+0xfa>
 8001f7c:	4a90      	ldr	r2, [pc, #576]	; (80021c0 <HAL_GPIO_Init+0x2b0>)
 8001f7e:	4293      	cmp	r3, r2
 8001f80:	d85d      	bhi.n	800203e <HAL_GPIO_Init+0x12e>
 8001f82:	2b12      	cmp	r3, #18
 8001f84:	d82a      	bhi.n	8001fdc <HAL_GPIO_Init+0xcc>
 8001f86:	2b12      	cmp	r3, #18
 8001f88:	d859      	bhi.n	800203e <HAL_GPIO_Init+0x12e>
 8001f8a:	a201      	add	r2, pc, #4	; (adr r2, 8001f90 <HAL_GPIO_Init+0x80>)
 8001f8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f90:	0800200b 	.word	0x0800200b
 8001f94:	08001fe5 	.word	0x08001fe5
 8001f98:	08001ff7 	.word	0x08001ff7
 8001f9c:	08002039 	.word	0x08002039
 8001fa0:	0800203f 	.word	0x0800203f
 8001fa4:	0800203f 	.word	0x0800203f
 8001fa8:	0800203f 	.word	0x0800203f
 8001fac:	0800203f 	.word	0x0800203f
 8001fb0:	0800203f 	.word	0x0800203f
 8001fb4:	0800203f 	.word	0x0800203f
 8001fb8:	0800203f 	.word	0x0800203f
 8001fbc:	0800203f 	.word	0x0800203f
 8001fc0:	0800203f 	.word	0x0800203f
 8001fc4:	0800203f 	.word	0x0800203f
 8001fc8:	0800203f 	.word	0x0800203f
 8001fcc:	0800203f 	.word	0x0800203f
 8001fd0:	0800203f 	.word	0x0800203f
 8001fd4:	08001fed 	.word	0x08001fed
 8001fd8:	08002001 	.word	0x08002001
 8001fdc:	4a79      	ldr	r2, [pc, #484]	; (80021c4 <HAL_GPIO_Init+0x2b4>)
 8001fde:	4293      	cmp	r3, r2
 8001fe0:	d013      	beq.n	800200a <HAL_GPIO_Init+0xfa>
 8001fe2:	e02c      	b.n	800203e <HAL_GPIO_Init+0x12e>
 8001fe4:	683b      	ldr	r3, [r7, #0]
 8001fe6:	68db      	ldr	r3, [r3, #12]
 8001fe8:	623b      	str	r3, [r7, #32]
 8001fea:	e029      	b.n	8002040 <HAL_GPIO_Init+0x130>
 8001fec:	683b      	ldr	r3, [r7, #0]
 8001fee:	68db      	ldr	r3, [r3, #12]
 8001ff0:	3304      	adds	r3, #4
 8001ff2:	623b      	str	r3, [r7, #32]
 8001ff4:	e024      	b.n	8002040 <HAL_GPIO_Init+0x130>
 8001ff6:	683b      	ldr	r3, [r7, #0]
 8001ff8:	68db      	ldr	r3, [r3, #12]
 8001ffa:	3308      	adds	r3, #8
 8001ffc:	623b      	str	r3, [r7, #32]
 8001ffe:	e01f      	b.n	8002040 <HAL_GPIO_Init+0x130>
 8002000:	683b      	ldr	r3, [r7, #0]
 8002002:	68db      	ldr	r3, [r3, #12]
 8002004:	330c      	adds	r3, #12
 8002006:	623b      	str	r3, [r7, #32]
 8002008:	e01a      	b.n	8002040 <HAL_GPIO_Init+0x130>
 800200a:	683b      	ldr	r3, [r7, #0]
 800200c:	689b      	ldr	r3, [r3, #8]
 800200e:	2b00      	cmp	r3, #0
 8002010:	d102      	bne.n	8002018 <HAL_GPIO_Init+0x108>
 8002012:	2304      	movs	r3, #4
 8002014:	623b      	str	r3, [r7, #32]
 8002016:	e013      	b.n	8002040 <HAL_GPIO_Init+0x130>
 8002018:	683b      	ldr	r3, [r7, #0]
 800201a:	689b      	ldr	r3, [r3, #8]
 800201c:	2b01      	cmp	r3, #1
 800201e:	d105      	bne.n	800202c <HAL_GPIO_Init+0x11c>
 8002020:	2308      	movs	r3, #8
 8002022:	623b      	str	r3, [r7, #32]
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	69fa      	ldr	r2, [r7, #28]
 8002028:	611a      	str	r2, [r3, #16]
 800202a:	e009      	b.n	8002040 <HAL_GPIO_Init+0x130>
 800202c:	2308      	movs	r3, #8
 800202e:	623b      	str	r3, [r7, #32]
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	69fa      	ldr	r2, [r7, #28]
 8002034:	615a      	str	r2, [r3, #20]
 8002036:	e003      	b.n	8002040 <HAL_GPIO_Init+0x130>
 8002038:	2300      	movs	r3, #0
 800203a:	623b      	str	r3, [r7, #32]
 800203c:	e000      	b.n	8002040 <HAL_GPIO_Init+0x130>
 800203e:	bf00      	nop
 8002040:	69bb      	ldr	r3, [r7, #24]
 8002042:	2bff      	cmp	r3, #255	; 0xff
 8002044:	d801      	bhi.n	800204a <HAL_GPIO_Init+0x13a>
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	e001      	b.n	800204e <HAL_GPIO_Init+0x13e>
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	3304      	adds	r3, #4
 800204e:	617b      	str	r3, [r7, #20]
 8002050:	69bb      	ldr	r3, [r7, #24]
 8002052:	2bff      	cmp	r3, #255	; 0xff
 8002054:	d802      	bhi.n	800205c <HAL_GPIO_Init+0x14c>
 8002056:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002058:	009b      	lsls	r3, r3, #2
 800205a:	e002      	b.n	8002062 <HAL_GPIO_Init+0x152>
 800205c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800205e:	3b08      	subs	r3, #8
 8002060:	009b      	lsls	r3, r3, #2
 8002062:	613b      	str	r3, [r7, #16]
 8002064:	697b      	ldr	r3, [r7, #20]
 8002066:	681a      	ldr	r2, [r3, #0]
 8002068:	210f      	movs	r1, #15
 800206a:	693b      	ldr	r3, [r7, #16]
 800206c:	fa01 f303 	lsl.w	r3, r1, r3
 8002070:	43db      	mvns	r3, r3
 8002072:	401a      	ands	r2, r3
 8002074:	6a39      	ldr	r1, [r7, #32]
 8002076:	693b      	ldr	r3, [r7, #16]
 8002078:	fa01 f303 	lsl.w	r3, r1, r3
 800207c:	431a      	orrs	r2, r3
 800207e:	697b      	ldr	r3, [r7, #20]
 8002080:	601a      	str	r2, [r3, #0]
 8002082:	683b      	ldr	r3, [r7, #0]
 8002084:	685b      	ldr	r3, [r3, #4]
 8002086:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800208a:	2b00      	cmp	r3, #0
 800208c:	f000 80b1 	beq.w	80021f2 <HAL_GPIO_Init+0x2e2>
 8002090:	4b4d      	ldr	r3, [pc, #308]	; (80021c8 <HAL_GPIO_Init+0x2b8>)
 8002092:	699b      	ldr	r3, [r3, #24]
 8002094:	4a4c      	ldr	r2, [pc, #304]	; (80021c8 <HAL_GPIO_Init+0x2b8>)
 8002096:	f043 0301 	orr.w	r3, r3, #1
 800209a:	6193      	str	r3, [r2, #24]
 800209c:	4b4a      	ldr	r3, [pc, #296]	; (80021c8 <HAL_GPIO_Init+0x2b8>)
 800209e:	699b      	ldr	r3, [r3, #24]
 80020a0:	f003 0301 	and.w	r3, r3, #1
 80020a4:	60bb      	str	r3, [r7, #8]
 80020a6:	68bb      	ldr	r3, [r7, #8]
 80020a8:	4a48      	ldr	r2, [pc, #288]	; (80021cc <HAL_GPIO_Init+0x2bc>)
 80020aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020ac:	089b      	lsrs	r3, r3, #2
 80020ae:	3302      	adds	r3, #2
 80020b0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80020b4:	60fb      	str	r3, [r7, #12]
 80020b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020b8:	f003 0303 	and.w	r3, r3, #3
 80020bc:	009b      	lsls	r3, r3, #2
 80020be:	220f      	movs	r2, #15
 80020c0:	fa02 f303 	lsl.w	r3, r2, r3
 80020c4:	43db      	mvns	r3, r3
 80020c6:	68fa      	ldr	r2, [r7, #12]
 80020c8:	4013      	ands	r3, r2
 80020ca:	60fb      	str	r3, [r7, #12]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	4a40      	ldr	r2, [pc, #256]	; (80021d0 <HAL_GPIO_Init+0x2c0>)
 80020d0:	4293      	cmp	r3, r2
 80020d2:	d013      	beq.n	80020fc <HAL_GPIO_Init+0x1ec>
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	4a3f      	ldr	r2, [pc, #252]	; (80021d4 <HAL_GPIO_Init+0x2c4>)
 80020d8:	4293      	cmp	r3, r2
 80020da:	d00d      	beq.n	80020f8 <HAL_GPIO_Init+0x1e8>
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	4a3e      	ldr	r2, [pc, #248]	; (80021d8 <HAL_GPIO_Init+0x2c8>)
 80020e0:	4293      	cmp	r3, r2
 80020e2:	d007      	beq.n	80020f4 <HAL_GPIO_Init+0x1e4>
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	4a3d      	ldr	r2, [pc, #244]	; (80021dc <HAL_GPIO_Init+0x2cc>)
 80020e8:	4293      	cmp	r3, r2
 80020ea:	d101      	bne.n	80020f0 <HAL_GPIO_Init+0x1e0>
 80020ec:	2303      	movs	r3, #3
 80020ee:	e006      	b.n	80020fe <HAL_GPIO_Init+0x1ee>
 80020f0:	2304      	movs	r3, #4
 80020f2:	e004      	b.n	80020fe <HAL_GPIO_Init+0x1ee>
 80020f4:	2302      	movs	r3, #2
 80020f6:	e002      	b.n	80020fe <HAL_GPIO_Init+0x1ee>
 80020f8:	2301      	movs	r3, #1
 80020fa:	e000      	b.n	80020fe <HAL_GPIO_Init+0x1ee>
 80020fc:	2300      	movs	r3, #0
 80020fe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002100:	f002 0203 	and.w	r2, r2, #3
 8002104:	0092      	lsls	r2, r2, #2
 8002106:	4093      	lsls	r3, r2
 8002108:	68fa      	ldr	r2, [r7, #12]
 800210a:	4313      	orrs	r3, r2
 800210c:	60fb      	str	r3, [r7, #12]
 800210e:	492f      	ldr	r1, [pc, #188]	; (80021cc <HAL_GPIO_Init+0x2bc>)
 8002110:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002112:	089b      	lsrs	r3, r3, #2
 8002114:	3302      	adds	r3, #2
 8002116:	68fa      	ldr	r2, [r7, #12]
 8002118:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800211c:	683b      	ldr	r3, [r7, #0]
 800211e:	685b      	ldr	r3, [r3, #4]
 8002120:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002124:	2b00      	cmp	r3, #0
 8002126:	d006      	beq.n	8002136 <HAL_GPIO_Init+0x226>
 8002128:	4b2d      	ldr	r3, [pc, #180]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 800212a:	681a      	ldr	r2, [r3, #0]
 800212c:	492c      	ldr	r1, [pc, #176]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 800212e:	69bb      	ldr	r3, [r7, #24]
 8002130:	4313      	orrs	r3, r2
 8002132:	600b      	str	r3, [r1, #0]
 8002134:	e006      	b.n	8002144 <HAL_GPIO_Init+0x234>
 8002136:	4b2a      	ldr	r3, [pc, #168]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002138:	681a      	ldr	r2, [r3, #0]
 800213a:	69bb      	ldr	r3, [r7, #24]
 800213c:	43db      	mvns	r3, r3
 800213e:	4928      	ldr	r1, [pc, #160]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002140:	4013      	ands	r3, r2
 8002142:	600b      	str	r3, [r1, #0]
 8002144:	683b      	ldr	r3, [r7, #0]
 8002146:	685b      	ldr	r3, [r3, #4]
 8002148:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800214c:	2b00      	cmp	r3, #0
 800214e:	d006      	beq.n	800215e <HAL_GPIO_Init+0x24e>
 8002150:	4b23      	ldr	r3, [pc, #140]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002152:	685a      	ldr	r2, [r3, #4]
 8002154:	4922      	ldr	r1, [pc, #136]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002156:	69bb      	ldr	r3, [r7, #24]
 8002158:	4313      	orrs	r3, r2
 800215a:	604b      	str	r3, [r1, #4]
 800215c:	e006      	b.n	800216c <HAL_GPIO_Init+0x25c>
 800215e:	4b20      	ldr	r3, [pc, #128]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002160:	685a      	ldr	r2, [r3, #4]
 8002162:	69bb      	ldr	r3, [r7, #24]
 8002164:	43db      	mvns	r3, r3
 8002166:	491e      	ldr	r1, [pc, #120]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002168:	4013      	ands	r3, r2
 800216a:	604b      	str	r3, [r1, #4]
 800216c:	683b      	ldr	r3, [r7, #0]
 800216e:	685b      	ldr	r3, [r3, #4]
 8002170:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002174:	2b00      	cmp	r3, #0
 8002176:	d006      	beq.n	8002186 <HAL_GPIO_Init+0x276>
 8002178:	4b19      	ldr	r3, [pc, #100]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 800217a:	689a      	ldr	r2, [r3, #8]
 800217c:	4918      	ldr	r1, [pc, #96]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 800217e:	69bb      	ldr	r3, [r7, #24]
 8002180:	4313      	orrs	r3, r2
 8002182:	608b      	str	r3, [r1, #8]
 8002184:	e006      	b.n	8002194 <HAL_GPIO_Init+0x284>
 8002186:	4b16      	ldr	r3, [pc, #88]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002188:	689a      	ldr	r2, [r3, #8]
 800218a:	69bb      	ldr	r3, [r7, #24]
 800218c:	43db      	mvns	r3, r3
 800218e:	4914      	ldr	r1, [pc, #80]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 8002190:	4013      	ands	r3, r2
 8002192:	608b      	str	r3, [r1, #8]
 8002194:	683b      	ldr	r3, [r7, #0]
 8002196:	685b      	ldr	r3, [r3, #4]
 8002198:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800219c:	2b00      	cmp	r3, #0
 800219e:	d021      	beq.n	80021e4 <HAL_GPIO_Init+0x2d4>
 80021a0:	4b0f      	ldr	r3, [pc, #60]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 80021a2:	68da      	ldr	r2, [r3, #12]
 80021a4:	490e      	ldr	r1, [pc, #56]	; (80021e0 <HAL_GPIO_Init+0x2d0>)
 80021a6:	69bb      	ldr	r3, [r7, #24]
 80021a8:	4313      	orrs	r3, r2
 80021aa:	60cb      	str	r3, [r1, #12]
 80021ac:	e021      	b.n	80021f2 <HAL_GPIO_Init+0x2e2>
 80021ae:	bf00      	nop
 80021b0:	10320000 	.word	0x10320000
 80021b4:	10310000 	.word	0x10310000
 80021b8:	10220000 	.word	0x10220000
 80021bc:	10210000 	.word	0x10210000
 80021c0:	10120000 	.word	0x10120000
 80021c4:	10110000 	.word	0x10110000
 80021c8:	40021000 	.word	0x40021000
 80021cc:	40010000 	.word	0x40010000
 80021d0:	40010800 	.word	0x40010800
 80021d4:	40010c00 	.word	0x40010c00
 80021d8:	40011000 	.word	0x40011000
 80021dc:	40011400 	.word	0x40011400
 80021e0:	40010400 	.word	0x40010400
 80021e4:	4b0b      	ldr	r3, [pc, #44]	; (8002214 <HAL_GPIO_Init+0x304>)
 80021e6:	68da      	ldr	r2, [r3, #12]
 80021e8:	69bb      	ldr	r3, [r7, #24]
 80021ea:	43db      	mvns	r3, r3
 80021ec:	4909      	ldr	r1, [pc, #36]	; (8002214 <HAL_GPIO_Init+0x304>)
 80021ee:	4013      	ands	r3, r2
 80021f0:	60cb      	str	r3, [r1, #12]
 80021f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021f4:	3301      	adds	r3, #1
 80021f6:	627b      	str	r3, [r7, #36]	; 0x24
 80021f8:	683b      	ldr	r3, [r7, #0]
 80021fa:	681a      	ldr	r2, [r3, #0]
 80021fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021fe:	fa22 f303 	lsr.w	r3, r2, r3
 8002202:	2b00      	cmp	r3, #0
 8002204:	f47f ae8e 	bne.w	8001f24 <HAL_GPIO_Init+0x14>
 8002208:	bf00      	nop
 800220a:	bf00      	nop
 800220c:	372c      	adds	r7, #44	; 0x2c
 800220e:	46bd      	mov	sp, r7
 8002210:	bc80      	pop	{r7}
 8002212:	4770      	bx	lr
 8002214:	40010400 	.word	0x40010400

08002218 <HAL_GPIO_ReadPin>:
 8002218:	b480      	push	{r7}
 800221a:	b085      	sub	sp, #20
 800221c:	af00      	add	r7, sp, #0
 800221e:	6078      	str	r0, [r7, #4]
 8002220:	460b      	mov	r3, r1
 8002222:	807b      	strh	r3, [r7, #2]
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	689a      	ldr	r2, [r3, #8]
 8002228:	887b      	ldrh	r3, [r7, #2]
 800222a:	4013      	ands	r3, r2
 800222c:	2b00      	cmp	r3, #0
 800222e:	d002      	beq.n	8002236 <HAL_GPIO_ReadPin+0x1e>
 8002230:	2301      	movs	r3, #1
 8002232:	73fb      	strb	r3, [r7, #15]
 8002234:	e001      	b.n	800223a <HAL_GPIO_ReadPin+0x22>
 8002236:	2300      	movs	r3, #0
 8002238:	73fb      	strb	r3, [r7, #15]
 800223a:	7bfb      	ldrb	r3, [r7, #15]
 800223c:	4618      	mov	r0, r3
 800223e:	3714      	adds	r7, #20
 8002240:	46bd      	mov	sp, r7
 8002242:	bc80      	pop	{r7}
 8002244:	4770      	bx	lr

08002246 <HAL_GPIO_WritePin>:
 8002246:	b480      	push	{r7}
 8002248:	b083      	sub	sp, #12
 800224a:	af00      	add	r7, sp, #0
 800224c:	6078      	str	r0, [r7, #4]
 800224e:	460b      	mov	r3, r1
 8002250:	807b      	strh	r3, [r7, #2]
 8002252:	4613      	mov	r3, r2
 8002254:	707b      	strb	r3, [r7, #1]
 8002256:	787b      	ldrb	r3, [r7, #1]
 8002258:	2b00      	cmp	r3, #0
 800225a:	d003      	beq.n	8002264 <HAL_GPIO_WritePin+0x1e>
 800225c:	887a      	ldrh	r2, [r7, #2]
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	611a      	str	r2, [r3, #16]
 8002262:	e003      	b.n	800226c <HAL_GPIO_WritePin+0x26>
 8002264:	887b      	ldrh	r3, [r7, #2]
 8002266:	041a      	lsls	r2, r3, #16
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	611a      	str	r2, [r3, #16]
 800226c:	bf00      	nop
 800226e:	370c      	adds	r7, #12
 8002270:	46bd      	mov	sp, r7
 8002272:	bc80      	pop	{r7}
 8002274:	4770      	bx	lr
	...

08002278 <HAL_GPIO_EXTI_IRQHandler>:
 8002278:	b580      	push	{r7, lr}
 800227a:	b082      	sub	sp, #8
 800227c:	af00      	add	r7, sp, #0
 800227e:	4603      	mov	r3, r0
 8002280:	80fb      	strh	r3, [r7, #6]
 8002282:	4b08      	ldr	r3, [pc, #32]	; (80022a4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002284:	695a      	ldr	r2, [r3, #20]
 8002286:	88fb      	ldrh	r3, [r7, #6]
 8002288:	4013      	ands	r3, r2
 800228a:	2b00      	cmp	r3, #0
 800228c:	d006      	beq.n	800229c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800228e:	4a05      	ldr	r2, [pc, #20]	; (80022a4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002290:	88fb      	ldrh	r3, [r7, #6]
 8002292:	6153      	str	r3, [r2, #20]
 8002294:	88fb      	ldrh	r3, [r7, #6]
 8002296:	4618      	mov	r0, r3
 8002298:	f000 f806 	bl	80022a8 <HAL_GPIO_EXTI_Callback>
 800229c:	bf00      	nop
 800229e:	3708      	adds	r7, #8
 80022a0:	46bd      	mov	sp, r7
 80022a2:	bd80      	pop	{r7, pc}
 80022a4:	40010400 	.word	0x40010400

080022a8 <HAL_GPIO_EXTI_Callback>:
 80022a8:	b480      	push	{r7}
 80022aa:	b083      	sub	sp, #12
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	4603      	mov	r3, r0
 80022b0:	80fb      	strh	r3, [r7, #6]
 80022b2:	bf00      	nop
 80022b4:	370c      	adds	r7, #12
 80022b6:	46bd      	mov	sp, r7
 80022b8:	bc80      	pop	{r7}
 80022ba:	4770      	bx	lr

080022bc <HAL_RCC_OscConfig>:
 80022bc:	b580      	push	{r7, lr}
 80022be:	b086      	sub	sp, #24
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d101      	bne.n	80022ce <HAL_RCC_OscConfig+0x12>
 80022ca:	2301      	movs	r3, #1
 80022cc:	e26c      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	f003 0301 	and.w	r3, r3, #1
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	f000 8087 	beq.w	80023ea <HAL_RCC_OscConfig+0x12e>
 80022dc:	4b92      	ldr	r3, [pc, #584]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80022de:	685b      	ldr	r3, [r3, #4]
 80022e0:	f003 030c 	and.w	r3, r3, #12
 80022e4:	2b04      	cmp	r3, #4
 80022e6:	d00c      	beq.n	8002302 <HAL_RCC_OscConfig+0x46>
 80022e8:	4b8f      	ldr	r3, [pc, #572]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80022ea:	685b      	ldr	r3, [r3, #4]
 80022ec:	f003 030c 	and.w	r3, r3, #12
 80022f0:	2b08      	cmp	r3, #8
 80022f2:	d112      	bne.n	800231a <HAL_RCC_OscConfig+0x5e>
 80022f4:	4b8c      	ldr	r3, [pc, #560]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80022f6:	685b      	ldr	r3, [r3, #4]
 80022f8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80022fc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002300:	d10b      	bne.n	800231a <HAL_RCC_OscConfig+0x5e>
 8002302:	4b89      	ldr	r3, [pc, #548]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800230a:	2b00      	cmp	r3, #0
 800230c:	d06c      	beq.n	80023e8 <HAL_RCC_OscConfig+0x12c>
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	685b      	ldr	r3, [r3, #4]
 8002312:	2b00      	cmp	r3, #0
 8002314:	d168      	bne.n	80023e8 <HAL_RCC_OscConfig+0x12c>
 8002316:	2301      	movs	r3, #1
 8002318:	e246      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	685b      	ldr	r3, [r3, #4]
 800231e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002322:	d106      	bne.n	8002332 <HAL_RCC_OscConfig+0x76>
 8002324:	4b80      	ldr	r3, [pc, #512]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	4a7f      	ldr	r2, [pc, #508]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800232a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800232e:	6013      	str	r3, [r2, #0]
 8002330:	e02e      	b.n	8002390 <HAL_RCC_OscConfig+0xd4>
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	685b      	ldr	r3, [r3, #4]
 8002336:	2b00      	cmp	r3, #0
 8002338:	d10c      	bne.n	8002354 <HAL_RCC_OscConfig+0x98>
 800233a:	4b7b      	ldr	r3, [pc, #492]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	4a7a      	ldr	r2, [pc, #488]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002340:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002344:	6013      	str	r3, [r2, #0]
 8002346:	4b78      	ldr	r3, [pc, #480]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	4a77      	ldr	r2, [pc, #476]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800234c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002350:	6013      	str	r3, [r2, #0]
 8002352:	e01d      	b.n	8002390 <HAL_RCC_OscConfig+0xd4>
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	685b      	ldr	r3, [r3, #4]
 8002358:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800235c:	d10c      	bne.n	8002378 <HAL_RCC_OscConfig+0xbc>
 800235e:	4b72      	ldr	r3, [pc, #456]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	4a71      	ldr	r2, [pc, #452]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002364:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002368:	6013      	str	r3, [r2, #0]
 800236a:	4b6f      	ldr	r3, [pc, #444]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	4a6e      	ldr	r2, [pc, #440]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002370:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002374:	6013      	str	r3, [r2, #0]
 8002376:	e00b      	b.n	8002390 <HAL_RCC_OscConfig+0xd4>
 8002378:	4b6b      	ldr	r3, [pc, #428]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	4a6a      	ldr	r2, [pc, #424]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800237e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002382:	6013      	str	r3, [r2, #0]
 8002384:	4b68      	ldr	r3, [pc, #416]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	4a67      	ldr	r2, [pc, #412]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800238a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800238e:	6013      	str	r3, [r2, #0]
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	685b      	ldr	r3, [r3, #4]
 8002394:	2b00      	cmp	r3, #0
 8002396:	d013      	beq.n	80023c0 <HAL_RCC_OscConfig+0x104>
 8002398:	f7ff fbf2 	bl	8001b80 <HAL_GetTick>
 800239c:	6138      	str	r0, [r7, #16]
 800239e:	e008      	b.n	80023b2 <HAL_RCC_OscConfig+0xf6>
 80023a0:	f7ff fbee 	bl	8001b80 <HAL_GetTick>
 80023a4:	4602      	mov	r2, r0
 80023a6:	693b      	ldr	r3, [r7, #16]
 80023a8:	1ad3      	subs	r3, r2, r3
 80023aa:	2b64      	cmp	r3, #100	; 0x64
 80023ac:	d901      	bls.n	80023b2 <HAL_RCC_OscConfig+0xf6>
 80023ae:	2303      	movs	r3, #3
 80023b0:	e1fa      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80023b2:	4b5d      	ldr	r3, [pc, #372]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d0f0      	beq.n	80023a0 <HAL_RCC_OscConfig+0xe4>
 80023be:	e014      	b.n	80023ea <HAL_RCC_OscConfig+0x12e>
 80023c0:	f7ff fbde 	bl	8001b80 <HAL_GetTick>
 80023c4:	6138      	str	r0, [r7, #16]
 80023c6:	e008      	b.n	80023da <HAL_RCC_OscConfig+0x11e>
 80023c8:	f7ff fbda 	bl	8001b80 <HAL_GetTick>
 80023cc:	4602      	mov	r2, r0
 80023ce:	693b      	ldr	r3, [r7, #16]
 80023d0:	1ad3      	subs	r3, r2, r3
 80023d2:	2b64      	cmp	r3, #100	; 0x64
 80023d4:	d901      	bls.n	80023da <HAL_RCC_OscConfig+0x11e>
 80023d6:	2303      	movs	r3, #3
 80023d8:	e1e6      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80023da:	4b53      	ldr	r3, [pc, #332]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023e2:	2b00      	cmp	r3, #0
 80023e4:	d1f0      	bne.n	80023c8 <HAL_RCC_OscConfig+0x10c>
 80023e6:	e000      	b.n	80023ea <HAL_RCC_OscConfig+0x12e>
 80023e8:	bf00      	nop
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f003 0302 	and.w	r3, r3, #2
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d063      	beq.n	80024be <HAL_RCC_OscConfig+0x202>
 80023f6:	4b4c      	ldr	r3, [pc, #304]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80023f8:	685b      	ldr	r3, [r3, #4]
 80023fa:	f003 030c 	and.w	r3, r3, #12
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d00b      	beq.n	800241a <HAL_RCC_OscConfig+0x15e>
 8002402:	4b49      	ldr	r3, [pc, #292]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002404:	685b      	ldr	r3, [r3, #4]
 8002406:	f003 030c 	and.w	r3, r3, #12
 800240a:	2b08      	cmp	r3, #8
 800240c:	d11c      	bne.n	8002448 <HAL_RCC_OscConfig+0x18c>
 800240e:	4b46      	ldr	r3, [pc, #280]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002410:	685b      	ldr	r3, [r3, #4]
 8002412:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002416:	2b00      	cmp	r3, #0
 8002418:	d116      	bne.n	8002448 <HAL_RCC_OscConfig+0x18c>
 800241a:	4b43      	ldr	r3, [pc, #268]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	f003 0302 	and.w	r3, r3, #2
 8002422:	2b00      	cmp	r3, #0
 8002424:	d005      	beq.n	8002432 <HAL_RCC_OscConfig+0x176>
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	691b      	ldr	r3, [r3, #16]
 800242a:	2b01      	cmp	r3, #1
 800242c:	d001      	beq.n	8002432 <HAL_RCC_OscConfig+0x176>
 800242e:	2301      	movs	r3, #1
 8002430:	e1ba      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002432:	4b3d      	ldr	r3, [pc, #244]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	695b      	ldr	r3, [r3, #20]
 800243e:	00db      	lsls	r3, r3, #3
 8002440:	4939      	ldr	r1, [pc, #228]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002442:	4313      	orrs	r3, r2
 8002444:	600b      	str	r3, [r1, #0]
 8002446:	e03a      	b.n	80024be <HAL_RCC_OscConfig+0x202>
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	691b      	ldr	r3, [r3, #16]
 800244c:	2b00      	cmp	r3, #0
 800244e:	d020      	beq.n	8002492 <HAL_RCC_OscConfig+0x1d6>
 8002450:	4b36      	ldr	r3, [pc, #216]	; (800252c <HAL_RCC_OscConfig+0x270>)
 8002452:	2201      	movs	r2, #1
 8002454:	601a      	str	r2, [r3, #0]
 8002456:	f7ff fb93 	bl	8001b80 <HAL_GetTick>
 800245a:	6138      	str	r0, [r7, #16]
 800245c:	e008      	b.n	8002470 <HAL_RCC_OscConfig+0x1b4>
 800245e:	f7ff fb8f 	bl	8001b80 <HAL_GetTick>
 8002462:	4602      	mov	r2, r0
 8002464:	693b      	ldr	r3, [r7, #16]
 8002466:	1ad3      	subs	r3, r2, r3
 8002468:	2b02      	cmp	r3, #2
 800246a:	d901      	bls.n	8002470 <HAL_RCC_OscConfig+0x1b4>
 800246c:	2303      	movs	r3, #3
 800246e:	e19b      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002470:	4b2d      	ldr	r3, [pc, #180]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	f003 0302 	and.w	r3, r3, #2
 8002478:	2b00      	cmp	r3, #0
 800247a:	d0f0      	beq.n	800245e <HAL_RCC_OscConfig+0x1a2>
 800247c:	4b2a      	ldr	r3, [pc, #168]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	695b      	ldr	r3, [r3, #20]
 8002488:	00db      	lsls	r3, r3, #3
 800248a:	4927      	ldr	r1, [pc, #156]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 800248c:	4313      	orrs	r3, r2
 800248e:	600b      	str	r3, [r1, #0]
 8002490:	e015      	b.n	80024be <HAL_RCC_OscConfig+0x202>
 8002492:	4b26      	ldr	r3, [pc, #152]	; (800252c <HAL_RCC_OscConfig+0x270>)
 8002494:	2200      	movs	r2, #0
 8002496:	601a      	str	r2, [r3, #0]
 8002498:	f7ff fb72 	bl	8001b80 <HAL_GetTick>
 800249c:	6138      	str	r0, [r7, #16]
 800249e:	e008      	b.n	80024b2 <HAL_RCC_OscConfig+0x1f6>
 80024a0:	f7ff fb6e 	bl	8001b80 <HAL_GetTick>
 80024a4:	4602      	mov	r2, r0
 80024a6:	693b      	ldr	r3, [r7, #16]
 80024a8:	1ad3      	subs	r3, r2, r3
 80024aa:	2b02      	cmp	r3, #2
 80024ac:	d901      	bls.n	80024b2 <HAL_RCC_OscConfig+0x1f6>
 80024ae:	2303      	movs	r3, #3
 80024b0:	e17a      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80024b2:	4b1d      	ldr	r3, [pc, #116]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	f003 0302 	and.w	r3, r3, #2
 80024ba:	2b00      	cmp	r3, #0
 80024bc:	d1f0      	bne.n	80024a0 <HAL_RCC_OscConfig+0x1e4>
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f003 0308 	and.w	r3, r3, #8
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d03a      	beq.n	8002540 <HAL_RCC_OscConfig+0x284>
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	699b      	ldr	r3, [r3, #24]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d019      	beq.n	8002506 <HAL_RCC_OscConfig+0x24a>
 80024d2:	4b17      	ldr	r3, [pc, #92]	; (8002530 <HAL_RCC_OscConfig+0x274>)
 80024d4:	2201      	movs	r2, #1
 80024d6:	601a      	str	r2, [r3, #0]
 80024d8:	f7ff fb52 	bl	8001b80 <HAL_GetTick>
 80024dc:	6138      	str	r0, [r7, #16]
 80024de:	e008      	b.n	80024f2 <HAL_RCC_OscConfig+0x236>
 80024e0:	f7ff fb4e 	bl	8001b80 <HAL_GetTick>
 80024e4:	4602      	mov	r2, r0
 80024e6:	693b      	ldr	r3, [r7, #16]
 80024e8:	1ad3      	subs	r3, r2, r3
 80024ea:	2b02      	cmp	r3, #2
 80024ec:	d901      	bls.n	80024f2 <HAL_RCC_OscConfig+0x236>
 80024ee:	2303      	movs	r3, #3
 80024f0:	e15a      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80024f2:	4b0d      	ldr	r3, [pc, #52]	; (8002528 <HAL_RCC_OscConfig+0x26c>)
 80024f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024f6:	f003 0302 	and.w	r3, r3, #2
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d0f0      	beq.n	80024e0 <HAL_RCC_OscConfig+0x224>
 80024fe:	2001      	movs	r0, #1
 8002500:	f000 fad8 	bl	8002ab4 <RCC_Delay>
 8002504:	e01c      	b.n	8002540 <HAL_RCC_OscConfig+0x284>
 8002506:	4b0a      	ldr	r3, [pc, #40]	; (8002530 <HAL_RCC_OscConfig+0x274>)
 8002508:	2200      	movs	r2, #0
 800250a:	601a      	str	r2, [r3, #0]
 800250c:	f7ff fb38 	bl	8001b80 <HAL_GetTick>
 8002510:	6138      	str	r0, [r7, #16]
 8002512:	e00f      	b.n	8002534 <HAL_RCC_OscConfig+0x278>
 8002514:	f7ff fb34 	bl	8001b80 <HAL_GetTick>
 8002518:	4602      	mov	r2, r0
 800251a:	693b      	ldr	r3, [r7, #16]
 800251c:	1ad3      	subs	r3, r2, r3
 800251e:	2b02      	cmp	r3, #2
 8002520:	d908      	bls.n	8002534 <HAL_RCC_OscConfig+0x278>
 8002522:	2303      	movs	r3, #3
 8002524:	e140      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002526:	bf00      	nop
 8002528:	40021000 	.word	0x40021000
 800252c:	42420000 	.word	0x42420000
 8002530:	42420480 	.word	0x42420480
 8002534:	4b9e      	ldr	r3, [pc, #632]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002538:	f003 0302 	and.w	r3, r3, #2
 800253c:	2b00      	cmp	r3, #0
 800253e:	d1e9      	bne.n	8002514 <HAL_RCC_OscConfig+0x258>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	f003 0304 	and.w	r3, r3, #4
 8002548:	2b00      	cmp	r3, #0
 800254a:	f000 80a6 	beq.w	800269a <HAL_RCC_OscConfig+0x3de>
 800254e:	2300      	movs	r3, #0
 8002550:	75fb      	strb	r3, [r7, #23]
 8002552:	4b97      	ldr	r3, [pc, #604]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002554:	69db      	ldr	r3, [r3, #28]
 8002556:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800255a:	2b00      	cmp	r3, #0
 800255c:	d10d      	bne.n	800257a <HAL_RCC_OscConfig+0x2be>
 800255e:	4b94      	ldr	r3, [pc, #592]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002560:	69db      	ldr	r3, [r3, #28]
 8002562:	4a93      	ldr	r2, [pc, #588]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002564:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002568:	61d3      	str	r3, [r2, #28]
 800256a:	4b91      	ldr	r3, [pc, #580]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 800256c:	69db      	ldr	r3, [r3, #28]
 800256e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002572:	60bb      	str	r3, [r7, #8]
 8002574:	68bb      	ldr	r3, [r7, #8]
 8002576:	2301      	movs	r3, #1
 8002578:	75fb      	strb	r3, [r7, #23]
 800257a:	4b8e      	ldr	r3, [pc, #568]	; (80027b4 <HAL_RCC_OscConfig+0x4f8>)
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002582:	2b00      	cmp	r3, #0
 8002584:	d118      	bne.n	80025b8 <HAL_RCC_OscConfig+0x2fc>
 8002586:	4b8b      	ldr	r3, [pc, #556]	; (80027b4 <HAL_RCC_OscConfig+0x4f8>)
 8002588:	681b      	ldr	r3, [r3, #0]
 800258a:	4a8a      	ldr	r2, [pc, #552]	; (80027b4 <HAL_RCC_OscConfig+0x4f8>)
 800258c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002590:	6013      	str	r3, [r2, #0]
 8002592:	f7ff faf5 	bl	8001b80 <HAL_GetTick>
 8002596:	6138      	str	r0, [r7, #16]
 8002598:	e008      	b.n	80025ac <HAL_RCC_OscConfig+0x2f0>
 800259a:	f7ff faf1 	bl	8001b80 <HAL_GetTick>
 800259e:	4602      	mov	r2, r0
 80025a0:	693b      	ldr	r3, [r7, #16]
 80025a2:	1ad3      	subs	r3, r2, r3
 80025a4:	2b64      	cmp	r3, #100	; 0x64
 80025a6:	d901      	bls.n	80025ac <HAL_RCC_OscConfig+0x2f0>
 80025a8:	2303      	movs	r3, #3
 80025aa:	e0fd      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80025ac:	4b81      	ldr	r3, [pc, #516]	; (80027b4 <HAL_RCC_OscConfig+0x4f8>)
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025b4:	2b00      	cmp	r3, #0
 80025b6:	d0f0      	beq.n	800259a <HAL_RCC_OscConfig+0x2de>
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	68db      	ldr	r3, [r3, #12]
 80025bc:	2b01      	cmp	r3, #1
 80025be:	d106      	bne.n	80025ce <HAL_RCC_OscConfig+0x312>
 80025c0:	4b7b      	ldr	r3, [pc, #492]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025c2:	6a1b      	ldr	r3, [r3, #32]
 80025c4:	4a7a      	ldr	r2, [pc, #488]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025c6:	f043 0301 	orr.w	r3, r3, #1
 80025ca:	6213      	str	r3, [r2, #32]
 80025cc:	e02d      	b.n	800262a <HAL_RCC_OscConfig+0x36e>
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	68db      	ldr	r3, [r3, #12]
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d10c      	bne.n	80025f0 <HAL_RCC_OscConfig+0x334>
 80025d6:	4b76      	ldr	r3, [pc, #472]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025d8:	6a1b      	ldr	r3, [r3, #32]
 80025da:	4a75      	ldr	r2, [pc, #468]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025dc:	f023 0301 	bic.w	r3, r3, #1
 80025e0:	6213      	str	r3, [r2, #32]
 80025e2:	4b73      	ldr	r3, [pc, #460]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025e4:	6a1b      	ldr	r3, [r3, #32]
 80025e6:	4a72      	ldr	r2, [pc, #456]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025e8:	f023 0304 	bic.w	r3, r3, #4
 80025ec:	6213      	str	r3, [r2, #32]
 80025ee:	e01c      	b.n	800262a <HAL_RCC_OscConfig+0x36e>
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	68db      	ldr	r3, [r3, #12]
 80025f4:	2b05      	cmp	r3, #5
 80025f6:	d10c      	bne.n	8002612 <HAL_RCC_OscConfig+0x356>
 80025f8:	4b6d      	ldr	r3, [pc, #436]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025fa:	6a1b      	ldr	r3, [r3, #32]
 80025fc:	4a6c      	ldr	r2, [pc, #432]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80025fe:	f043 0304 	orr.w	r3, r3, #4
 8002602:	6213      	str	r3, [r2, #32]
 8002604:	4b6a      	ldr	r3, [pc, #424]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002606:	6a1b      	ldr	r3, [r3, #32]
 8002608:	4a69      	ldr	r2, [pc, #420]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 800260a:	f043 0301 	orr.w	r3, r3, #1
 800260e:	6213      	str	r3, [r2, #32]
 8002610:	e00b      	b.n	800262a <HAL_RCC_OscConfig+0x36e>
 8002612:	4b67      	ldr	r3, [pc, #412]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002614:	6a1b      	ldr	r3, [r3, #32]
 8002616:	4a66      	ldr	r2, [pc, #408]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002618:	f023 0301 	bic.w	r3, r3, #1
 800261c:	6213      	str	r3, [r2, #32]
 800261e:	4b64      	ldr	r3, [pc, #400]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002620:	6a1b      	ldr	r3, [r3, #32]
 8002622:	4a63      	ldr	r2, [pc, #396]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002624:	f023 0304 	bic.w	r3, r3, #4
 8002628:	6213      	str	r3, [r2, #32]
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	68db      	ldr	r3, [r3, #12]
 800262e:	2b00      	cmp	r3, #0
 8002630:	d015      	beq.n	800265e <HAL_RCC_OscConfig+0x3a2>
 8002632:	f7ff faa5 	bl	8001b80 <HAL_GetTick>
 8002636:	6138      	str	r0, [r7, #16]
 8002638:	e00a      	b.n	8002650 <HAL_RCC_OscConfig+0x394>
 800263a:	f7ff faa1 	bl	8001b80 <HAL_GetTick>
 800263e:	4602      	mov	r2, r0
 8002640:	693b      	ldr	r3, [r7, #16]
 8002642:	1ad3      	subs	r3, r2, r3
 8002644:	f241 3288 	movw	r2, #5000	; 0x1388
 8002648:	4293      	cmp	r3, r2
 800264a:	d901      	bls.n	8002650 <HAL_RCC_OscConfig+0x394>
 800264c:	2303      	movs	r3, #3
 800264e:	e0ab      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002650:	4b57      	ldr	r3, [pc, #348]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002652:	6a1b      	ldr	r3, [r3, #32]
 8002654:	f003 0302 	and.w	r3, r3, #2
 8002658:	2b00      	cmp	r3, #0
 800265a:	d0ee      	beq.n	800263a <HAL_RCC_OscConfig+0x37e>
 800265c:	e014      	b.n	8002688 <HAL_RCC_OscConfig+0x3cc>
 800265e:	f7ff fa8f 	bl	8001b80 <HAL_GetTick>
 8002662:	6138      	str	r0, [r7, #16]
 8002664:	e00a      	b.n	800267c <HAL_RCC_OscConfig+0x3c0>
 8002666:	f7ff fa8b 	bl	8001b80 <HAL_GetTick>
 800266a:	4602      	mov	r2, r0
 800266c:	693b      	ldr	r3, [r7, #16]
 800266e:	1ad3      	subs	r3, r2, r3
 8002670:	f241 3288 	movw	r2, #5000	; 0x1388
 8002674:	4293      	cmp	r3, r2
 8002676:	d901      	bls.n	800267c <HAL_RCC_OscConfig+0x3c0>
 8002678:	2303      	movs	r3, #3
 800267a:	e095      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 800267c:	4b4c      	ldr	r3, [pc, #304]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 800267e:	6a1b      	ldr	r3, [r3, #32]
 8002680:	f003 0302 	and.w	r3, r3, #2
 8002684:	2b00      	cmp	r3, #0
 8002686:	d1ee      	bne.n	8002666 <HAL_RCC_OscConfig+0x3aa>
 8002688:	7dfb      	ldrb	r3, [r7, #23]
 800268a:	2b01      	cmp	r3, #1
 800268c:	d105      	bne.n	800269a <HAL_RCC_OscConfig+0x3de>
 800268e:	4b48      	ldr	r3, [pc, #288]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002690:	69db      	ldr	r3, [r3, #28]
 8002692:	4a47      	ldr	r2, [pc, #284]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002694:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002698:	61d3      	str	r3, [r2, #28]
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	69db      	ldr	r3, [r3, #28]
 800269e:	2b00      	cmp	r3, #0
 80026a0:	f000 8081 	beq.w	80027a6 <HAL_RCC_OscConfig+0x4ea>
 80026a4:	4b42      	ldr	r3, [pc, #264]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80026a6:	685b      	ldr	r3, [r3, #4]
 80026a8:	f003 030c 	and.w	r3, r3, #12
 80026ac:	2b08      	cmp	r3, #8
 80026ae:	d061      	beq.n	8002774 <HAL_RCC_OscConfig+0x4b8>
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	69db      	ldr	r3, [r3, #28]
 80026b4:	2b02      	cmp	r3, #2
 80026b6:	d146      	bne.n	8002746 <HAL_RCC_OscConfig+0x48a>
 80026b8:	4b3f      	ldr	r3, [pc, #252]	; (80027b8 <HAL_RCC_OscConfig+0x4fc>)
 80026ba:	2200      	movs	r2, #0
 80026bc:	601a      	str	r2, [r3, #0]
 80026be:	f7ff fa5f 	bl	8001b80 <HAL_GetTick>
 80026c2:	6138      	str	r0, [r7, #16]
 80026c4:	e008      	b.n	80026d8 <HAL_RCC_OscConfig+0x41c>
 80026c6:	f7ff fa5b 	bl	8001b80 <HAL_GetTick>
 80026ca:	4602      	mov	r2, r0
 80026cc:	693b      	ldr	r3, [r7, #16]
 80026ce:	1ad3      	subs	r3, r2, r3
 80026d0:	2b02      	cmp	r3, #2
 80026d2:	d901      	bls.n	80026d8 <HAL_RCC_OscConfig+0x41c>
 80026d4:	2303      	movs	r3, #3
 80026d6:	e067      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80026d8:	4b35      	ldr	r3, [pc, #212]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	d1f0      	bne.n	80026c6 <HAL_RCC_OscConfig+0x40a>
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	6a1b      	ldr	r3, [r3, #32]
 80026e8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80026ec:	d108      	bne.n	8002700 <HAL_RCC_OscConfig+0x444>
 80026ee:	4b30      	ldr	r3, [pc, #192]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80026f0:	685b      	ldr	r3, [r3, #4]
 80026f2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	689b      	ldr	r3, [r3, #8]
 80026fa:	492d      	ldr	r1, [pc, #180]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 80026fc:	4313      	orrs	r3, r2
 80026fe:	604b      	str	r3, [r1, #4]
 8002700:	4b2b      	ldr	r3, [pc, #172]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002702:	685b      	ldr	r3, [r3, #4]
 8002704:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	6a19      	ldr	r1, [r3, #32]
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002710:	430b      	orrs	r3, r1
 8002712:	4927      	ldr	r1, [pc, #156]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002714:	4313      	orrs	r3, r2
 8002716:	604b      	str	r3, [r1, #4]
 8002718:	4b27      	ldr	r3, [pc, #156]	; (80027b8 <HAL_RCC_OscConfig+0x4fc>)
 800271a:	2201      	movs	r2, #1
 800271c:	601a      	str	r2, [r3, #0]
 800271e:	f7ff fa2f 	bl	8001b80 <HAL_GetTick>
 8002722:	6138      	str	r0, [r7, #16]
 8002724:	e008      	b.n	8002738 <HAL_RCC_OscConfig+0x47c>
 8002726:	f7ff fa2b 	bl	8001b80 <HAL_GetTick>
 800272a:	4602      	mov	r2, r0
 800272c:	693b      	ldr	r3, [r7, #16]
 800272e:	1ad3      	subs	r3, r2, r3
 8002730:	2b02      	cmp	r3, #2
 8002732:	d901      	bls.n	8002738 <HAL_RCC_OscConfig+0x47c>
 8002734:	2303      	movs	r3, #3
 8002736:	e037      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002738:	4b1d      	ldr	r3, [pc, #116]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002740:	2b00      	cmp	r3, #0
 8002742:	d0f0      	beq.n	8002726 <HAL_RCC_OscConfig+0x46a>
 8002744:	e02f      	b.n	80027a6 <HAL_RCC_OscConfig+0x4ea>
 8002746:	4b1c      	ldr	r3, [pc, #112]	; (80027b8 <HAL_RCC_OscConfig+0x4fc>)
 8002748:	2200      	movs	r2, #0
 800274a:	601a      	str	r2, [r3, #0]
 800274c:	f7ff fa18 	bl	8001b80 <HAL_GetTick>
 8002750:	6138      	str	r0, [r7, #16]
 8002752:	e008      	b.n	8002766 <HAL_RCC_OscConfig+0x4aa>
 8002754:	f7ff fa14 	bl	8001b80 <HAL_GetTick>
 8002758:	4602      	mov	r2, r0
 800275a:	693b      	ldr	r3, [r7, #16]
 800275c:	1ad3      	subs	r3, r2, r3
 800275e:	2b02      	cmp	r3, #2
 8002760:	d901      	bls.n	8002766 <HAL_RCC_OscConfig+0x4aa>
 8002762:	2303      	movs	r3, #3
 8002764:	e020      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002766:	4b12      	ldr	r3, [pc, #72]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800276e:	2b00      	cmp	r3, #0
 8002770:	d1f0      	bne.n	8002754 <HAL_RCC_OscConfig+0x498>
 8002772:	e018      	b.n	80027a6 <HAL_RCC_OscConfig+0x4ea>
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	69db      	ldr	r3, [r3, #28]
 8002778:	2b01      	cmp	r3, #1
 800277a:	d101      	bne.n	8002780 <HAL_RCC_OscConfig+0x4c4>
 800277c:	2301      	movs	r3, #1
 800277e:	e013      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 8002780:	4b0b      	ldr	r3, [pc, #44]	; (80027b0 <HAL_RCC_OscConfig+0x4f4>)
 8002782:	685b      	ldr	r3, [r3, #4]
 8002784:	60fb      	str	r3, [r7, #12]
 8002786:	68fb      	ldr	r3, [r7, #12]
 8002788:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	6a1b      	ldr	r3, [r3, #32]
 8002790:	429a      	cmp	r2, r3
 8002792:	d106      	bne.n	80027a2 <HAL_RCC_OscConfig+0x4e6>
 8002794:	68fb      	ldr	r3, [r7, #12]
 8002796:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800279e:	429a      	cmp	r2, r3
 80027a0:	d001      	beq.n	80027a6 <HAL_RCC_OscConfig+0x4ea>
 80027a2:	2301      	movs	r3, #1
 80027a4:	e000      	b.n	80027a8 <HAL_RCC_OscConfig+0x4ec>
 80027a6:	2300      	movs	r3, #0
 80027a8:	4618      	mov	r0, r3
 80027aa:	3718      	adds	r7, #24
 80027ac:	46bd      	mov	sp, r7
 80027ae:	bd80      	pop	{r7, pc}
 80027b0:	40021000 	.word	0x40021000
 80027b4:	40007000 	.word	0x40007000
 80027b8:	42420060 	.word	0x42420060

080027bc <HAL_RCC_ClockConfig>:
 80027bc:	b580      	push	{r7, lr}
 80027be:	b084      	sub	sp, #16
 80027c0:	af00      	add	r7, sp, #0
 80027c2:	6078      	str	r0, [r7, #4]
 80027c4:	6039      	str	r1, [r7, #0]
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	d101      	bne.n	80027d0 <HAL_RCC_ClockConfig+0x14>
 80027cc:	2301      	movs	r3, #1
 80027ce:	e0d0      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 80027d0:	4b6a      	ldr	r3, [pc, #424]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	f003 0307 	and.w	r3, r3, #7
 80027d8:	683a      	ldr	r2, [r7, #0]
 80027da:	429a      	cmp	r2, r3
 80027dc:	d910      	bls.n	8002800 <HAL_RCC_ClockConfig+0x44>
 80027de:	4b67      	ldr	r3, [pc, #412]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	f023 0207 	bic.w	r2, r3, #7
 80027e6:	4965      	ldr	r1, [pc, #404]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80027e8:	683b      	ldr	r3, [r7, #0]
 80027ea:	4313      	orrs	r3, r2
 80027ec:	600b      	str	r3, [r1, #0]
 80027ee:	4b63      	ldr	r3, [pc, #396]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	f003 0307 	and.w	r3, r3, #7
 80027f6:	683a      	ldr	r2, [r7, #0]
 80027f8:	429a      	cmp	r2, r3
 80027fa:	d001      	beq.n	8002800 <HAL_RCC_ClockConfig+0x44>
 80027fc:	2301      	movs	r3, #1
 80027fe:	e0b8      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	f003 0302 	and.w	r3, r3, #2
 8002808:	2b00      	cmp	r3, #0
 800280a:	d020      	beq.n	800284e <HAL_RCC_ClockConfig+0x92>
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	f003 0304 	and.w	r3, r3, #4
 8002814:	2b00      	cmp	r3, #0
 8002816:	d005      	beq.n	8002824 <HAL_RCC_ClockConfig+0x68>
 8002818:	4b59      	ldr	r3, [pc, #356]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800281a:	685b      	ldr	r3, [r3, #4]
 800281c:	4a58      	ldr	r2, [pc, #352]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800281e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002822:	6053      	str	r3, [r2, #4]
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	f003 0308 	and.w	r3, r3, #8
 800282c:	2b00      	cmp	r3, #0
 800282e:	d005      	beq.n	800283c <HAL_RCC_ClockConfig+0x80>
 8002830:	4b53      	ldr	r3, [pc, #332]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002832:	685b      	ldr	r3, [r3, #4]
 8002834:	4a52      	ldr	r2, [pc, #328]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002836:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800283a:	6053      	str	r3, [r2, #4]
 800283c:	4b50      	ldr	r3, [pc, #320]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800283e:	685b      	ldr	r3, [r3, #4]
 8002840:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	689b      	ldr	r3, [r3, #8]
 8002848:	494d      	ldr	r1, [pc, #308]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800284a:	4313      	orrs	r3, r2
 800284c:	604b      	str	r3, [r1, #4]
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	f003 0301 	and.w	r3, r3, #1
 8002856:	2b00      	cmp	r3, #0
 8002858:	d040      	beq.n	80028dc <HAL_RCC_ClockConfig+0x120>
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	685b      	ldr	r3, [r3, #4]
 800285e:	2b01      	cmp	r3, #1
 8002860:	d107      	bne.n	8002872 <HAL_RCC_ClockConfig+0xb6>
 8002862:	4b47      	ldr	r3, [pc, #284]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800286a:	2b00      	cmp	r3, #0
 800286c:	d115      	bne.n	800289a <HAL_RCC_ClockConfig+0xde>
 800286e:	2301      	movs	r3, #1
 8002870:	e07f      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	685b      	ldr	r3, [r3, #4]
 8002876:	2b02      	cmp	r3, #2
 8002878:	d107      	bne.n	800288a <HAL_RCC_ClockConfig+0xce>
 800287a:	4b41      	ldr	r3, [pc, #260]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002882:	2b00      	cmp	r3, #0
 8002884:	d109      	bne.n	800289a <HAL_RCC_ClockConfig+0xde>
 8002886:	2301      	movs	r3, #1
 8002888:	e073      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 800288a:	4b3d      	ldr	r3, [pc, #244]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	f003 0302 	and.w	r3, r3, #2
 8002892:	2b00      	cmp	r3, #0
 8002894:	d101      	bne.n	800289a <HAL_RCC_ClockConfig+0xde>
 8002896:	2301      	movs	r3, #1
 8002898:	e06b      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 800289a:	4b39      	ldr	r3, [pc, #228]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800289c:	685b      	ldr	r3, [r3, #4]
 800289e:	f023 0203 	bic.w	r2, r3, #3
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	685b      	ldr	r3, [r3, #4]
 80028a6:	4936      	ldr	r1, [pc, #216]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 80028a8:	4313      	orrs	r3, r2
 80028aa:	604b      	str	r3, [r1, #4]
 80028ac:	f7ff f968 	bl	8001b80 <HAL_GetTick>
 80028b0:	60f8      	str	r0, [r7, #12]
 80028b2:	e00a      	b.n	80028ca <HAL_RCC_ClockConfig+0x10e>
 80028b4:	f7ff f964 	bl	8001b80 <HAL_GetTick>
 80028b8:	4602      	mov	r2, r0
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	1ad3      	subs	r3, r2, r3
 80028be:	f241 3288 	movw	r2, #5000	; 0x1388
 80028c2:	4293      	cmp	r3, r2
 80028c4:	d901      	bls.n	80028ca <HAL_RCC_ClockConfig+0x10e>
 80028c6:	2303      	movs	r3, #3
 80028c8:	e053      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 80028ca:	4b2d      	ldr	r3, [pc, #180]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 80028cc:	685b      	ldr	r3, [r3, #4]
 80028ce:	f003 020c 	and.w	r2, r3, #12
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	685b      	ldr	r3, [r3, #4]
 80028d6:	009b      	lsls	r3, r3, #2
 80028d8:	429a      	cmp	r2, r3
 80028da:	d1eb      	bne.n	80028b4 <HAL_RCC_ClockConfig+0xf8>
 80028dc:	4b27      	ldr	r3, [pc, #156]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	f003 0307 	and.w	r3, r3, #7
 80028e4:	683a      	ldr	r2, [r7, #0]
 80028e6:	429a      	cmp	r2, r3
 80028e8:	d210      	bcs.n	800290c <HAL_RCC_ClockConfig+0x150>
 80028ea:	4b24      	ldr	r3, [pc, #144]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	f023 0207 	bic.w	r2, r3, #7
 80028f2:	4922      	ldr	r1, [pc, #136]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80028f4:	683b      	ldr	r3, [r7, #0]
 80028f6:	4313      	orrs	r3, r2
 80028f8:	600b      	str	r3, [r1, #0]
 80028fa:	4b20      	ldr	r3, [pc, #128]	; (800297c <HAL_RCC_ClockConfig+0x1c0>)
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	f003 0307 	and.w	r3, r3, #7
 8002902:	683a      	ldr	r2, [r7, #0]
 8002904:	429a      	cmp	r2, r3
 8002906:	d001      	beq.n	800290c <HAL_RCC_ClockConfig+0x150>
 8002908:	2301      	movs	r3, #1
 800290a:	e032      	b.n	8002972 <HAL_RCC_ClockConfig+0x1b6>
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	f003 0304 	and.w	r3, r3, #4
 8002914:	2b00      	cmp	r3, #0
 8002916:	d008      	beq.n	800292a <HAL_RCC_ClockConfig+0x16e>
 8002918:	4b19      	ldr	r3, [pc, #100]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 800291a:	685b      	ldr	r3, [r3, #4]
 800291c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	68db      	ldr	r3, [r3, #12]
 8002924:	4916      	ldr	r1, [pc, #88]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002926:	4313      	orrs	r3, r2
 8002928:	604b      	str	r3, [r1, #4]
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	f003 0308 	and.w	r3, r3, #8
 8002932:	2b00      	cmp	r3, #0
 8002934:	d009      	beq.n	800294a <HAL_RCC_ClockConfig+0x18e>
 8002936:	4b12      	ldr	r3, [pc, #72]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002938:	685b      	ldr	r3, [r3, #4]
 800293a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	691b      	ldr	r3, [r3, #16]
 8002942:	00db      	lsls	r3, r3, #3
 8002944:	490e      	ldr	r1, [pc, #56]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002946:	4313      	orrs	r3, r2
 8002948:	604b      	str	r3, [r1, #4]
 800294a:	f000 f821 	bl	8002990 <HAL_RCC_GetSysClockFreq>
 800294e:	4602      	mov	r2, r0
 8002950:	4b0b      	ldr	r3, [pc, #44]	; (8002980 <HAL_RCC_ClockConfig+0x1c4>)
 8002952:	685b      	ldr	r3, [r3, #4]
 8002954:	091b      	lsrs	r3, r3, #4
 8002956:	f003 030f 	and.w	r3, r3, #15
 800295a:	490a      	ldr	r1, [pc, #40]	; (8002984 <HAL_RCC_ClockConfig+0x1c8>)
 800295c:	5ccb      	ldrb	r3, [r1, r3]
 800295e:	fa22 f303 	lsr.w	r3, r2, r3
 8002962:	4a09      	ldr	r2, [pc, #36]	; (8002988 <HAL_RCC_ClockConfig+0x1cc>)
 8002964:	6013      	str	r3, [r2, #0]
 8002966:	4b09      	ldr	r3, [pc, #36]	; (800298c <HAL_RCC_ClockConfig+0x1d0>)
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	4618      	mov	r0, r3
 800296c:	f7ff f8c6 	bl	8001afc <HAL_InitTick>
 8002970:	2300      	movs	r3, #0
 8002972:	4618      	mov	r0, r3
 8002974:	3710      	adds	r7, #16
 8002976:	46bd      	mov	sp, r7
 8002978:	bd80      	pop	{r7, pc}
 800297a:	bf00      	nop
 800297c:	40022000 	.word	0x40022000
 8002980:	40021000 	.word	0x40021000
 8002984:	08004d04 	.word	0x08004d04
 8002988:	20000024 	.word	0x20000024
 800298c:	20000028 	.word	0x20000028

08002990 <HAL_RCC_GetSysClockFreq>:
 8002990:	b490      	push	{r4, r7}
 8002992:	b08a      	sub	sp, #40	; 0x28
 8002994:	af00      	add	r7, sp, #0
 8002996:	4b2a      	ldr	r3, [pc, #168]	; (8002a40 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002998:	1d3c      	adds	r4, r7, #4
 800299a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800299c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80029a0:	f240 2301 	movw	r3, #513	; 0x201
 80029a4:	803b      	strh	r3, [r7, #0]
 80029a6:	2300      	movs	r3, #0
 80029a8:	61fb      	str	r3, [r7, #28]
 80029aa:	2300      	movs	r3, #0
 80029ac:	61bb      	str	r3, [r7, #24]
 80029ae:	2300      	movs	r3, #0
 80029b0:	627b      	str	r3, [r7, #36]	; 0x24
 80029b2:	2300      	movs	r3, #0
 80029b4:	617b      	str	r3, [r7, #20]
 80029b6:	2300      	movs	r3, #0
 80029b8:	623b      	str	r3, [r7, #32]
 80029ba:	4b22      	ldr	r3, [pc, #136]	; (8002a44 <HAL_RCC_GetSysClockFreq+0xb4>)
 80029bc:	685b      	ldr	r3, [r3, #4]
 80029be:	61fb      	str	r3, [r7, #28]
 80029c0:	69fb      	ldr	r3, [r7, #28]
 80029c2:	f003 030c 	and.w	r3, r3, #12
 80029c6:	2b04      	cmp	r3, #4
 80029c8:	d002      	beq.n	80029d0 <HAL_RCC_GetSysClockFreq+0x40>
 80029ca:	2b08      	cmp	r3, #8
 80029cc:	d003      	beq.n	80029d6 <HAL_RCC_GetSysClockFreq+0x46>
 80029ce:	e02d      	b.n	8002a2c <HAL_RCC_GetSysClockFreq+0x9c>
 80029d0:	4b1d      	ldr	r3, [pc, #116]	; (8002a48 <HAL_RCC_GetSysClockFreq+0xb8>)
 80029d2:	623b      	str	r3, [r7, #32]
 80029d4:	e02d      	b.n	8002a32 <HAL_RCC_GetSysClockFreq+0xa2>
 80029d6:	69fb      	ldr	r3, [r7, #28]
 80029d8:	0c9b      	lsrs	r3, r3, #18
 80029da:	f003 030f 	and.w	r3, r3, #15
 80029de:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80029e2:	4413      	add	r3, r2
 80029e4:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80029e8:	617b      	str	r3, [r7, #20]
 80029ea:	69fb      	ldr	r3, [r7, #28]
 80029ec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d013      	beq.n	8002a1c <HAL_RCC_GetSysClockFreq+0x8c>
 80029f4:	4b13      	ldr	r3, [pc, #76]	; (8002a44 <HAL_RCC_GetSysClockFreq+0xb4>)
 80029f6:	685b      	ldr	r3, [r3, #4]
 80029f8:	0c5b      	lsrs	r3, r3, #17
 80029fa:	f003 0301 	and.w	r3, r3, #1
 80029fe:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002a02:	4413      	add	r3, r2
 8002a04:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002a08:	61bb      	str	r3, [r7, #24]
 8002a0a:	697b      	ldr	r3, [r7, #20]
 8002a0c:	4a0e      	ldr	r2, [pc, #56]	; (8002a48 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002a0e:	fb02 f203 	mul.w	r2, r2, r3
 8002a12:	69bb      	ldr	r3, [r7, #24]
 8002a14:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a18:	627b      	str	r3, [r7, #36]	; 0x24
 8002a1a:	e004      	b.n	8002a26 <HAL_RCC_GetSysClockFreq+0x96>
 8002a1c:	697b      	ldr	r3, [r7, #20]
 8002a1e:	4a0b      	ldr	r2, [pc, #44]	; (8002a4c <HAL_RCC_GetSysClockFreq+0xbc>)
 8002a20:	fb02 f303 	mul.w	r3, r2, r3
 8002a24:	627b      	str	r3, [r7, #36]	; 0x24
 8002a26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002a28:	623b      	str	r3, [r7, #32]
 8002a2a:	e002      	b.n	8002a32 <HAL_RCC_GetSysClockFreq+0xa2>
 8002a2c:	4b06      	ldr	r3, [pc, #24]	; (8002a48 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002a2e:	623b      	str	r3, [r7, #32]
 8002a30:	bf00      	nop
 8002a32:	6a3b      	ldr	r3, [r7, #32]
 8002a34:	4618      	mov	r0, r3
 8002a36:	3728      	adds	r7, #40	; 0x28
 8002a38:	46bd      	mov	sp, r7
 8002a3a:	bc90      	pop	{r4, r7}
 8002a3c:	4770      	bx	lr
 8002a3e:	bf00      	nop
 8002a40:	08004cf4 	.word	0x08004cf4
 8002a44:	40021000 	.word	0x40021000
 8002a48:	007a1200 	.word	0x007a1200
 8002a4c:	003d0900 	.word	0x003d0900

08002a50 <HAL_RCC_GetHCLKFreq>:
 8002a50:	b480      	push	{r7}
 8002a52:	af00      	add	r7, sp, #0
 8002a54:	4b02      	ldr	r3, [pc, #8]	; (8002a60 <HAL_RCC_GetHCLKFreq+0x10>)
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	4618      	mov	r0, r3
 8002a5a:	46bd      	mov	sp, r7
 8002a5c:	bc80      	pop	{r7}
 8002a5e:	4770      	bx	lr
 8002a60:	20000024 	.word	0x20000024

08002a64 <HAL_RCC_GetPCLK1Freq>:
 8002a64:	b580      	push	{r7, lr}
 8002a66:	af00      	add	r7, sp, #0
 8002a68:	f7ff fff2 	bl	8002a50 <HAL_RCC_GetHCLKFreq>
 8002a6c:	4602      	mov	r2, r0
 8002a6e:	4b05      	ldr	r3, [pc, #20]	; (8002a84 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002a70:	685b      	ldr	r3, [r3, #4]
 8002a72:	0a1b      	lsrs	r3, r3, #8
 8002a74:	f003 0307 	and.w	r3, r3, #7
 8002a78:	4903      	ldr	r1, [pc, #12]	; (8002a88 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002a7a:	5ccb      	ldrb	r3, [r1, r3]
 8002a7c:	fa22 f303 	lsr.w	r3, r2, r3
 8002a80:	4618      	mov	r0, r3
 8002a82:	bd80      	pop	{r7, pc}
 8002a84:	40021000 	.word	0x40021000
 8002a88:	08004d14 	.word	0x08004d14

08002a8c <HAL_RCC_GetPCLK2Freq>:
 8002a8c:	b580      	push	{r7, lr}
 8002a8e:	af00      	add	r7, sp, #0
 8002a90:	f7ff ffde 	bl	8002a50 <HAL_RCC_GetHCLKFreq>
 8002a94:	4602      	mov	r2, r0
 8002a96:	4b05      	ldr	r3, [pc, #20]	; (8002aac <HAL_RCC_GetPCLK2Freq+0x20>)
 8002a98:	685b      	ldr	r3, [r3, #4]
 8002a9a:	0adb      	lsrs	r3, r3, #11
 8002a9c:	f003 0307 	and.w	r3, r3, #7
 8002aa0:	4903      	ldr	r1, [pc, #12]	; (8002ab0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002aa2:	5ccb      	ldrb	r3, [r1, r3]
 8002aa4:	fa22 f303 	lsr.w	r3, r2, r3
 8002aa8:	4618      	mov	r0, r3
 8002aaa:	bd80      	pop	{r7, pc}
 8002aac:	40021000 	.word	0x40021000
 8002ab0:	08004d14 	.word	0x08004d14

08002ab4 <RCC_Delay>:
 8002ab4:	b480      	push	{r7}
 8002ab6:	b085      	sub	sp, #20
 8002ab8:	af00      	add	r7, sp, #0
 8002aba:	6078      	str	r0, [r7, #4]
 8002abc:	4b0a      	ldr	r3, [pc, #40]	; (8002ae8 <RCC_Delay+0x34>)
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	4a0a      	ldr	r2, [pc, #40]	; (8002aec <RCC_Delay+0x38>)
 8002ac2:	fba2 2303 	umull	r2, r3, r2, r3
 8002ac6:	0a5b      	lsrs	r3, r3, #9
 8002ac8:	687a      	ldr	r2, [r7, #4]
 8002aca:	fb02 f303 	mul.w	r3, r2, r3
 8002ace:	60fb      	str	r3, [r7, #12]
 8002ad0:	bf00      	nop
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	1e5a      	subs	r2, r3, #1
 8002ad6:	60fa      	str	r2, [r7, #12]
 8002ad8:	2b00      	cmp	r3, #0
 8002ada:	d1f9      	bne.n	8002ad0 <RCC_Delay+0x1c>
 8002adc:	bf00      	nop
 8002ade:	bf00      	nop
 8002ae0:	3714      	adds	r7, #20
 8002ae2:	46bd      	mov	sp, r7
 8002ae4:	bc80      	pop	{r7}
 8002ae6:	4770      	bx	lr
 8002ae8:	20000024 	.word	0x20000024
 8002aec:	10624dd3 	.word	0x10624dd3

08002af0 <HAL_TIM_Base_Init>:
 8002af0:	b580      	push	{r7, lr}
 8002af2:	b082      	sub	sp, #8
 8002af4:	af00      	add	r7, sp, #0
 8002af6:	6078      	str	r0, [r7, #4]
 8002af8:	687b      	ldr	r3, [r7, #4]
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d101      	bne.n	8002b02 <HAL_TIM_Base_Init+0x12>
 8002afe:	2301      	movs	r3, #1
 8002b00:	e041      	b.n	8002b86 <HAL_TIM_Base_Init+0x96>
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b08:	b2db      	uxtb	r3, r3
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d106      	bne.n	8002b1c <HAL_TIM_Base_Init+0x2c>
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	2200      	movs	r2, #0
 8002b12:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b16:	6878      	ldr	r0, [r7, #4]
 8002b18:	f7fe fc12 	bl	8001340 <HAL_TIM_Base_MspInit>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	2202      	movs	r2, #2
 8002b20:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681a      	ldr	r2, [r3, #0]
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	3304      	adds	r3, #4
 8002b2c:	4619      	mov	r1, r3
 8002b2e:	4610      	mov	r0, r2
 8002b30:	f000 fc28 	bl	8003384 <TIM_Base_SetConfig>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2201      	movs	r2, #1
 8002b38:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	2201      	movs	r2, #1
 8002b40:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	2201      	movs	r2, #1
 8002b48:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	2201      	movs	r2, #1
 8002b50:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	2201      	movs	r2, #1
 8002b58:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	2201      	movs	r2, #1
 8002b60:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002b64:	687b      	ldr	r3, [r7, #4]
 8002b66:	2201      	movs	r2, #1
 8002b68:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	2201      	movs	r2, #1
 8002b70:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	2201      	movs	r2, #1
 8002b78:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	2201      	movs	r2, #1
 8002b80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b84:	2300      	movs	r3, #0
 8002b86:	4618      	mov	r0, r3
 8002b88:	3708      	adds	r7, #8
 8002b8a:	46bd      	mov	sp, r7
 8002b8c:	bd80      	pop	{r7, pc}
	...

08002b90 <HAL_TIM_Base_Start_IT>:
 8002b90:	b480      	push	{r7}
 8002b92:	b085      	sub	sp, #20
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	6078      	str	r0, [r7, #4]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b9e:	b2db      	uxtb	r3, r3
 8002ba0:	2b01      	cmp	r3, #1
 8002ba2:	d001      	beq.n	8002ba8 <HAL_TIM_Base_Start_IT+0x18>
 8002ba4:	2301      	movs	r3, #1
 8002ba6:	e03a      	b.n	8002c1e <HAL_TIM_Base_Start_IT+0x8e>
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	2202      	movs	r2, #2
 8002bac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	68da      	ldr	r2, [r3, #12]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	f042 0201 	orr.w	r2, r2, #1
 8002bbe:	60da      	str	r2, [r3, #12]
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	4a18      	ldr	r2, [pc, #96]	; (8002c28 <HAL_TIM_Base_Start_IT+0x98>)
 8002bc6:	4293      	cmp	r3, r2
 8002bc8:	d00e      	beq.n	8002be8 <HAL_TIM_Base_Start_IT+0x58>
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002bd2:	d009      	beq.n	8002be8 <HAL_TIM_Base_Start_IT+0x58>
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	4a14      	ldr	r2, [pc, #80]	; (8002c2c <HAL_TIM_Base_Start_IT+0x9c>)
 8002bda:	4293      	cmp	r3, r2
 8002bdc:	d004      	beq.n	8002be8 <HAL_TIM_Base_Start_IT+0x58>
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	4a13      	ldr	r2, [pc, #76]	; (8002c30 <HAL_TIM_Base_Start_IT+0xa0>)
 8002be4:	4293      	cmp	r3, r2
 8002be6:	d111      	bne.n	8002c0c <HAL_TIM_Base_Start_IT+0x7c>
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	689b      	ldr	r3, [r3, #8]
 8002bee:	f003 0307 	and.w	r3, r3, #7
 8002bf2:	60fb      	str	r3, [r7, #12]
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	2b06      	cmp	r3, #6
 8002bf8:	d010      	beq.n	8002c1c <HAL_TIM_Base_Start_IT+0x8c>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	681a      	ldr	r2, [r3, #0]
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	f042 0201 	orr.w	r2, r2, #1
 8002c08:	601a      	str	r2, [r3, #0]
 8002c0a:	e007      	b.n	8002c1c <HAL_TIM_Base_Start_IT+0x8c>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	681a      	ldr	r2, [r3, #0]
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	f042 0201 	orr.w	r2, r2, #1
 8002c1a:	601a      	str	r2, [r3, #0]
 8002c1c:	2300      	movs	r3, #0
 8002c1e:	4618      	mov	r0, r3
 8002c20:	3714      	adds	r7, #20
 8002c22:	46bd      	mov	sp, r7
 8002c24:	bc80      	pop	{r7}
 8002c26:	4770      	bx	lr
 8002c28:	40012c00 	.word	0x40012c00
 8002c2c:	40000400 	.word	0x40000400
 8002c30:	40000800 	.word	0x40000800

08002c34 <HAL_TIM_PWM_Init>:
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b082      	sub	sp, #8
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	d101      	bne.n	8002c46 <HAL_TIM_PWM_Init+0x12>
 8002c42:	2301      	movs	r3, #1
 8002c44:	e041      	b.n	8002cca <HAL_TIM_PWM_Init+0x96>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002c4c:	b2db      	uxtb	r3, r3
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d106      	bne.n	8002c60 <HAL_TIM_PWM_Init+0x2c>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	2200      	movs	r2, #0
 8002c56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c5a:	6878      	ldr	r0, [r7, #4]
 8002c5c:	f000 f839 	bl	8002cd2 <HAL_TIM_PWM_MspInit>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	2202      	movs	r2, #2
 8002c64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681a      	ldr	r2, [r3, #0]
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	3304      	adds	r3, #4
 8002c70:	4619      	mov	r1, r3
 8002c72:	4610      	mov	r0, r2
 8002c74:	f000 fb86 	bl	8003384 <TIM_Base_SetConfig>
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	2201      	movs	r2, #1
 8002c7c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	2201      	movs	r2, #1
 8002c84:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	2201      	movs	r2, #1
 8002c8c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	2201      	movs	r2, #1
 8002c94:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	2201      	movs	r2, #1
 8002ca4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	2201      	movs	r2, #1
 8002cac:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	2201      	movs	r2, #1
 8002cb4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2201      	movs	r2, #1
 8002cbc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	2201      	movs	r2, #1
 8002cc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002cc8:	2300      	movs	r3, #0
 8002cca:	4618      	mov	r0, r3
 8002ccc:	3708      	adds	r7, #8
 8002cce:	46bd      	mov	sp, r7
 8002cd0:	bd80      	pop	{r7, pc}

08002cd2 <HAL_TIM_PWM_MspInit>:
 8002cd2:	b480      	push	{r7}
 8002cd4:	b083      	sub	sp, #12
 8002cd6:	af00      	add	r7, sp, #0
 8002cd8:	6078      	str	r0, [r7, #4]
 8002cda:	bf00      	nop
 8002cdc:	370c      	adds	r7, #12
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bc80      	pop	{r7}
 8002ce2:	4770      	bx	lr

08002ce4 <HAL_TIM_PWM_Start>:
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	b084      	sub	sp, #16
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	6078      	str	r0, [r7, #4]
 8002cec:	6039      	str	r1, [r7, #0]
 8002cee:	683b      	ldr	r3, [r7, #0]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d109      	bne.n	8002d08 <HAL_TIM_PWM_Start+0x24>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002cfa:	b2db      	uxtb	r3, r3
 8002cfc:	2b01      	cmp	r3, #1
 8002cfe:	bf14      	ite	ne
 8002d00:	2301      	movne	r3, #1
 8002d02:	2300      	moveq	r3, #0
 8002d04:	b2db      	uxtb	r3, r3
 8002d06:	e022      	b.n	8002d4e <HAL_TIM_PWM_Start+0x6a>
 8002d08:	683b      	ldr	r3, [r7, #0]
 8002d0a:	2b04      	cmp	r3, #4
 8002d0c:	d109      	bne.n	8002d22 <HAL_TIM_PWM_Start+0x3e>
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8002d14:	b2db      	uxtb	r3, r3
 8002d16:	2b01      	cmp	r3, #1
 8002d18:	bf14      	ite	ne
 8002d1a:	2301      	movne	r3, #1
 8002d1c:	2300      	moveq	r3, #0
 8002d1e:	b2db      	uxtb	r3, r3
 8002d20:	e015      	b.n	8002d4e <HAL_TIM_PWM_Start+0x6a>
 8002d22:	683b      	ldr	r3, [r7, #0]
 8002d24:	2b08      	cmp	r3, #8
 8002d26:	d109      	bne.n	8002d3c <HAL_TIM_PWM_Start+0x58>
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002d2e:	b2db      	uxtb	r3, r3
 8002d30:	2b01      	cmp	r3, #1
 8002d32:	bf14      	ite	ne
 8002d34:	2301      	movne	r3, #1
 8002d36:	2300      	moveq	r3, #0
 8002d38:	b2db      	uxtb	r3, r3
 8002d3a:	e008      	b.n	8002d4e <HAL_TIM_PWM_Start+0x6a>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002d42:	b2db      	uxtb	r3, r3
 8002d44:	2b01      	cmp	r3, #1
 8002d46:	bf14      	ite	ne
 8002d48:	2301      	movne	r3, #1
 8002d4a:	2300      	moveq	r3, #0
 8002d4c:	b2db      	uxtb	r3, r3
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d001      	beq.n	8002d56 <HAL_TIM_PWM_Start+0x72>
 8002d52:	2301      	movs	r3, #1
 8002d54:	e05e      	b.n	8002e14 <HAL_TIM_PWM_Start+0x130>
 8002d56:	683b      	ldr	r3, [r7, #0]
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	d104      	bne.n	8002d66 <HAL_TIM_PWM_Start+0x82>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2202      	movs	r2, #2
 8002d60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d64:	e013      	b.n	8002d8e <HAL_TIM_PWM_Start+0xaa>
 8002d66:	683b      	ldr	r3, [r7, #0]
 8002d68:	2b04      	cmp	r3, #4
 8002d6a:	d104      	bne.n	8002d76 <HAL_TIM_PWM_Start+0x92>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	2202      	movs	r2, #2
 8002d70:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002d74:	e00b      	b.n	8002d8e <HAL_TIM_PWM_Start+0xaa>
 8002d76:	683b      	ldr	r3, [r7, #0]
 8002d78:	2b08      	cmp	r3, #8
 8002d7a:	d104      	bne.n	8002d86 <HAL_TIM_PWM_Start+0xa2>
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	2202      	movs	r2, #2
 8002d80:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002d84:	e003      	b.n	8002d8e <HAL_TIM_PWM_Start+0xaa>
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	2202      	movs	r2, #2
 8002d8a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	2201      	movs	r2, #1
 8002d94:	6839      	ldr	r1, [r7, #0]
 8002d96:	4618      	mov	r0, r3
 8002d98:	f000 fd74 	bl	8003884 <TIM_CCxChannelCmd>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	4a1e      	ldr	r2, [pc, #120]	; (8002e1c <HAL_TIM_PWM_Start+0x138>)
 8002da2:	4293      	cmp	r3, r2
 8002da4:	d107      	bne.n	8002db6 <HAL_TIM_PWM_Start+0xd2>
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002db4:	645a      	str	r2, [r3, #68]	; 0x44
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	4a18      	ldr	r2, [pc, #96]	; (8002e1c <HAL_TIM_PWM_Start+0x138>)
 8002dbc:	4293      	cmp	r3, r2
 8002dbe:	d00e      	beq.n	8002dde <HAL_TIM_PWM_Start+0xfa>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002dc8:	d009      	beq.n	8002dde <HAL_TIM_PWM_Start+0xfa>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	4a14      	ldr	r2, [pc, #80]	; (8002e20 <HAL_TIM_PWM_Start+0x13c>)
 8002dd0:	4293      	cmp	r3, r2
 8002dd2:	d004      	beq.n	8002dde <HAL_TIM_PWM_Start+0xfa>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	4a12      	ldr	r2, [pc, #72]	; (8002e24 <HAL_TIM_PWM_Start+0x140>)
 8002dda:	4293      	cmp	r3, r2
 8002ddc:	d111      	bne.n	8002e02 <HAL_TIM_PWM_Start+0x11e>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	689b      	ldr	r3, [r3, #8]
 8002de4:	f003 0307 	and.w	r3, r3, #7
 8002de8:	60fb      	str	r3, [r7, #12]
 8002dea:	68fb      	ldr	r3, [r7, #12]
 8002dec:	2b06      	cmp	r3, #6
 8002dee:	d010      	beq.n	8002e12 <HAL_TIM_PWM_Start+0x12e>
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	681a      	ldr	r2, [r3, #0]
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	f042 0201 	orr.w	r2, r2, #1
 8002dfe:	601a      	str	r2, [r3, #0]
 8002e00:	e007      	b.n	8002e12 <HAL_TIM_PWM_Start+0x12e>
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	681a      	ldr	r2, [r3, #0]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	f042 0201 	orr.w	r2, r2, #1
 8002e10:	601a      	str	r2, [r3, #0]
 8002e12:	2300      	movs	r3, #0
 8002e14:	4618      	mov	r0, r3
 8002e16:	3710      	adds	r7, #16
 8002e18:	46bd      	mov	sp, r7
 8002e1a:	bd80      	pop	{r7, pc}
 8002e1c:	40012c00 	.word	0x40012c00
 8002e20:	40000400 	.word	0x40000400
 8002e24:	40000800 	.word	0x40000800

08002e28 <HAL_TIM_IRQHandler>:
 8002e28:	b580      	push	{r7, lr}
 8002e2a:	b082      	sub	sp, #8
 8002e2c:	af00      	add	r7, sp, #0
 8002e2e:	6078      	str	r0, [r7, #4]
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	691b      	ldr	r3, [r3, #16]
 8002e36:	f003 0302 	and.w	r3, r3, #2
 8002e3a:	2b02      	cmp	r3, #2
 8002e3c:	d122      	bne.n	8002e84 <HAL_TIM_IRQHandler+0x5c>
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	68db      	ldr	r3, [r3, #12]
 8002e44:	f003 0302 	and.w	r3, r3, #2
 8002e48:	2b02      	cmp	r3, #2
 8002e4a:	d11b      	bne.n	8002e84 <HAL_TIM_IRQHandler+0x5c>
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	681b      	ldr	r3, [r3, #0]
 8002e50:	f06f 0202 	mvn.w	r2, #2
 8002e54:	611a      	str	r2, [r3, #16]
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	2201      	movs	r2, #1
 8002e5a:	771a      	strb	r2, [r3, #28]
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	699b      	ldr	r3, [r3, #24]
 8002e62:	f003 0303 	and.w	r3, r3, #3
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d003      	beq.n	8002e72 <HAL_TIM_IRQHandler+0x4a>
 8002e6a:	6878      	ldr	r0, [r7, #4]
 8002e6c:	f000 fa6f 	bl	800334e <HAL_TIM_IC_CaptureCallback>
 8002e70:	e005      	b.n	8002e7e <HAL_TIM_IRQHandler+0x56>
 8002e72:	6878      	ldr	r0, [r7, #4]
 8002e74:	f000 fa62 	bl	800333c <HAL_TIM_OC_DelayElapsedCallback>
 8002e78:	6878      	ldr	r0, [r7, #4]
 8002e7a:	f000 fa71 	bl	8003360 <HAL_TIM_PWM_PulseFinishedCallback>
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	2200      	movs	r2, #0
 8002e82:	771a      	strb	r2, [r3, #28]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	691b      	ldr	r3, [r3, #16]
 8002e8a:	f003 0304 	and.w	r3, r3, #4
 8002e8e:	2b04      	cmp	r3, #4
 8002e90:	d122      	bne.n	8002ed8 <HAL_TIM_IRQHandler+0xb0>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	68db      	ldr	r3, [r3, #12]
 8002e98:	f003 0304 	and.w	r3, r3, #4
 8002e9c:	2b04      	cmp	r3, #4
 8002e9e:	d11b      	bne.n	8002ed8 <HAL_TIM_IRQHandler+0xb0>
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	f06f 0204 	mvn.w	r2, #4
 8002ea8:	611a      	str	r2, [r3, #16]
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	2202      	movs	r2, #2
 8002eae:	771a      	strb	r2, [r3, #28]
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	699b      	ldr	r3, [r3, #24]
 8002eb6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d003      	beq.n	8002ec6 <HAL_TIM_IRQHandler+0x9e>
 8002ebe:	6878      	ldr	r0, [r7, #4]
 8002ec0:	f000 fa45 	bl	800334e <HAL_TIM_IC_CaptureCallback>
 8002ec4:	e005      	b.n	8002ed2 <HAL_TIM_IRQHandler+0xaa>
 8002ec6:	6878      	ldr	r0, [r7, #4]
 8002ec8:	f000 fa38 	bl	800333c <HAL_TIM_OC_DelayElapsedCallback>
 8002ecc:	6878      	ldr	r0, [r7, #4]
 8002ece:	f000 fa47 	bl	8003360 <HAL_TIM_PWM_PulseFinishedCallback>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	2200      	movs	r2, #0
 8002ed6:	771a      	strb	r2, [r3, #28]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	691b      	ldr	r3, [r3, #16]
 8002ede:	f003 0308 	and.w	r3, r3, #8
 8002ee2:	2b08      	cmp	r3, #8
 8002ee4:	d122      	bne.n	8002f2c <HAL_TIM_IRQHandler+0x104>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	68db      	ldr	r3, [r3, #12]
 8002eec:	f003 0308 	and.w	r3, r3, #8
 8002ef0:	2b08      	cmp	r3, #8
 8002ef2:	d11b      	bne.n	8002f2c <HAL_TIM_IRQHandler+0x104>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	f06f 0208 	mvn.w	r2, #8
 8002efc:	611a      	str	r2, [r3, #16]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	2204      	movs	r2, #4
 8002f02:	771a      	strb	r2, [r3, #28]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	69db      	ldr	r3, [r3, #28]
 8002f0a:	f003 0303 	and.w	r3, r3, #3
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	d003      	beq.n	8002f1a <HAL_TIM_IRQHandler+0xf2>
 8002f12:	6878      	ldr	r0, [r7, #4]
 8002f14:	f000 fa1b 	bl	800334e <HAL_TIM_IC_CaptureCallback>
 8002f18:	e005      	b.n	8002f26 <HAL_TIM_IRQHandler+0xfe>
 8002f1a:	6878      	ldr	r0, [r7, #4]
 8002f1c:	f000 fa0e 	bl	800333c <HAL_TIM_OC_DelayElapsedCallback>
 8002f20:	6878      	ldr	r0, [r7, #4]
 8002f22:	f000 fa1d 	bl	8003360 <HAL_TIM_PWM_PulseFinishedCallback>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	2200      	movs	r2, #0
 8002f2a:	771a      	strb	r2, [r3, #28]
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	691b      	ldr	r3, [r3, #16]
 8002f32:	f003 0310 	and.w	r3, r3, #16
 8002f36:	2b10      	cmp	r3, #16
 8002f38:	d122      	bne.n	8002f80 <HAL_TIM_IRQHandler+0x158>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	68db      	ldr	r3, [r3, #12]
 8002f40:	f003 0310 	and.w	r3, r3, #16
 8002f44:	2b10      	cmp	r3, #16
 8002f46:	d11b      	bne.n	8002f80 <HAL_TIM_IRQHandler+0x158>
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	f06f 0210 	mvn.w	r2, #16
 8002f50:	611a      	str	r2, [r3, #16]
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	2208      	movs	r2, #8
 8002f56:	771a      	strb	r2, [r3, #28]
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	69db      	ldr	r3, [r3, #28]
 8002f5e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d003      	beq.n	8002f6e <HAL_TIM_IRQHandler+0x146>
 8002f66:	6878      	ldr	r0, [r7, #4]
 8002f68:	f000 f9f1 	bl	800334e <HAL_TIM_IC_CaptureCallback>
 8002f6c:	e005      	b.n	8002f7a <HAL_TIM_IRQHandler+0x152>
 8002f6e:	6878      	ldr	r0, [r7, #4]
 8002f70:	f000 f9e4 	bl	800333c <HAL_TIM_OC_DelayElapsedCallback>
 8002f74:	6878      	ldr	r0, [r7, #4]
 8002f76:	f000 f9f3 	bl	8003360 <HAL_TIM_PWM_PulseFinishedCallback>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	2200      	movs	r2, #0
 8002f7e:	771a      	strb	r2, [r3, #28]
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	691b      	ldr	r3, [r3, #16]
 8002f86:	f003 0301 	and.w	r3, r3, #1
 8002f8a:	2b01      	cmp	r3, #1
 8002f8c:	d10e      	bne.n	8002fac <HAL_TIM_IRQHandler+0x184>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	68db      	ldr	r3, [r3, #12]
 8002f94:	f003 0301 	and.w	r3, r3, #1
 8002f98:	2b01      	cmp	r3, #1
 8002f9a:	d107      	bne.n	8002fac <HAL_TIM_IRQHandler+0x184>
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	f06f 0201 	mvn.w	r2, #1
 8002fa4:	611a      	str	r2, [r3, #16]
 8002fa6:	6878      	ldr	r0, [r7, #4]
 8002fa8:	f7fe f986 	bl	80012b8 <HAL_TIM_PeriodElapsedCallback>
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	691b      	ldr	r3, [r3, #16]
 8002fb2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002fb6:	2b80      	cmp	r3, #128	; 0x80
 8002fb8:	d10e      	bne.n	8002fd8 <HAL_TIM_IRQHandler+0x1b0>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	68db      	ldr	r3, [r3, #12]
 8002fc0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002fc4:	2b80      	cmp	r3, #128	; 0x80
 8002fc6:	d107      	bne.n	8002fd8 <HAL_TIM_IRQHandler+0x1b0>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	681b      	ldr	r3, [r3, #0]
 8002fcc:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002fd0:	611a      	str	r2, [r3, #16]
 8002fd2:	6878      	ldr	r0, [r7, #4]
 8002fd4:	f000 fce1 	bl	800399a <HAL_TIMEx_BreakCallback>
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	691b      	ldr	r3, [r3, #16]
 8002fde:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002fe2:	2b40      	cmp	r3, #64	; 0x40
 8002fe4:	d10e      	bne.n	8003004 <HAL_TIM_IRQHandler+0x1dc>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	68db      	ldr	r3, [r3, #12]
 8002fec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ff0:	2b40      	cmp	r3, #64	; 0x40
 8002ff2:	d107      	bne.n	8003004 <HAL_TIM_IRQHandler+0x1dc>
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002ffc:	611a      	str	r2, [r3, #16]
 8002ffe:	6878      	ldr	r0, [r7, #4]
 8003000:	f000 f9b7 	bl	8003372 <HAL_TIM_TriggerCallback>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	691b      	ldr	r3, [r3, #16]
 800300a:	f003 0320 	and.w	r3, r3, #32
 800300e:	2b20      	cmp	r3, #32
 8003010:	d10e      	bne.n	8003030 <HAL_TIM_IRQHandler+0x208>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	68db      	ldr	r3, [r3, #12]
 8003018:	f003 0320 	and.w	r3, r3, #32
 800301c:	2b20      	cmp	r3, #32
 800301e:	d107      	bne.n	8003030 <HAL_TIM_IRQHandler+0x208>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	681b      	ldr	r3, [r3, #0]
 8003024:	f06f 0220 	mvn.w	r2, #32
 8003028:	611a      	str	r2, [r3, #16]
 800302a:	6878      	ldr	r0, [r7, #4]
 800302c:	f000 fcac 	bl	8003988 <HAL_TIMEx_CommutCallback>
 8003030:	bf00      	nop
 8003032:	3708      	adds	r7, #8
 8003034:	46bd      	mov	sp, r7
 8003036:	bd80      	pop	{r7, pc}

08003038 <HAL_TIM_PWM_ConfigChannel>:
 8003038:	b580      	push	{r7, lr}
 800303a:	b084      	sub	sp, #16
 800303c:	af00      	add	r7, sp, #0
 800303e:	60f8      	str	r0, [r7, #12]
 8003040:	60b9      	str	r1, [r7, #8]
 8003042:	607a      	str	r2, [r7, #4]
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800304a:	2b01      	cmp	r3, #1
 800304c:	d101      	bne.n	8003052 <HAL_TIM_PWM_ConfigChannel+0x1a>
 800304e:	2302      	movs	r3, #2
 8003050:	e0ac      	b.n	80031ac <HAL_TIM_PWM_ConfigChannel+0x174>
 8003052:	68fb      	ldr	r3, [r7, #12]
 8003054:	2201      	movs	r2, #1
 8003056:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	2b0c      	cmp	r3, #12
 800305e:	f200 809f 	bhi.w	80031a0 <HAL_TIM_PWM_ConfigChannel+0x168>
 8003062:	a201      	add	r2, pc, #4	; (adr r2, 8003068 <HAL_TIM_PWM_ConfigChannel+0x30>)
 8003064:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003068:	0800309d 	.word	0x0800309d
 800306c:	080031a1 	.word	0x080031a1
 8003070:	080031a1 	.word	0x080031a1
 8003074:	080031a1 	.word	0x080031a1
 8003078:	080030dd 	.word	0x080030dd
 800307c:	080031a1 	.word	0x080031a1
 8003080:	080031a1 	.word	0x080031a1
 8003084:	080031a1 	.word	0x080031a1
 8003088:	0800311f 	.word	0x0800311f
 800308c:	080031a1 	.word	0x080031a1
 8003090:	080031a1 	.word	0x080031a1
 8003094:	080031a1 	.word	0x080031a1
 8003098:	0800315f 	.word	0x0800315f
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	68b9      	ldr	r1, [r7, #8]
 80030a2:	4618      	mov	r0, r3
 80030a4:	f000 f9d0 	bl	8003448 <TIM_OC1_SetConfig>
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	699a      	ldr	r2, [r3, #24]
 80030ae:	68fb      	ldr	r3, [r7, #12]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	f042 0208 	orr.w	r2, r2, #8
 80030b6:	619a      	str	r2, [r3, #24]
 80030b8:	68fb      	ldr	r3, [r7, #12]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	699a      	ldr	r2, [r3, #24]
 80030be:	68fb      	ldr	r3, [r7, #12]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f022 0204 	bic.w	r2, r2, #4
 80030c6:	619a      	str	r2, [r3, #24]
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	681b      	ldr	r3, [r3, #0]
 80030cc:	6999      	ldr	r1, [r3, #24]
 80030ce:	68bb      	ldr	r3, [r7, #8]
 80030d0:	691a      	ldr	r2, [r3, #16]
 80030d2:	68fb      	ldr	r3, [r7, #12]
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	430a      	orrs	r2, r1
 80030d8:	619a      	str	r2, [r3, #24]
 80030da:	e062      	b.n	80031a2 <HAL_TIM_PWM_ConfigChannel+0x16a>
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	68b9      	ldr	r1, [r7, #8]
 80030e2:	4618      	mov	r0, r3
 80030e4:	f000 fa16 	bl	8003514 <TIM_OC2_SetConfig>
 80030e8:	68fb      	ldr	r3, [r7, #12]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	699a      	ldr	r2, [r3, #24]
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80030f6:	619a      	str	r2, [r3, #24]
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	699a      	ldr	r2, [r3, #24]
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003106:	619a      	str	r2, [r3, #24]
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	6999      	ldr	r1, [r3, #24]
 800310e:	68bb      	ldr	r3, [r7, #8]
 8003110:	691b      	ldr	r3, [r3, #16]
 8003112:	021a      	lsls	r2, r3, #8
 8003114:	68fb      	ldr	r3, [r7, #12]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	430a      	orrs	r2, r1
 800311a:	619a      	str	r2, [r3, #24]
 800311c:	e041      	b.n	80031a2 <HAL_TIM_PWM_ConfigChannel+0x16a>
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	68b9      	ldr	r1, [r7, #8]
 8003124:	4618      	mov	r0, r3
 8003126:	f000 fa5f 	bl	80035e8 <TIM_OC3_SetConfig>
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	69da      	ldr	r2, [r3, #28]
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	f042 0208 	orr.w	r2, r2, #8
 8003138:	61da      	str	r2, [r3, #28]
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	69da      	ldr	r2, [r3, #28]
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	f022 0204 	bic.w	r2, r2, #4
 8003148:	61da      	str	r2, [r3, #28]
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	69d9      	ldr	r1, [r3, #28]
 8003150:	68bb      	ldr	r3, [r7, #8]
 8003152:	691a      	ldr	r2, [r3, #16]
 8003154:	68fb      	ldr	r3, [r7, #12]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	430a      	orrs	r2, r1
 800315a:	61da      	str	r2, [r3, #28]
 800315c:	e021      	b.n	80031a2 <HAL_TIM_PWM_ConfigChannel+0x16a>
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	68b9      	ldr	r1, [r7, #8]
 8003164:	4618      	mov	r0, r3
 8003166:	f000 faa9 	bl	80036bc <TIM_OC4_SetConfig>
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	69da      	ldr	r2, [r3, #28]
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	681b      	ldr	r3, [r3, #0]
 8003174:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003178:	61da      	str	r2, [r3, #28]
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	69da      	ldr	r2, [r3, #28]
 8003180:	68fb      	ldr	r3, [r7, #12]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003188:	61da      	str	r2, [r3, #28]
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	69d9      	ldr	r1, [r3, #28]
 8003190:	68bb      	ldr	r3, [r7, #8]
 8003192:	691b      	ldr	r3, [r3, #16]
 8003194:	021a      	lsls	r2, r3, #8
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	430a      	orrs	r2, r1
 800319c:	61da      	str	r2, [r3, #28]
 800319e:	e000      	b.n	80031a2 <HAL_TIM_PWM_ConfigChannel+0x16a>
 80031a0:	bf00      	nop
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	2200      	movs	r2, #0
 80031a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031aa:	2300      	movs	r3, #0
 80031ac:	4618      	mov	r0, r3
 80031ae:	3710      	adds	r7, #16
 80031b0:	46bd      	mov	sp, r7
 80031b2:	bd80      	pop	{r7, pc}

080031b4 <HAL_TIM_ConfigClockSource>:
 80031b4:	b580      	push	{r7, lr}
 80031b6:	b084      	sub	sp, #16
 80031b8:	af00      	add	r7, sp, #0
 80031ba:	6078      	str	r0, [r7, #4]
 80031bc:	6039      	str	r1, [r7, #0]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031c4:	2b01      	cmp	r3, #1
 80031c6:	d101      	bne.n	80031cc <HAL_TIM_ConfigClockSource+0x18>
 80031c8:	2302      	movs	r3, #2
 80031ca:	e0b3      	b.n	8003334 <HAL_TIM_ConfigClockSource+0x180>
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	2201      	movs	r2, #1
 80031d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	2202      	movs	r2, #2
 80031d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	689b      	ldr	r3, [r3, #8]
 80031e2:	60fb      	str	r3, [r7, #12]
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80031ea:	60fb      	str	r3, [r7, #12]
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80031f2:	60fb      	str	r3, [r7, #12]
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	68fa      	ldr	r2, [r7, #12]
 80031fa:	609a      	str	r2, [r3, #8]
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003204:	d03e      	beq.n	8003284 <HAL_TIM_ConfigClockSource+0xd0>
 8003206:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800320a:	f200 8087 	bhi.w	800331c <HAL_TIM_ConfigClockSource+0x168>
 800320e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003212:	f000 8085 	beq.w	8003320 <HAL_TIM_ConfigClockSource+0x16c>
 8003216:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800321a:	d87f      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 800321c:	2b70      	cmp	r3, #112	; 0x70
 800321e:	d01a      	beq.n	8003256 <HAL_TIM_ConfigClockSource+0xa2>
 8003220:	2b70      	cmp	r3, #112	; 0x70
 8003222:	d87b      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 8003224:	2b60      	cmp	r3, #96	; 0x60
 8003226:	d050      	beq.n	80032ca <HAL_TIM_ConfigClockSource+0x116>
 8003228:	2b60      	cmp	r3, #96	; 0x60
 800322a:	d877      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 800322c:	2b50      	cmp	r3, #80	; 0x50
 800322e:	d03c      	beq.n	80032aa <HAL_TIM_ConfigClockSource+0xf6>
 8003230:	2b50      	cmp	r3, #80	; 0x50
 8003232:	d873      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 8003234:	2b40      	cmp	r3, #64	; 0x40
 8003236:	d058      	beq.n	80032ea <HAL_TIM_ConfigClockSource+0x136>
 8003238:	2b40      	cmp	r3, #64	; 0x40
 800323a:	d86f      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 800323c:	2b30      	cmp	r3, #48	; 0x30
 800323e:	d064      	beq.n	800330a <HAL_TIM_ConfigClockSource+0x156>
 8003240:	2b30      	cmp	r3, #48	; 0x30
 8003242:	d86b      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 8003244:	2b20      	cmp	r3, #32
 8003246:	d060      	beq.n	800330a <HAL_TIM_ConfigClockSource+0x156>
 8003248:	2b20      	cmp	r3, #32
 800324a:	d867      	bhi.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 800324c:	2b00      	cmp	r3, #0
 800324e:	d05c      	beq.n	800330a <HAL_TIM_ConfigClockSource+0x156>
 8003250:	2b10      	cmp	r3, #16
 8003252:	d05a      	beq.n	800330a <HAL_TIM_ConfigClockSource+0x156>
 8003254:	e062      	b.n	800331c <HAL_TIM_ConfigClockSource+0x168>
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	6818      	ldr	r0, [r3, #0]
 800325a:	683b      	ldr	r3, [r7, #0]
 800325c:	6899      	ldr	r1, [r3, #8]
 800325e:	683b      	ldr	r3, [r7, #0]
 8003260:	685a      	ldr	r2, [r3, #4]
 8003262:	683b      	ldr	r3, [r7, #0]
 8003264:	68db      	ldr	r3, [r3, #12]
 8003266:	f000 faee 	bl	8003846 <TIM_ETR_SetConfig>
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	689b      	ldr	r3, [r3, #8]
 8003270:	60fb      	str	r3, [r7, #12]
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003278:	60fb      	str	r3, [r7, #12]
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	68fa      	ldr	r2, [r7, #12]
 8003280:	609a      	str	r2, [r3, #8]
 8003282:	e04e      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	6818      	ldr	r0, [r3, #0]
 8003288:	683b      	ldr	r3, [r7, #0]
 800328a:	6899      	ldr	r1, [r3, #8]
 800328c:	683b      	ldr	r3, [r7, #0]
 800328e:	685a      	ldr	r2, [r3, #4]
 8003290:	683b      	ldr	r3, [r7, #0]
 8003292:	68db      	ldr	r3, [r3, #12]
 8003294:	f000 fad7 	bl	8003846 <TIM_ETR_SetConfig>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	689a      	ldr	r2, [r3, #8]
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	681b      	ldr	r3, [r3, #0]
 80032a2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80032a6:	609a      	str	r2, [r3, #8]
 80032a8:	e03b      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	6818      	ldr	r0, [r3, #0]
 80032ae:	683b      	ldr	r3, [r7, #0]
 80032b0:	6859      	ldr	r1, [r3, #4]
 80032b2:	683b      	ldr	r3, [r7, #0]
 80032b4:	68db      	ldr	r3, [r3, #12]
 80032b6:	461a      	mov	r2, r3
 80032b8:	f000 fa4e 	bl	8003758 <TIM_TI1_ConfigInputStage>
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	2150      	movs	r1, #80	; 0x50
 80032c2:	4618      	mov	r0, r3
 80032c4:	f000 faa5 	bl	8003812 <TIM_ITRx_SetConfig>
 80032c8:	e02b      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	6818      	ldr	r0, [r3, #0]
 80032ce:	683b      	ldr	r3, [r7, #0]
 80032d0:	6859      	ldr	r1, [r3, #4]
 80032d2:	683b      	ldr	r3, [r7, #0]
 80032d4:	68db      	ldr	r3, [r3, #12]
 80032d6:	461a      	mov	r2, r3
 80032d8:	f000 fa6c 	bl	80037b4 <TIM_TI2_ConfigInputStage>
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	2160      	movs	r1, #96	; 0x60
 80032e2:	4618      	mov	r0, r3
 80032e4:	f000 fa95 	bl	8003812 <TIM_ITRx_SetConfig>
 80032e8:	e01b      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	6818      	ldr	r0, [r3, #0]
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	6859      	ldr	r1, [r3, #4]
 80032f2:	683b      	ldr	r3, [r7, #0]
 80032f4:	68db      	ldr	r3, [r3, #12]
 80032f6:	461a      	mov	r2, r3
 80032f8:	f000 fa2e 	bl	8003758 <TIM_TI1_ConfigInputStage>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	2140      	movs	r1, #64	; 0x40
 8003302:	4618      	mov	r0, r3
 8003304:	f000 fa85 	bl	8003812 <TIM_ITRx_SetConfig>
 8003308:	e00b      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681a      	ldr	r2, [r3, #0]
 800330e:	683b      	ldr	r3, [r7, #0]
 8003310:	681b      	ldr	r3, [r3, #0]
 8003312:	4619      	mov	r1, r3
 8003314:	4610      	mov	r0, r2
 8003316:	f000 fa7c 	bl	8003812 <TIM_ITRx_SetConfig>
 800331a:	e002      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 800331c:	bf00      	nop
 800331e:	e000      	b.n	8003322 <HAL_TIM_ConfigClockSource+0x16e>
 8003320:	bf00      	nop
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	2201      	movs	r2, #1
 8003326:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	2200      	movs	r2, #0
 800332e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003332:	2300      	movs	r3, #0
 8003334:	4618      	mov	r0, r3
 8003336:	3710      	adds	r7, #16
 8003338:	46bd      	mov	sp, r7
 800333a:	bd80      	pop	{r7, pc}

0800333c <HAL_TIM_OC_DelayElapsedCallback>:
 800333c:	b480      	push	{r7}
 800333e:	b083      	sub	sp, #12
 8003340:	af00      	add	r7, sp, #0
 8003342:	6078      	str	r0, [r7, #4]
 8003344:	bf00      	nop
 8003346:	370c      	adds	r7, #12
 8003348:	46bd      	mov	sp, r7
 800334a:	bc80      	pop	{r7}
 800334c:	4770      	bx	lr

0800334e <HAL_TIM_IC_CaptureCallback>:
 800334e:	b480      	push	{r7}
 8003350:	b083      	sub	sp, #12
 8003352:	af00      	add	r7, sp, #0
 8003354:	6078      	str	r0, [r7, #4]
 8003356:	bf00      	nop
 8003358:	370c      	adds	r7, #12
 800335a:	46bd      	mov	sp, r7
 800335c:	bc80      	pop	{r7}
 800335e:	4770      	bx	lr

08003360 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003360:	b480      	push	{r7}
 8003362:	b083      	sub	sp, #12
 8003364:	af00      	add	r7, sp, #0
 8003366:	6078      	str	r0, [r7, #4]
 8003368:	bf00      	nop
 800336a:	370c      	adds	r7, #12
 800336c:	46bd      	mov	sp, r7
 800336e:	bc80      	pop	{r7}
 8003370:	4770      	bx	lr

08003372 <HAL_TIM_TriggerCallback>:
 8003372:	b480      	push	{r7}
 8003374:	b083      	sub	sp, #12
 8003376:	af00      	add	r7, sp, #0
 8003378:	6078      	str	r0, [r7, #4]
 800337a:	bf00      	nop
 800337c:	370c      	adds	r7, #12
 800337e:	46bd      	mov	sp, r7
 8003380:	bc80      	pop	{r7}
 8003382:	4770      	bx	lr

08003384 <TIM_Base_SetConfig>:
 8003384:	b480      	push	{r7}
 8003386:	b085      	sub	sp, #20
 8003388:	af00      	add	r7, sp, #0
 800338a:	6078      	str	r0, [r7, #4]
 800338c:	6039      	str	r1, [r7, #0]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	60fb      	str	r3, [r7, #12]
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	4a29      	ldr	r2, [pc, #164]	; (800343c <TIM_Base_SetConfig+0xb8>)
 8003398:	4293      	cmp	r3, r2
 800339a:	d00b      	beq.n	80033b4 <TIM_Base_SetConfig+0x30>
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80033a2:	d007      	beq.n	80033b4 <TIM_Base_SetConfig+0x30>
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	4a26      	ldr	r2, [pc, #152]	; (8003440 <TIM_Base_SetConfig+0xbc>)
 80033a8:	4293      	cmp	r3, r2
 80033aa:	d003      	beq.n	80033b4 <TIM_Base_SetConfig+0x30>
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	4a25      	ldr	r2, [pc, #148]	; (8003444 <TIM_Base_SetConfig+0xc0>)
 80033b0:	4293      	cmp	r3, r2
 80033b2:	d108      	bne.n	80033c6 <TIM_Base_SetConfig+0x42>
 80033b4:	68fb      	ldr	r3, [r7, #12]
 80033b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80033ba:	60fb      	str	r3, [r7, #12]
 80033bc:	683b      	ldr	r3, [r7, #0]
 80033be:	685b      	ldr	r3, [r3, #4]
 80033c0:	68fa      	ldr	r2, [r7, #12]
 80033c2:	4313      	orrs	r3, r2
 80033c4:	60fb      	str	r3, [r7, #12]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	4a1c      	ldr	r2, [pc, #112]	; (800343c <TIM_Base_SetConfig+0xb8>)
 80033ca:	4293      	cmp	r3, r2
 80033cc:	d00b      	beq.n	80033e6 <TIM_Base_SetConfig+0x62>
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80033d4:	d007      	beq.n	80033e6 <TIM_Base_SetConfig+0x62>
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	4a19      	ldr	r2, [pc, #100]	; (8003440 <TIM_Base_SetConfig+0xbc>)
 80033da:	4293      	cmp	r3, r2
 80033dc:	d003      	beq.n	80033e6 <TIM_Base_SetConfig+0x62>
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	4a18      	ldr	r2, [pc, #96]	; (8003444 <TIM_Base_SetConfig+0xc0>)
 80033e2:	4293      	cmp	r3, r2
 80033e4:	d108      	bne.n	80033f8 <TIM_Base_SetConfig+0x74>
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80033ec:	60fb      	str	r3, [r7, #12]
 80033ee:	683b      	ldr	r3, [r7, #0]
 80033f0:	68db      	ldr	r3, [r3, #12]
 80033f2:	68fa      	ldr	r2, [r7, #12]
 80033f4:	4313      	orrs	r3, r2
 80033f6:	60fb      	str	r3, [r7, #12]
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80033fe:	683b      	ldr	r3, [r7, #0]
 8003400:	695b      	ldr	r3, [r3, #20]
 8003402:	4313      	orrs	r3, r2
 8003404:	60fb      	str	r3, [r7, #12]
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	68fa      	ldr	r2, [r7, #12]
 800340a:	601a      	str	r2, [r3, #0]
 800340c:	683b      	ldr	r3, [r7, #0]
 800340e:	689a      	ldr	r2, [r3, #8]
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	62da      	str	r2, [r3, #44]	; 0x2c
 8003414:	683b      	ldr	r3, [r7, #0]
 8003416:	681a      	ldr	r2, [r3, #0]
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	629a      	str	r2, [r3, #40]	; 0x28
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	4a07      	ldr	r2, [pc, #28]	; (800343c <TIM_Base_SetConfig+0xb8>)
 8003420:	4293      	cmp	r3, r2
 8003422:	d103      	bne.n	800342c <TIM_Base_SetConfig+0xa8>
 8003424:	683b      	ldr	r3, [r7, #0]
 8003426:	691a      	ldr	r2, [r3, #16]
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	631a      	str	r2, [r3, #48]	; 0x30
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	2201      	movs	r2, #1
 8003430:	615a      	str	r2, [r3, #20]
 8003432:	bf00      	nop
 8003434:	3714      	adds	r7, #20
 8003436:	46bd      	mov	sp, r7
 8003438:	bc80      	pop	{r7}
 800343a:	4770      	bx	lr
 800343c:	40012c00 	.word	0x40012c00
 8003440:	40000400 	.word	0x40000400
 8003444:	40000800 	.word	0x40000800

08003448 <TIM_OC1_SetConfig>:
 8003448:	b480      	push	{r7}
 800344a:	b087      	sub	sp, #28
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
 8003450:	6039      	str	r1, [r7, #0]
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	6a1b      	ldr	r3, [r3, #32]
 8003456:	f023 0201 	bic.w	r2, r3, #1
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	621a      	str	r2, [r3, #32]
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	6a1b      	ldr	r3, [r3, #32]
 8003462:	617b      	str	r3, [r7, #20]
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	685b      	ldr	r3, [r3, #4]
 8003468:	613b      	str	r3, [r7, #16]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	699b      	ldr	r3, [r3, #24]
 800346e:	60fb      	str	r3, [r7, #12]
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003476:	60fb      	str	r3, [r7, #12]
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	f023 0303 	bic.w	r3, r3, #3
 800347e:	60fb      	str	r3, [r7, #12]
 8003480:	683b      	ldr	r3, [r7, #0]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	68fa      	ldr	r2, [r7, #12]
 8003486:	4313      	orrs	r3, r2
 8003488:	60fb      	str	r3, [r7, #12]
 800348a:	697b      	ldr	r3, [r7, #20]
 800348c:	f023 0302 	bic.w	r3, r3, #2
 8003490:	617b      	str	r3, [r7, #20]
 8003492:	683b      	ldr	r3, [r7, #0]
 8003494:	689b      	ldr	r3, [r3, #8]
 8003496:	697a      	ldr	r2, [r7, #20]
 8003498:	4313      	orrs	r3, r2
 800349a:	617b      	str	r3, [r7, #20]
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	4a1c      	ldr	r2, [pc, #112]	; (8003510 <TIM_OC1_SetConfig+0xc8>)
 80034a0:	4293      	cmp	r3, r2
 80034a2:	d10c      	bne.n	80034be <TIM_OC1_SetConfig+0x76>
 80034a4:	697b      	ldr	r3, [r7, #20]
 80034a6:	f023 0308 	bic.w	r3, r3, #8
 80034aa:	617b      	str	r3, [r7, #20]
 80034ac:	683b      	ldr	r3, [r7, #0]
 80034ae:	68db      	ldr	r3, [r3, #12]
 80034b0:	697a      	ldr	r2, [r7, #20]
 80034b2:	4313      	orrs	r3, r2
 80034b4:	617b      	str	r3, [r7, #20]
 80034b6:	697b      	ldr	r3, [r7, #20]
 80034b8:	f023 0304 	bic.w	r3, r3, #4
 80034bc:	617b      	str	r3, [r7, #20]
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	4a13      	ldr	r2, [pc, #76]	; (8003510 <TIM_OC1_SetConfig+0xc8>)
 80034c2:	4293      	cmp	r3, r2
 80034c4:	d111      	bne.n	80034ea <TIM_OC1_SetConfig+0xa2>
 80034c6:	693b      	ldr	r3, [r7, #16]
 80034c8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80034cc:	613b      	str	r3, [r7, #16]
 80034ce:	693b      	ldr	r3, [r7, #16]
 80034d0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80034d4:	613b      	str	r3, [r7, #16]
 80034d6:	683b      	ldr	r3, [r7, #0]
 80034d8:	695b      	ldr	r3, [r3, #20]
 80034da:	693a      	ldr	r2, [r7, #16]
 80034dc:	4313      	orrs	r3, r2
 80034de:	613b      	str	r3, [r7, #16]
 80034e0:	683b      	ldr	r3, [r7, #0]
 80034e2:	699b      	ldr	r3, [r3, #24]
 80034e4:	693a      	ldr	r2, [r7, #16]
 80034e6:	4313      	orrs	r3, r2
 80034e8:	613b      	str	r3, [r7, #16]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	693a      	ldr	r2, [r7, #16]
 80034ee:	605a      	str	r2, [r3, #4]
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	68fa      	ldr	r2, [r7, #12]
 80034f4:	619a      	str	r2, [r3, #24]
 80034f6:	683b      	ldr	r3, [r7, #0]
 80034f8:	685a      	ldr	r2, [r3, #4]
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	635a      	str	r2, [r3, #52]	; 0x34
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	697a      	ldr	r2, [r7, #20]
 8003502:	621a      	str	r2, [r3, #32]
 8003504:	bf00      	nop
 8003506:	371c      	adds	r7, #28
 8003508:	46bd      	mov	sp, r7
 800350a:	bc80      	pop	{r7}
 800350c:	4770      	bx	lr
 800350e:	bf00      	nop
 8003510:	40012c00 	.word	0x40012c00

08003514 <TIM_OC2_SetConfig>:
 8003514:	b480      	push	{r7}
 8003516:	b087      	sub	sp, #28
 8003518:	af00      	add	r7, sp, #0
 800351a:	6078      	str	r0, [r7, #4]
 800351c:	6039      	str	r1, [r7, #0]
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	6a1b      	ldr	r3, [r3, #32]
 8003522:	f023 0210 	bic.w	r2, r3, #16
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	621a      	str	r2, [r3, #32]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6a1b      	ldr	r3, [r3, #32]
 800352e:	617b      	str	r3, [r7, #20]
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	685b      	ldr	r3, [r3, #4]
 8003534:	613b      	str	r3, [r7, #16]
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	699b      	ldr	r3, [r3, #24]
 800353a:	60fb      	str	r3, [r7, #12]
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003542:	60fb      	str	r3, [r7, #12]
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800354a:	60fb      	str	r3, [r7, #12]
 800354c:	683b      	ldr	r3, [r7, #0]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	021b      	lsls	r3, r3, #8
 8003552:	68fa      	ldr	r2, [r7, #12]
 8003554:	4313      	orrs	r3, r2
 8003556:	60fb      	str	r3, [r7, #12]
 8003558:	697b      	ldr	r3, [r7, #20]
 800355a:	f023 0320 	bic.w	r3, r3, #32
 800355e:	617b      	str	r3, [r7, #20]
 8003560:	683b      	ldr	r3, [r7, #0]
 8003562:	689b      	ldr	r3, [r3, #8]
 8003564:	011b      	lsls	r3, r3, #4
 8003566:	697a      	ldr	r2, [r7, #20]
 8003568:	4313      	orrs	r3, r2
 800356a:	617b      	str	r3, [r7, #20]
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	4a1d      	ldr	r2, [pc, #116]	; (80035e4 <TIM_OC2_SetConfig+0xd0>)
 8003570:	4293      	cmp	r3, r2
 8003572:	d10d      	bne.n	8003590 <TIM_OC2_SetConfig+0x7c>
 8003574:	697b      	ldr	r3, [r7, #20]
 8003576:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800357a:	617b      	str	r3, [r7, #20]
 800357c:	683b      	ldr	r3, [r7, #0]
 800357e:	68db      	ldr	r3, [r3, #12]
 8003580:	011b      	lsls	r3, r3, #4
 8003582:	697a      	ldr	r2, [r7, #20]
 8003584:	4313      	orrs	r3, r2
 8003586:	617b      	str	r3, [r7, #20]
 8003588:	697b      	ldr	r3, [r7, #20]
 800358a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800358e:	617b      	str	r3, [r7, #20]
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	4a14      	ldr	r2, [pc, #80]	; (80035e4 <TIM_OC2_SetConfig+0xd0>)
 8003594:	4293      	cmp	r3, r2
 8003596:	d113      	bne.n	80035c0 <TIM_OC2_SetConfig+0xac>
 8003598:	693b      	ldr	r3, [r7, #16]
 800359a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800359e:	613b      	str	r3, [r7, #16]
 80035a0:	693b      	ldr	r3, [r7, #16]
 80035a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80035a6:	613b      	str	r3, [r7, #16]
 80035a8:	683b      	ldr	r3, [r7, #0]
 80035aa:	695b      	ldr	r3, [r3, #20]
 80035ac:	009b      	lsls	r3, r3, #2
 80035ae:	693a      	ldr	r2, [r7, #16]
 80035b0:	4313      	orrs	r3, r2
 80035b2:	613b      	str	r3, [r7, #16]
 80035b4:	683b      	ldr	r3, [r7, #0]
 80035b6:	699b      	ldr	r3, [r3, #24]
 80035b8:	009b      	lsls	r3, r3, #2
 80035ba:	693a      	ldr	r2, [r7, #16]
 80035bc:	4313      	orrs	r3, r2
 80035be:	613b      	str	r3, [r7, #16]
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	693a      	ldr	r2, [r7, #16]
 80035c4:	605a      	str	r2, [r3, #4]
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	68fa      	ldr	r2, [r7, #12]
 80035ca:	619a      	str	r2, [r3, #24]
 80035cc:	683b      	ldr	r3, [r7, #0]
 80035ce:	685a      	ldr	r2, [r3, #4]
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	639a      	str	r2, [r3, #56]	; 0x38
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	697a      	ldr	r2, [r7, #20]
 80035d8:	621a      	str	r2, [r3, #32]
 80035da:	bf00      	nop
 80035dc:	371c      	adds	r7, #28
 80035de:	46bd      	mov	sp, r7
 80035e0:	bc80      	pop	{r7}
 80035e2:	4770      	bx	lr
 80035e4:	40012c00 	.word	0x40012c00

080035e8 <TIM_OC3_SetConfig>:
 80035e8:	b480      	push	{r7}
 80035ea:	b087      	sub	sp, #28
 80035ec:	af00      	add	r7, sp, #0
 80035ee:	6078      	str	r0, [r7, #4]
 80035f0:	6039      	str	r1, [r7, #0]
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	6a1b      	ldr	r3, [r3, #32]
 80035f6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	621a      	str	r2, [r3, #32]
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	6a1b      	ldr	r3, [r3, #32]
 8003602:	617b      	str	r3, [r7, #20]
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	685b      	ldr	r3, [r3, #4]
 8003608:	613b      	str	r3, [r7, #16]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	69db      	ldr	r3, [r3, #28]
 800360e:	60fb      	str	r3, [r7, #12]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003616:	60fb      	str	r3, [r7, #12]
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	f023 0303 	bic.w	r3, r3, #3
 800361e:	60fb      	str	r3, [r7, #12]
 8003620:	683b      	ldr	r3, [r7, #0]
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	68fa      	ldr	r2, [r7, #12]
 8003626:	4313      	orrs	r3, r2
 8003628:	60fb      	str	r3, [r7, #12]
 800362a:	697b      	ldr	r3, [r7, #20]
 800362c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003630:	617b      	str	r3, [r7, #20]
 8003632:	683b      	ldr	r3, [r7, #0]
 8003634:	689b      	ldr	r3, [r3, #8]
 8003636:	021b      	lsls	r3, r3, #8
 8003638:	697a      	ldr	r2, [r7, #20]
 800363a:	4313      	orrs	r3, r2
 800363c:	617b      	str	r3, [r7, #20]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	4a1d      	ldr	r2, [pc, #116]	; (80036b8 <TIM_OC3_SetConfig+0xd0>)
 8003642:	4293      	cmp	r3, r2
 8003644:	d10d      	bne.n	8003662 <TIM_OC3_SetConfig+0x7a>
 8003646:	697b      	ldr	r3, [r7, #20]
 8003648:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800364c:	617b      	str	r3, [r7, #20]
 800364e:	683b      	ldr	r3, [r7, #0]
 8003650:	68db      	ldr	r3, [r3, #12]
 8003652:	021b      	lsls	r3, r3, #8
 8003654:	697a      	ldr	r2, [r7, #20]
 8003656:	4313      	orrs	r3, r2
 8003658:	617b      	str	r3, [r7, #20]
 800365a:	697b      	ldr	r3, [r7, #20]
 800365c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003660:	617b      	str	r3, [r7, #20]
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	4a14      	ldr	r2, [pc, #80]	; (80036b8 <TIM_OC3_SetConfig+0xd0>)
 8003666:	4293      	cmp	r3, r2
 8003668:	d113      	bne.n	8003692 <TIM_OC3_SetConfig+0xaa>
 800366a:	693b      	ldr	r3, [r7, #16]
 800366c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003670:	613b      	str	r3, [r7, #16]
 8003672:	693b      	ldr	r3, [r7, #16]
 8003674:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003678:	613b      	str	r3, [r7, #16]
 800367a:	683b      	ldr	r3, [r7, #0]
 800367c:	695b      	ldr	r3, [r3, #20]
 800367e:	011b      	lsls	r3, r3, #4
 8003680:	693a      	ldr	r2, [r7, #16]
 8003682:	4313      	orrs	r3, r2
 8003684:	613b      	str	r3, [r7, #16]
 8003686:	683b      	ldr	r3, [r7, #0]
 8003688:	699b      	ldr	r3, [r3, #24]
 800368a:	011b      	lsls	r3, r3, #4
 800368c:	693a      	ldr	r2, [r7, #16]
 800368e:	4313      	orrs	r3, r2
 8003690:	613b      	str	r3, [r7, #16]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	693a      	ldr	r2, [r7, #16]
 8003696:	605a      	str	r2, [r3, #4]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	68fa      	ldr	r2, [r7, #12]
 800369c:	61da      	str	r2, [r3, #28]
 800369e:	683b      	ldr	r3, [r7, #0]
 80036a0:	685a      	ldr	r2, [r3, #4]
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	63da      	str	r2, [r3, #60]	; 0x3c
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	697a      	ldr	r2, [r7, #20]
 80036aa:	621a      	str	r2, [r3, #32]
 80036ac:	bf00      	nop
 80036ae:	371c      	adds	r7, #28
 80036b0:	46bd      	mov	sp, r7
 80036b2:	bc80      	pop	{r7}
 80036b4:	4770      	bx	lr
 80036b6:	bf00      	nop
 80036b8:	40012c00 	.word	0x40012c00

080036bc <TIM_OC4_SetConfig>:
 80036bc:	b480      	push	{r7}
 80036be:	b087      	sub	sp, #28
 80036c0:	af00      	add	r7, sp, #0
 80036c2:	6078      	str	r0, [r7, #4]
 80036c4:	6039      	str	r1, [r7, #0]
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	6a1b      	ldr	r3, [r3, #32]
 80036ca:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	621a      	str	r2, [r3, #32]
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	6a1b      	ldr	r3, [r3, #32]
 80036d6:	613b      	str	r3, [r7, #16]
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	685b      	ldr	r3, [r3, #4]
 80036dc:	617b      	str	r3, [r7, #20]
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	69db      	ldr	r3, [r3, #28]
 80036e2:	60fb      	str	r3, [r7, #12]
 80036e4:	68fb      	ldr	r3, [r7, #12]
 80036e6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80036ea:	60fb      	str	r3, [r7, #12]
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80036f2:	60fb      	str	r3, [r7, #12]
 80036f4:	683b      	ldr	r3, [r7, #0]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	021b      	lsls	r3, r3, #8
 80036fa:	68fa      	ldr	r2, [r7, #12]
 80036fc:	4313      	orrs	r3, r2
 80036fe:	60fb      	str	r3, [r7, #12]
 8003700:	693b      	ldr	r3, [r7, #16]
 8003702:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003706:	613b      	str	r3, [r7, #16]
 8003708:	683b      	ldr	r3, [r7, #0]
 800370a:	689b      	ldr	r3, [r3, #8]
 800370c:	031b      	lsls	r3, r3, #12
 800370e:	693a      	ldr	r2, [r7, #16]
 8003710:	4313      	orrs	r3, r2
 8003712:	613b      	str	r3, [r7, #16]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	4a0f      	ldr	r2, [pc, #60]	; (8003754 <TIM_OC4_SetConfig+0x98>)
 8003718:	4293      	cmp	r3, r2
 800371a:	d109      	bne.n	8003730 <TIM_OC4_SetConfig+0x74>
 800371c:	697b      	ldr	r3, [r7, #20]
 800371e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003722:	617b      	str	r3, [r7, #20]
 8003724:	683b      	ldr	r3, [r7, #0]
 8003726:	695b      	ldr	r3, [r3, #20]
 8003728:	019b      	lsls	r3, r3, #6
 800372a:	697a      	ldr	r2, [r7, #20]
 800372c:	4313      	orrs	r3, r2
 800372e:	617b      	str	r3, [r7, #20]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	697a      	ldr	r2, [r7, #20]
 8003734:	605a      	str	r2, [r3, #4]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	68fa      	ldr	r2, [r7, #12]
 800373a:	61da      	str	r2, [r3, #28]
 800373c:	683b      	ldr	r3, [r7, #0]
 800373e:	685a      	ldr	r2, [r3, #4]
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	641a      	str	r2, [r3, #64]	; 0x40
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	693a      	ldr	r2, [r7, #16]
 8003748:	621a      	str	r2, [r3, #32]
 800374a:	bf00      	nop
 800374c:	371c      	adds	r7, #28
 800374e:	46bd      	mov	sp, r7
 8003750:	bc80      	pop	{r7}
 8003752:	4770      	bx	lr
 8003754:	40012c00 	.word	0x40012c00

08003758 <TIM_TI1_ConfigInputStage>:
 8003758:	b480      	push	{r7}
 800375a:	b087      	sub	sp, #28
 800375c:	af00      	add	r7, sp, #0
 800375e:	60f8      	str	r0, [r7, #12]
 8003760:	60b9      	str	r1, [r7, #8]
 8003762:	607a      	str	r2, [r7, #4]
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	6a1b      	ldr	r3, [r3, #32]
 8003768:	617b      	str	r3, [r7, #20]
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	6a1b      	ldr	r3, [r3, #32]
 800376e:	f023 0201 	bic.w	r2, r3, #1
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	621a      	str	r2, [r3, #32]
 8003776:	68fb      	ldr	r3, [r7, #12]
 8003778:	699b      	ldr	r3, [r3, #24]
 800377a:	613b      	str	r3, [r7, #16]
 800377c:	693b      	ldr	r3, [r7, #16]
 800377e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003782:	613b      	str	r3, [r7, #16]
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	011b      	lsls	r3, r3, #4
 8003788:	693a      	ldr	r2, [r7, #16]
 800378a:	4313      	orrs	r3, r2
 800378c:	613b      	str	r3, [r7, #16]
 800378e:	697b      	ldr	r3, [r7, #20]
 8003790:	f023 030a 	bic.w	r3, r3, #10
 8003794:	617b      	str	r3, [r7, #20]
 8003796:	697a      	ldr	r2, [r7, #20]
 8003798:	68bb      	ldr	r3, [r7, #8]
 800379a:	4313      	orrs	r3, r2
 800379c:	617b      	str	r3, [r7, #20]
 800379e:	68fb      	ldr	r3, [r7, #12]
 80037a0:	693a      	ldr	r2, [r7, #16]
 80037a2:	619a      	str	r2, [r3, #24]
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	697a      	ldr	r2, [r7, #20]
 80037a8:	621a      	str	r2, [r3, #32]
 80037aa:	bf00      	nop
 80037ac:	371c      	adds	r7, #28
 80037ae:	46bd      	mov	sp, r7
 80037b0:	bc80      	pop	{r7}
 80037b2:	4770      	bx	lr

080037b4 <TIM_TI2_ConfigInputStage>:
 80037b4:	b480      	push	{r7}
 80037b6:	b087      	sub	sp, #28
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	60f8      	str	r0, [r7, #12]
 80037bc:	60b9      	str	r1, [r7, #8]
 80037be:	607a      	str	r2, [r7, #4]
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	6a1b      	ldr	r3, [r3, #32]
 80037c4:	f023 0210 	bic.w	r2, r3, #16
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	621a      	str	r2, [r3, #32]
 80037cc:	68fb      	ldr	r3, [r7, #12]
 80037ce:	699b      	ldr	r3, [r3, #24]
 80037d0:	617b      	str	r3, [r7, #20]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	6a1b      	ldr	r3, [r3, #32]
 80037d6:	613b      	str	r3, [r7, #16]
 80037d8:	697b      	ldr	r3, [r7, #20]
 80037da:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80037de:	617b      	str	r3, [r7, #20]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	031b      	lsls	r3, r3, #12
 80037e4:	697a      	ldr	r2, [r7, #20]
 80037e6:	4313      	orrs	r3, r2
 80037e8:	617b      	str	r3, [r7, #20]
 80037ea:	693b      	ldr	r3, [r7, #16]
 80037ec:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80037f0:	613b      	str	r3, [r7, #16]
 80037f2:	68bb      	ldr	r3, [r7, #8]
 80037f4:	011b      	lsls	r3, r3, #4
 80037f6:	693a      	ldr	r2, [r7, #16]
 80037f8:	4313      	orrs	r3, r2
 80037fa:	613b      	str	r3, [r7, #16]
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	697a      	ldr	r2, [r7, #20]
 8003800:	619a      	str	r2, [r3, #24]
 8003802:	68fb      	ldr	r3, [r7, #12]
 8003804:	693a      	ldr	r2, [r7, #16]
 8003806:	621a      	str	r2, [r3, #32]
 8003808:	bf00      	nop
 800380a:	371c      	adds	r7, #28
 800380c:	46bd      	mov	sp, r7
 800380e:	bc80      	pop	{r7}
 8003810:	4770      	bx	lr

08003812 <TIM_ITRx_SetConfig>:
 8003812:	b480      	push	{r7}
 8003814:	b085      	sub	sp, #20
 8003816:	af00      	add	r7, sp, #0
 8003818:	6078      	str	r0, [r7, #4]
 800381a:	6039      	str	r1, [r7, #0]
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	689b      	ldr	r3, [r3, #8]
 8003820:	60fb      	str	r3, [r7, #12]
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003828:	60fb      	str	r3, [r7, #12]
 800382a:	683a      	ldr	r2, [r7, #0]
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	4313      	orrs	r3, r2
 8003830:	f043 0307 	orr.w	r3, r3, #7
 8003834:	60fb      	str	r3, [r7, #12]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	68fa      	ldr	r2, [r7, #12]
 800383a:	609a      	str	r2, [r3, #8]
 800383c:	bf00      	nop
 800383e:	3714      	adds	r7, #20
 8003840:	46bd      	mov	sp, r7
 8003842:	bc80      	pop	{r7}
 8003844:	4770      	bx	lr

08003846 <TIM_ETR_SetConfig>:
 8003846:	b480      	push	{r7}
 8003848:	b087      	sub	sp, #28
 800384a:	af00      	add	r7, sp, #0
 800384c:	60f8      	str	r0, [r7, #12]
 800384e:	60b9      	str	r1, [r7, #8]
 8003850:	607a      	str	r2, [r7, #4]
 8003852:	603b      	str	r3, [r7, #0]
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	689b      	ldr	r3, [r3, #8]
 8003858:	617b      	str	r3, [r7, #20]
 800385a:	697b      	ldr	r3, [r7, #20]
 800385c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003860:	617b      	str	r3, [r7, #20]
 8003862:	683b      	ldr	r3, [r7, #0]
 8003864:	021a      	lsls	r2, r3, #8
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	431a      	orrs	r2, r3
 800386a:	68bb      	ldr	r3, [r7, #8]
 800386c:	4313      	orrs	r3, r2
 800386e:	697a      	ldr	r2, [r7, #20]
 8003870:	4313      	orrs	r3, r2
 8003872:	617b      	str	r3, [r7, #20]
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	697a      	ldr	r2, [r7, #20]
 8003878:	609a      	str	r2, [r3, #8]
 800387a:	bf00      	nop
 800387c:	371c      	adds	r7, #28
 800387e:	46bd      	mov	sp, r7
 8003880:	bc80      	pop	{r7}
 8003882:	4770      	bx	lr

08003884 <TIM_CCxChannelCmd>:
 8003884:	b480      	push	{r7}
 8003886:	b087      	sub	sp, #28
 8003888:	af00      	add	r7, sp, #0
 800388a:	60f8      	str	r0, [r7, #12]
 800388c:	60b9      	str	r1, [r7, #8]
 800388e:	607a      	str	r2, [r7, #4]
 8003890:	68bb      	ldr	r3, [r7, #8]
 8003892:	f003 031f 	and.w	r3, r3, #31
 8003896:	2201      	movs	r2, #1
 8003898:	fa02 f303 	lsl.w	r3, r2, r3
 800389c:	617b      	str	r3, [r7, #20]
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	6a1a      	ldr	r2, [r3, #32]
 80038a2:	697b      	ldr	r3, [r7, #20]
 80038a4:	43db      	mvns	r3, r3
 80038a6:	401a      	ands	r2, r3
 80038a8:	68fb      	ldr	r3, [r7, #12]
 80038aa:	621a      	str	r2, [r3, #32]
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	6a1a      	ldr	r2, [r3, #32]
 80038b0:	68bb      	ldr	r3, [r7, #8]
 80038b2:	f003 031f 	and.w	r3, r3, #31
 80038b6:	6879      	ldr	r1, [r7, #4]
 80038b8:	fa01 f303 	lsl.w	r3, r1, r3
 80038bc:	431a      	orrs	r2, r3
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	621a      	str	r2, [r3, #32]
 80038c2:	bf00      	nop
 80038c4:	371c      	adds	r7, #28
 80038c6:	46bd      	mov	sp, r7
 80038c8:	bc80      	pop	{r7}
 80038ca:	4770      	bx	lr

080038cc <HAL_TIMEx_MasterConfigSynchronization>:
 80038cc:	b480      	push	{r7}
 80038ce:	b085      	sub	sp, #20
 80038d0:	af00      	add	r7, sp, #0
 80038d2:	6078      	str	r0, [r7, #4]
 80038d4:	6039      	str	r1, [r7, #0]
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80038dc:	2b01      	cmp	r3, #1
 80038de:	d101      	bne.n	80038e4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80038e0:	2302      	movs	r3, #2
 80038e2:	e046      	b.n	8003972 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	2201      	movs	r2, #1
 80038e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	2202      	movs	r2, #2
 80038f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	685b      	ldr	r3, [r3, #4]
 80038fa:	60fb      	str	r3, [r7, #12]
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	689b      	ldr	r3, [r3, #8]
 8003902:	60bb      	str	r3, [r7, #8]
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800390a:	60fb      	str	r3, [r7, #12]
 800390c:	683b      	ldr	r3, [r7, #0]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	68fa      	ldr	r2, [r7, #12]
 8003912:	4313      	orrs	r3, r2
 8003914:	60fb      	str	r3, [r7, #12]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	68fa      	ldr	r2, [r7, #12]
 800391c:	605a      	str	r2, [r3, #4]
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	4a16      	ldr	r2, [pc, #88]	; (800397c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003924:	4293      	cmp	r3, r2
 8003926:	d00e      	beq.n	8003946 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003930:	d009      	beq.n	8003946 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	4a12      	ldr	r2, [pc, #72]	; (8003980 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003938:	4293      	cmp	r3, r2
 800393a:	d004      	beq.n	8003946 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	4a10      	ldr	r2, [pc, #64]	; (8003984 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003942:	4293      	cmp	r3, r2
 8003944:	d10c      	bne.n	8003960 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003946:	68bb      	ldr	r3, [r7, #8]
 8003948:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800394c:	60bb      	str	r3, [r7, #8]
 800394e:	683b      	ldr	r3, [r7, #0]
 8003950:	685b      	ldr	r3, [r3, #4]
 8003952:	68ba      	ldr	r2, [r7, #8]
 8003954:	4313      	orrs	r3, r2
 8003956:	60bb      	str	r3, [r7, #8]
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	68ba      	ldr	r2, [r7, #8]
 800395e:	609a      	str	r2, [r3, #8]
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	2201      	movs	r2, #1
 8003964:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	2200      	movs	r2, #0
 800396c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003970:	2300      	movs	r3, #0
 8003972:	4618      	mov	r0, r3
 8003974:	3714      	adds	r7, #20
 8003976:	46bd      	mov	sp, r7
 8003978:	bc80      	pop	{r7}
 800397a:	4770      	bx	lr
 800397c:	40012c00 	.word	0x40012c00
 8003980:	40000400 	.word	0x40000400
 8003984:	40000800 	.word	0x40000800

08003988 <HAL_TIMEx_CommutCallback>:
 8003988:	b480      	push	{r7}
 800398a:	b083      	sub	sp, #12
 800398c:	af00      	add	r7, sp, #0
 800398e:	6078      	str	r0, [r7, #4]
 8003990:	bf00      	nop
 8003992:	370c      	adds	r7, #12
 8003994:	46bd      	mov	sp, r7
 8003996:	bc80      	pop	{r7}
 8003998:	4770      	bx	lr

0800399a <HAL_TIMEx_BreakCallback>:
 800399a:	b480      	push	{r7}
 800399c:	b083      	sub	sp, #12
 800399e:	af00      	add	r7, sp, #0
 80039a0:	6078      	str	r0, [r7, #4]
 80039a2:	bf00      	nop
 80039a4:	370c      	adds	r7, #12
 80039a6:	46bd      	mov	sp, r7
 80039a8:	bc80      	pop	{r7}
 80039aa:	4770      	bx	lr

080039ac <HAL_UART_Init>:
 80039ac:	b580      	push	{r7, lr}
 80039ae:	b082      	sub	sp, #8
 80039b0:	af00      	add	r7, sp, #0
 80039b2:	6078      	str	r0, [r7, #4]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d101      	bne.n	80039be <HAL_UART_Init+0x12>
 80039ba:	2301      	movs	r3, #1
 80039bc:	e03f      	b.n	8003a3e <HAL_UART_Init+0x92>
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80039c4:	b2db      	uxtb	r3, r3
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d106      	bne.n	80039d8 <HAL_UART_Init+0x2c>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2200      	movs	r2, #0
 80039ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039d2:	6878      	ldr	r0, [r7, #4]
 80039d4:	f7fd fd0c 	bl	80013f0 <HAL_UART_MspInit>
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	2224      	movs	r2, #36	; 0x24
 80039dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	68da      	ldr	r2, [r3, #12]
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80039ee:	60da      	str	r2, [r3, #12]
 80039f0:	6878      	ldr	r0, [r7, #4]
 80039f2:	f000 fc25 	bl	8004240 <UART_SetConfig>
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	691a      	ldr	r2, [r3, #16]
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003a04:	611a      	str	r2, [r3, #16]
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	695a      	ldr	r2, [r3, #20]
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003a14:	615a      	str	r2, [r3, #20]
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	68da      	ldr	r2, [r3, #12]
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003a24:	60da      	str	r2, [r3, #12]
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	2200      	movs	r2, #0
 8003a2a:	641a      	str	r2, [r3, #64]	; 0x40
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	2220      	movs	r2, #32
 8003a30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	2220      	movs	r2, #32
 8003a38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003a3c:	2300      	movs	r3, #0
 8003a3e:	4618      	mov	r0, r3
 8003a40:	3708      	adds	r7, #8
 8003a42:	46bd      	mov	sp, r7
 8003a44:	bd80      	pop	{r7, pc}

08003a46 <HAL_UART_Transmit>:
 8003a46:	b580      	push	{r7, lr}
 8003a48:	b08a      	sub	sp, #40	; 0x28
 8003a4a:	af02      	add	r7, sp, #8
 8003a4c:	60f8      	str	r0, [r7, #12]
 8003a4e:	60b9      	str	r1, [r7, #8]
 8003a50:	603b      	str	r3, [r7, #0]
 8003a52:	4613      	mov	r3, r2
 8003a54:	80fb      	strh	r3, [r7, #6]
 8003a56:	2300      	movs	r3, #0
 8003a58:	617b      	str	r3, [r7, #20]
 8003a5a:	68fb      	ldr	r3, [r7, #12]
 8003a5c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003a60:	b2db      	uxtb	r3, r3
 8003a62:	2b20      	cmp	r3, #32
 8003a64:	d17c      	bne.n	8003b60 <HAL_UART_Transmit+0x11a>
 8003a66:	68bb      	ldr	r3, [r7, #8]
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d002      	beq.n	8003a72 <HAL_UART_Transmit+0x2c>
 8003a6c:	88fb      	ldrh	r3, [r7, #6]
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d101      	bne.n	8003a76 <HAL_UART_Transmit+0x30>
 8003a72:	2301      	movs	r3, #1
 8003a74:	e075      	b.n	8003b62 <HAL_UART_Transmit+0x11c>
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003a7c:	2b01      	cmp	r3, #1
 8003a7e:	d101      	bne.n	8003a84 <HAL_UART_Transmit+0x3e>
 8003a80:	2302      	movs	r3, #2
 8003a82:	e06e      	b.n	8003b62 <HAL_UART_Transmit+0x11c>
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	2201      	movs	r2, #1
 8003a88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a8c:	68fb      	ldr	r3, [r7, #12]
 8003a8e:	2200      	movs	r2, #0
 8003a90:	641a      	str	r2, [r3, #64]	; 0x40
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	2221      	movs	r2, #33	; 0x21
 8003a96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a9a:	f7fe f871 	bl	8001b80 <HAL_GetTick>
 8003a9e:	6178      	str	r0, [r7, #20]
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	88fa      	ldrh	r2, [r7, #6]
 8003aa4:	849a      	strh	r2, [r3, #36]	; 0x24
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	88fa      	ldrh	r2, [r7, #6]
 8003aaa:	84da      	strh	r2, [r3, #38]	; 0x26
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	689b      	ldr	r3, [r3, #8]
 8003ab0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003ab4:	d108      	bne.n	8003ac8 <HAL_UART_Transmit+0x82>
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	691b      	ldr	r3, [r3, #16]
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d104      	bne.n	8003ac8 <HAL_UART_Transmit+0x82>
 8003abe:	2300      	movs	r3, #0
 8003ac0:	61fb      	str	r3, [r7, #28]
 8003ac2:	68bb      	ldr	r3, [r7, #8]
 8003ac4:	61bb      	str	r3, [r7, #24]
 8003ac6:	e003      	b.n	8003ad0 <HAL_UART_Transmit+0x8a>
 8003ac8:	68bb      	ldr	r3, [r7, #8]
 8003aca:	61fb      	str	r3, [r7, #28]
 8003acc:	2300      	movs	r3, #0
 8003ace:	61bb      	str	r3, [r7, #24]
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	2200      	movs	r2, #0
 8003ad4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ad8:	e02a      	b.n	8003b30 <HAL_UART_Transmit+0xea>
 8003ada:	683b      	ldr	r3, [r7, #0]
 8003adc:	9300      	str	r3, [sp, #0]
 8003ade:	697b      	ldr	r3, [r7, #20]
 8003ae0:	2200      	movs	r2, #0
 8003ae2:	2180      	movs	r1, #128	; 0x80
 8003ae4:	68f8      	ldr	r0, [r7, #12]
 8003ae6:	f000 fa11 	bl	8003f0c <UART_WaitOnFlagUntilTimeout>
 8003aea:	4603      	mov	r3, r0
 8003aec:	2b00      	cmp	r3, #0
 8003aee:	d001      	beq.n	8003af4 <HAL_UART_Transmit+0xae>
 8003af0:	2303      	movs	r3, #3
 8003af2:	e036      	b.n	8003b62 <HAL_UART_Transmit+0x11c>
 8003af4:	69fb      	ldr	r3, [r7, #28]
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d10b      	bne.n	8003b12 <HAL_UART_Transmit+0xcc>
 8003afa:	69bb      	ldr	r3, [r7, #24]
 8003afc:	881b      	ldrh	r3, [r3, #0]
 8003afe:	461a      	mov	r2, r3
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003b08:	605a      	str	r2, [r3, #4]
 8003b0a:	69bb      	ldr	r3, [r7, #24]
 8003b0c:	3302      	adds	r3, #2
 8003b0e:	61bb      	str	r3, [r7, #24]
 8003b10:	e007      	b.n	8003b22 <HAL_UART_Transmit+0xdc>
 8003b12:	69fb      	ldr	r3, [r7, #28]
 8003b14:	781a      	ldrb	r2, [r3, #0]
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	605a      	str	r2, [r3, #4]
 8003b1c:	69fb      	ldr	r3, [r7, #28]
 8003b1e:	3301      	adds	r3, #1
 8003b20:	61fb      	str	r3, [r7, #28]
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b26:	b29b      	uxth	r3, r3
 8003b28:	3b01      	subs	r3, #1
 8003b2a:	b29a      	uxth	r2, r3
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b34:	b29b      	uxth	r3, r3
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d1cf      	bne.n	8003ada <HAL_UART_Transmit+0x94>
 8003b3a:	683b      	ldr	r3, [r7, #0]
 8003b3c:	9300      	str	r3, [sp, #0]
 8003b3e:	697b      	ldr	r3, [r7, #20]
 8003b40:	2200      	movs	r2, #0
 8003b42:	2140      	movs	r1, #64	; 0x40
 8003b44:	68f8      	ldr	r0, [r7, #12]
 8003b46:	f000 f9e1 	bl	8003f0c <UART_WaitOnFlagUntilTimeout>
 8003b4a:	4603      	mov	r3, r0
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d001      	beq.n	8003b54 <HAL_UART_Transmit+0x10e>
 8003b50:	2303      	movs	r3, #3
 8003b52:	e006      	b.n	8003b62 <HAL_UART_Transmit+0x11c>
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	2220      	movs	r2, #32
 8003b58:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b5c:	2300      	movs	r3, #0
 8003b5e:	e000      	b.n	8003b62 <HAL_UART_Transmit+0x11c>
 8003b60:	2302      	movs	r3, #2
 8003b62:	4618      	mov	r0, r3
 8003b64:	3720      	adds	r7, #32
 8003b66:	46bd      	mov	sp, r7
 8003b68:	bd80      	pop	{r7, pc}
	...

08003b6c <HAL_UART_IRQHandler>:
 8003b6c:	b580      	push	{r7, lr}
 8003b6e:	b08a      	sub	sp, #40	; 0x28
 8003b70:	af00      	add	r7, sp, #0
 8003b72:	6078      	str	r0, [r7, #4]
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	681b      	ldr	r3, [r3, #0]
 8003b7a:	627b      	str	r3, [r7, #36]	; 0x24
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	68db      	ldr	r3, [r3, #12]
 8003b82:	623b      	str	r3, [r7, #32]
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	695b      	ldr	r3, [r3, #20]
 8003b8a:	61fb      	str	r3, [r7, #28]
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	61bb      	str	r3, [r7, #24]
 8003b90:	2300      	movs	r3, #0
 8003b92:	617b      	str	r3, [r7, #20]
 8003b94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b96:	f003 030f 	and.w	r3, r3, #15
 8003b9a:	61bb      	str	r3, [r7, #24]
 8003b9c:	69bb      	ldr	r3, [r7, #24]
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d10d      	bne.n	8003bbe <HAL_UART_IRQHandler+0x52>
 8003ba2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ba4:	f003 0320 	and.w	r3, r3, #32
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d008      	beq.n	8003bbe <HAL_UART_IRQHandler+0x52>
 8003bac:	6a3b      	ldr	r3, [r7, #32]
 8003bae:	f003 0320 	and.w	r3, r3, #32
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	d003      	beq.n	8003bbe <HAL_UART_IRQHandler+0x52>
 8003bb6:	6878      	ldr	r0, [r7, #4]
 8003bb8:	f000 fa99 	bl	80040ee <UART_Receive_IT>
 8003bbc:	e17b      	b.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003bbe:	69bb      	ldr	r3, [r7, #24]
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	f000 80b1 	beq.w	8003d28 <HAL_UART_IRQHandler+0x1bc>
 8003bc6:	69fb      	ldr	r3, [r7, #28]
 8003bc8:	f003 0301 	and.w	r3, r3, #1
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d105      	bne.n	8003bdc <HAL_UART_IRQHandler+0x70>
 8003bd0:	6a3b      	ldr	r3, [r7, #32]
 8003bd2:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	f000 80a6 	beq.w	8003d28 <HAL_UART_IRQHandler+0x1bc>
 8003bdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bde:	f003 0301 	and.w	r3, r3, #1
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d00a      	beq.n	8003bfc <HAL_UART_IRQHandler+0x90>
 8003be6:	6a3b      	ldr	r3, [r7, #32]
 8003be8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003bec:	2b00      	cmp	r3, #0
 8003bee:	d005      	beq.n	8003bfc <HAL_UART_IRQHandler+0x90>
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bf4:	f043 0201 	orr.w	r2, r3, #1
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	641a      	str	r2, [r3, #64]	; 0x40
 8003bfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bfe:	f003 0304 	and.w	r3, r3, #4
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d00a      	beq.n	8003c1c <HAL_UART_IRQHandler+0xb0>
 8003c06:	69fb      	ldr	r3, [r7, #28]
 8003c08:	f003 0301 	and.w	r3, r3, #1
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d005      	beq.n	8003c1c <HAL_UART_IRQHandler+0xb0>
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c14:	f043 0202 	orr.w	r2, r3, #2
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	641a      	str	r2, [r3, #64]	; 0x40
 8003c1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c1e:	f003 0302 	and.w	r3, r3, #2
 8003c22:	2b00      	cmp	r3, #0
 8003c24:	d00a      	beq.n	8003c3c <HAL_UART_IRQHandler+0xd0>
 8003c26:	69fb      	ldr	r3, [r7, #28]
 8003c28:	f003 0301 	and.w	r3, r3, #1
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d005      	beq.n	8003c3c <HAL_UART_IRQHandler+0xd0>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c34:	f043 0204 	orr.w	r2, r3, #4
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	641a      	str	r2, [r3, #64]	; 0x40
 8003c3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c3e:	f003 0308 	and.w	r3, r3, #8
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d00f      	beq.n	8003c66 <HAL_UART_IRQHandler+0xfa>
 8003c46:	6a3b      	ldr	r3, [r7, #32]
 8003c48:	f003 0320 	and.w	r3, r3, #32
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	d104      	bne.n	8003c5a <HAL_UART_IRQHandler+0xee>
 8003c50:	69fb      	ldr	r3, [r7, #28]
 8003c52:	f003 0301 	and.w	r3, r3, #1
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	d005      	beq.n	8003c66 <HAL_UART_IRQHandler+0xfa>
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c5e:	f043 0208 	orr.w	r2, r3, #8
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	641a      	str	r2, [r3, #64]	; 0x40
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	f000 811e 	beq.w	8003eac <HAL_UART_IRQHandler+0x340>
 8003c70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c72:	f003 0320 	and.w	r3, r3, #32
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	d007      	beq.n	8003c8a <HAL_UART_IRQHandler+0x11e>
 8003c7a:	6a3b      	ldr	r3, [r7, #32]
 8003c7c:	f003 0320 	and.w	r3, r3, #32
 8003c80:	2b00      	cmp	r3, #0
 8003c82:	d002      	beq.n	8003c8a <HAL_UART_IRQHandler+0x11e>
 8003c84:	6878      	ldr	r0, [r7, #4]
 8003c86:	f000 fa32 	bl	80040ee <UART_Receive_IT>
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	695b      	ldr	r3, [r3, #20]
 8003c90:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	bf14      	ite	ne
 8003c98:	2301      	movne	r3, #1
 8003c9a:	2300      	moveq	r3, #0
 8003c9c:	b2db      	uxtb	r3, r3
 8003c9e:	617b      	str	r3, [r7, #20]
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ca4:	f003 0308 	and.w	r3, r3, #8
 8003ca8:	2b00      	cmp	r3, #0
 8003caa:	d102      	bne.n	8003cb2 <HAL_UART_IRQHandler+0x146>
 8003cac:	697b      	ldr	r3, [r7, #20]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d031      	beq.n	8003d16 <HAL_UART_IRQHandler+0x1aa>
 8003cb2:	6878      	ldr	r0, [r7, #4]
 8003cb4:	f000 f974 	bl	8003fa0 <UART_EndRxTransfer>
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	695b      	ldr	r3, [r3, #20]
 8003cbe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	d023      	beq.n	8003d0e <HAL_UART_IRQHandler+0x1a2>
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	695a      	ldr	r2, [r3, #20]
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003cd4:	615a      	str	r2, [r3, #20]
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cda:	2b00      	cmp	r3, #0
 8003cdc:	d013      	beq.n	8003d06 <HAL_UART_IRQHandler+0x19a>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003ce2:	4a76      	ldr	r2, [pc, #472]	; (8003ebc <HAL_UART_IRQHandler+0x350>)
 8003ce4:	635a      	str	r2, [r3, #52]	; 0x34
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cea:	4618      	mov	r0, r3
 8003cec:	f7fe f89a 	bl	8001e24 <HAL_DMA_Abort_IT>
 8003cf0:	4603      	mov	r3, r0
 8003cf2:	2b00      	cmp	r3, #0
 8003cf4:	d016      	beq.n	8003d24 <HAL_UART_IRQHandler+0x1b8>
 8003cf6:	687b      	ldr	r3, [r7, #4]
 8003cf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cfa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003cfc:	687a      	ldr	r2, [r7, #4]
 8003cfe:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003d00:	4610      	mov	r0, r2
 8003d02:	4798      	blx	r3
 8003d04:	e00e      	b.n	8003d24 <HAL_UART_IRQHandler+0x1b8>
 8003d06:	6878      	ldr	r0, [r7, #4]
 8003d08:	f000 f8ec 	bl	8003ee4 <HAL_UART_ErrorCallback>
 8003d0c:	e00a      	b.n	8003d24 <HAL_UART_IRQHandler+0x1b8>
 8003d0e:	6878      	ldr	r0, [r7, #4]
 8003d10:	f000 f8e8 	bl	8003ee4 <HAL_UART_ErrorCallback>
 8003d14:	e006      	b.n	8003d24 <HAL_UART_IRQHandler+0x1b8>
 8003d16:	6878      	ldr	r0, [r7, #4]
 8003d18:	f000 f8e4 	bl	8003ee4 <HAL_UART_ErrorCallback>
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	2200      	movs	r2, #0
 8003d20:	641a      	str	r2, [r3, #64]	; 0x40
 8003d22:	e0c3      	b.n	8003eac <HAL_UART_IRQHandler+0x340>
 8003d24:	bf00      	nop
 8003d26:	e0c1      	b.n	8003eac <HAL_UART_IRQHandler+0x340>
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d2c:	2b01      	cmp	r3, #1
 8003d2e:	f040 80a1 	bne.w	8003e74 <HAL_UART_IRQHandler+0x308>
 8003d32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d34:	f003 0310 	and.w	r3, r3, #16
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	f000 809b 	beq.w	8003e74 <HAL_UART_IRQHandler+0x308>
 8003d3e:	6a3b      	ldr	r3, [r7, #32]
 8003d40:	f003 0310 	and.w	r3, r3, #16
 8003d44:	2b00      	cmp	r3, #0
 8003d46:	f000 8095 	beq.w	8003e74 <HAL_UART_IRQHandler+0x308>
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	60fb      	str	r3, [r7, #12]
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	60fb      	str	r3, [r7, #12]
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	685b      	ldr	r3, [r3, #4]
 8003d5c:	60fb      	str	r3, [r7, #12]
 8003d5e:	68fb      	ldr	r3, [r7, #12]
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	695b      	ldr	r3, [r3, #20]
 8003d66:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d04e      	beq.n	8003e0c <HAL_UART_IRQHandler+0x2a0>
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	685b      	ldr	r3, [r3, #4]
 8003d76:	823b      	strh	r3, [r7, #16]
 8003d78:	8a3b      	ldrh	r3, [r7, #16]
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	f000 8098 	beq.w	8003eb0 <HAL_UART_IRQHandler+0x344>
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003d84:	8a3a      	ldrh	r2, [r7, #16]
 8003d86:	429a      	cmp	r2, r3
 8003d88:	f080 8092 	bcs.w	8003eb0 <HAL_UART_IRQHandler+0x344>
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	8a3a      	ldrh	r2, [r7, #16]
 8003d90:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d96:	699b      	ldr	r3, [r3, #24]
 8003d98:	2b20      	cmp	r3, #32
 8003d9a:	d02b      	beq.n	8003df4 <HAL_UART_IRQHandler+0x288>
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	68da      	ldr	r2, [r3, #12]
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003daa:	60da      	str	r2, [r3, #12]
 8003dac:	687b      	ldr	r3, [r7, #4]
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	695a      	ldr	r2, [r3, #20]
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	f022 0201 	bic.w	r2, r2, #1
 8003dba:	615a      	str	r2, [r3, #20]
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	695a      	ldr	r2, [r3, #20]
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	681b      	ldr	r3, [r3, #0]
 8003dc6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003dca:	615a      	str	r2, [r3, #20]
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	2220      	movs	r2, #32
 8003dd0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	2200      	movs	r2, #0
 8003dd8:	631a      	str	r2, [r3, #48]	; 0x30
 8003dda:	687b      	ldr	r3, [r7, #4]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	68da      	ldr	r2, [r3, #12]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	f022 0210 	bic.w	r2, r2, #16
 8003de8:	60da      	str	r2, [r3, #12]
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003dee:	4618      	mov	r0, r3
 8003df0:	f7fd ffdd 	bl	8001dae <HAL_DMA_Abort>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003dfc:	b29b      	uxth	r3, r3
 8003dfe:	1ad3      	subs	r3, r2, r3
 8003e00:	b29b      	uxth	r3, r3
 8003e02:	4619      	mov	r1, r3
 8003e04:	6878      	ldr	r0, [r7, #4]
 8003e06:	f000 f876 	bl	8003ef6 <HAL_UARTEx_RxEventCallback>
 8003e0a:	e051      	b.n	8003eb0 <HAL_UART_IRQHandler+0x344>
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003e14:	b29b      	uxth	r3, r3
 8003e16:	1ad3      	subs	r3, r2, r3
 8003e18:	827b      	strh	r3, [r7, #18]
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003e1e:	b29b      	uxth	r3, r3
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d047      	beq.n	8003eb4 <HAL_UART_IRQHandler+0x348>
 8003e24:	8a7b      	ldrh	r3, [r7, #18]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d044      	beq.n	8003eb4 <HAL_UART_IRQHandler+0x348>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	68da      	ldr	r2, [r3, #12]
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003e38:	60da      	str	r2, [r3, #12]
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	681b      	ldr	r3, [r3, #0]
 8003e3e:	695a      	ldr	r2, [r3, #20]
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	681b      	ldr	r3, [r3, #0]
 8003e44:	f022 0201 	bic.w	r2, r2, #1
 8003e48:	615a      	str	r2, [r3, #20]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	2220      	movs	r2, #32
 8003e4e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	2200      	movs	r2, #0
 8003e56:	631a      	str	r2, [r3, #48]	; 0x30
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	68da      	ldr	r2, [r3, #12]
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	f022 0210 	bic.w	r2, r2, #16
 8003e66:	60da      	str	r2, [r3, #12]
 8003e68:	8a7b      	ldrh	r3, [r7, #18]
 8003e6a:	4619      	mov	r1, r3
 8003e6c:	6878      	ldr	r0, [r7, #4]
 8003e6e:	f000 f842 	bl	8003ef6 <HAL_UARTEx_RxEventCallback>
 8003e72:	e01f      	b.n	8003eb4 <HAL_UART_IRQHandler+0x348>
 8003e74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e76:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e7a:	2b00      	cmp	r3, #0
 8003e7c:	d008      	beq.n	8003e90 <HAL_UART_IRQHandler+0x324>
 8003e7e:	6a3b      	ldr	r3, [r7, #32]
 8003e80:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e84:	2b00      	cmp	r3, #0
 8003e86:	d003      	beq.n	8003e90 <HAL_UART_IRQHandler+0x324>
 8003e88:	6878      	ldr	r0, [r7, #4]
 8003e8a:	f000 f8c9 	bl	8004020 <UART_Transmit_IT>
 8003e8e:	e012      	b.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003e90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d00d      	beq.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003e9a:	6a3b      	ldr	r3, [r7, #32]
 8003e9c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d008      	beq.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003ea4:	6878      	ldr	r0, [r7, #4]
 8003ea6:	f000 f90a 	bl	80040be <UART_EndTransmit_IT>
 8003eaa:	e004      	b.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003eac:	bf00      	nop
 8003eae:	e002      	b.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003eb0:	bf00      	nop
 8003eb2:	e000      	b.n	8003eb6 <HAL_UART_IRQHandler+0x34a>
 8003eb4:	bf00      	nop
 8003eb6:	3728      	adds	r7, #40	; 0x28
 8003eb8:	46bd      	mov	sp, r7
 8003eba:	bd80      	pop	{r7, pc}
 8003ebc:	08003ff9 	.word	0x08003ff9

08003ec0 <HAL_UART_TxCpltCallback>:
 8003ec0:	b480      	push	{r7}
 8003ec2:	b083      	sub	sp, #12
 8003ec4:	af00      	add	r7, sp, #0
 8003ec6:	6078      	str	r0, [r7, #4]
 8003ec8:	bf00      	nop
 8003eca:	370c      	adds	r7, #12
 8003ecc:	46bd      	mov	sp, r7
 8003ece:	bc80      	pop	{r7}
 8003ed0:	4770      	bx	lr

08003ed2 <HAL_UART_RxCpltCallback>:
 8003ed2:	b480      	push	{r7}
 8003ed4:	b083      	sub	sp, #12
 8003ed6:	af00      	add	r7, sp, #0
 8003ed8:	6078      	str	r0, [r7, #4]
 8003eda:	bf00      	nop
 8003edc:	370c      	adds	r7, #12
 8003ede:	46bd      	mov	sp, r7
 8003ee0:	bc80      	pop	{r7}
 8003ee2:	4770      	bx	lr

08003ee4 <HAL_UART_ErrorCallback>:
 8003ee4:	b480      	push	{r7}
 8003ee6:	b083      	sub	sp, #12
 8003ee8:	af00      	add	r7, sp, #0
 8003eea:	6078      	str	r0, [r7, #4]
 8003eec:	bf00      	nop
 8003eee:	370c      	adds	r7, #12
 8003ef0:	46bd      	mov	sp, r7
 8003ef2:	bc80      	pop	{r7}
 8003ef4:	4770      	bx	lr

08003ef6 <HAL_UARTEx_RxEventCallback>:
 8003ef6:	b480      	push	{r7}
 8003ef8:	b083      	sub	sp, #12
 8003efa:	af00      	add	r7, sp, #0
 8003efc:	6078      	str	r0, [r7, #4]
 8003efe:	460b      	mov	r3, r1
 8003f00:	807b      	strh	r3, [r7, #2]
 8003f02:	bf00      	nop
 8003f04:	370c      	adds	r7, #12
 8003f06:	46bd      	mov	sp, r7
 8003f08:	bc80      	pop	{r7}
 8003f0a:	4770      	bx	lr

08003f0c <UART_WaitOnFlagUntilTimeout>:
 8003f0c:	b580      	push	{r7, lr}
 8003f0e:	b084      	sub	sp, #16
 8003f10:	af00      	add	r7, sp, #0
 8003f12:	60f8      	str	r0, [r7, #12]
 8003f14:	60b9      	str	r1, [r7, #8]
 8003f16:	603b      	str	r3, [r7, #0]
 8003f18:	4613      	mov	r3, r2
 8003f1a:	71fb      	strb	r3, [r7, #7]
 8003f1c:	e02c      	b.n	8003f78 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003f1e:	69bb      	ldr	r3, [r7, #24]
 8003f20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f24:	d028      	beq.n	8003f78 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003f26:	69bb      	ldr	r3, [r7, #24]
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d007      	beq.n	8003f3c <UART_WaitOnFlagUntilTimeout+0x30>
 8003f2c:	f7fd fe28 	bl	8001b80 <HAL_GetTick>
 8003f30:	4602      	mov	r2, r0
 8003f32:	683b      	ldr	r3, [r7, #0]
 8003f34:	1ad3      	subs	r3, r2, r3
 8003f36:	69ba      	ldr	r2, [r7, #24]
 8003f38:	429a      	cmp	r2, r3
 8003f3a:	d21d      	bcs.n	8003f78 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	68da      	ldr	r2, [r3, #12]
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	681b      	ldr	r3, [r3, #0]
 8003f46:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003f4a:	60da      	str	r2, [r3, #12]
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	695a      	ldr	r2, [r3, #20]
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	f022 0201 	bic.w	r2, r2, #1
 8003f5a:	615a      	str	r2, [r3, #20]
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	2220      	movs	r2, #32
 8003f60:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003f64:	68fb      	ldr	r3, [r7, #12]
 8003f66:	2220      	movs	r2, #32
 8003f68:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	2200      	movs	r2, #0
 8003f70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003f74:	2303      	movs	r3, #3
 8003f76:	e00f      	b.n	8003f98 <UART_WaitOnFlagUntilTimeout+0x8c>
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	681a      	ldr	r2, [r3, #0]
 8003f7e:	68bb      	ldr	r3, [r7, #8]
 8003f80:	4013      	ands	r3, r2
 8003f82:	68ba      	ldr	r2, [r7, #8]
 8003f84:	429a      	cmp	r2, r3
 8003f86:	bf0c      	ite	eq
 8003f88:	2301      	moveq	r3, #1
 8003f8a:	2300      	movne	r3, #0
 8003f8c:	b2db      	uxtb	r3, r3
 8003f8e:	461a      	mov	r2, r3
 8003f90:	79fb      	ldrb	r3, [r7, #7]
 8003f92:	429a      	cmp	r2, r3
 8003f94:	d0c3      	beq.n	8003f1e <UART_WaitOnFlagUntilTimeout+0x12>
 8003f96:	2300      	movs	r3, #0
 8003f98:	4618      	mov	r0, r3
 8003f9a:	3710      	adds	r7, #16
 8003f9c:	46bd      	mov	sp, r7
 8003f9e:	bd80      	pop	{r7, pc}

08003fa0 <UART_EndRxTransfer>:
 8003fa0:	b480      	push	{r7}
 8003fa2:	b083      	sub	sp, #12
 8003fa4:	af00      	add	r7, sp, #0
 8003fa6:	6078      	str	r0, [r7, #4]
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	681b      	ldr	r3, [r3, #0]
 8003fac:	68da      	ldr	r2, [r3, #12]
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003fb6:	60da      	str	r2, [r3, #12]
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	695a      	ldr	r2, [r3, #20]
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	f022 0201 	bic.w	r2, r2, #1
 8003fc6:	615a      	str	r2, [r3, #20]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fcc:	2b01      	cmp	r3, #1
 8003fce:	d107      	bne.n	8003fe0 <UART_EndRxTransfer+0x40>
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	68da      	ldr	r2, [r3, #12]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	f022 0210 	bic.w	r2, r2, #16
 8003fde:	60da      	str	r2, [r3, #12]
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	2220      	movs	r2, #32
 8003fe4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	2200      	movs	r2, #0
 8003fec:	631a      	str	r2, [r3, #48]	; 0x30
 8003fee:	bf00      	nop
 8003ff0:	370c      	adds	r7, #12
 8003ff2:	46bd      	mov	sp, r7
 8003ff4:	bc80      	pop	{r7}
 8003ff6:	4770      	bx	lr

08003ff8 <UART_DMAAbortOnError>:
 8003ff8:	b580      	push	{r7, lr}
 8003ffa:	b084      	sub	sp, #16
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	6078      	str	r0, [r7, #4]
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004004:	60fb      	str	r3, [r7, #12]
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	2200      	movs	r2, #0
 800400a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	2200      	movs	r2, #0
 8004010:	84da      	strh	r2, [r3, #38]	; 0x26
 8004012:	68f8      	ldr	r0, [r7, #12]
 8004014:	f7ff ff66 	bl	8003ee4 <HAL_UART_ErrorCallback>
 8004018:	bf00      	nop
 800401a:	3710      	adds	r7, #16
 800401c:	46bd      	mov	sp, r7
 800401e:	bd80      	pop	{r7, pc}

08004020 <UART_Transmit_IT>:
 8004020:	b480      	push	{r7}
 8004022:	b085      	sub	sp, #20
 8004024:	af00      	add	r7, sp, #0
 8004026:	6078      	str	r0, [r7, #4]
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800402e:	b2db      	uxtb	r3, r3
 8004030:	2b21      	cmp	r3, #33	; 0x21
 8004032:	d13e      	bne.n	80040b2 <UART_Transmit_IT+0x92>
 8004034:	687b      	ldr	r3, [r7, #4]
 8004036:	689b      	ldr	r3, [r3, #8]
 8004038:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800403c:	d114      	bne.n	8004068 <UART_Transmit_IT+0x48>
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	691b      	ldr	r3, [r3, #16]
 8004042:	2b00      	cmp	r3, #0
 8004044:	d110      	bne.n	8004068 <UART_Transmit_IT+0x48>
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	6a1b      	ldr	r3, [r3, #32]
 800404a:	60fb      	str	r3, [r7, #12]
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	881b      	ldrh	r3, [r3, #0]
 8004050:	461a      	mov	r2, r3
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800405a:	605a      	str	r2, [r3, #4]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	6a1b      	ldr	r3, [r3, #32]
 8004060:	1c9a      	adds	r2, r3, #2
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	621a      	str	r2, [r3, #32]
 8004066:	e008      	b.n	800407a <UART_Transmit_IT+0x5a>
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	6a1b      	ldr	r3, [r3, #32]
 800406c:	1c59      	adds	r1, r3, #1
 800406e:	687a      	ldr	r2, [r7, #4]
 8004070:	6211      	str	r1, [r2, #32]
 8004072:	781a      	ldrb	r2, [r3, #0]
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	605a      	str	r2, [r3, #4]
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800407e:	b29b      	uxth	r3, r3
 8004080:	3b01      	subs	r3, #1
 8004082:	b29b      	uxth	r3, r3
 8004084:	687a      	ldr	r2, [r7, #4]
 8004086:	4619      	mov	r1, r3
 8004088:	84d1      	strh	r1, [r2, #38]	; 0x26
 800408a:	2b00      	cmp	r3, #0
 800408c:	d10f      	bne.n	80040ae <UART_Transmit_IT+0x8e>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	68da      	ldr	r2, [r3, #12]
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800409c:	60da      	str	r2, [r3, #12]
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	68da      	ldr	r2, [r3, #12]
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80040ac:	60da      	str	r2, [r3, #12]
 80040ae:	2300      	movs	r3, #0
 80040b0:	e000      	b.n	80040b4 <UART_Transmit_IT+0x94>
 80040b2:	2302      	movs	r3, #2
 80040b4:	4618      	mov	r0, r3
 80040b6:	3714      	adds	r7, #20
 80040b8:	46bd      	mov	sp, r7
 80040ba:	bc80      	pop	{r7}
 80040bc:	4770      	bx	lr

080040be <UART_EndTransmit_IT>:
 80040be:	b580      	push	{r7, lr}
 80040c0:	b082      	sub	sp, #8
 80040c2:	af00      	add	r7, sp, #0
 80040c4:	6078      	str	r0, [r7, #4]
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	68da      	ldr	r2, [r3, #12]
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80040d4:	60da      	str	r2, [r3, #12]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	2220      	movs	r2, #32
 80040da:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040de:	6878      	ldr	r0, [r7, #4]
 80040e0:	f7ff feee 	bl	8003ec0 <HAL_UART_TxCpltCallback>
 80040e4:	2300      	movs	r3, #0
 80040e6:	4618      	mov	r0, r3
 80040e8:	3708      	adds	r7, #8
 80040ea:	46bd      	mov	sp, r7
 80040ec:	bd80      	pop	{r7, pc}

080040ee <UART_Receive_IT>:
 80040ee:	b580      	push	{r7, lr}
 80040f0:	b086      	sub	sp, #24
 80040f2:	af00      	add	r7, sp, #0
 80040f4:	6078      	str	r0, [r7, #4]
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80040fc:	b2db      	uxtb	r3, r3
 80040fe:	2b22      	cmp	r3, #34	; 0x22
 8004100:	f040 8099 	bne.w	8004236 <UART_Receive_IT+0x148>
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	689b      	ldr	r3, [r3, #8]
 8004108:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800410c:	d117      	bne.n	800413e <UART_Receive_IT+0x50>
 800410e:	687b      	ldr	r3, [r7, #4]
 8004110:	691b      	ldr	r3, [r3, #16]
 8004112:	2b00      	cmp	r3, #0
 8004114:	d113      	bne.n	800413e <UART_Receive_IT+0x50>
 8004116:	2300      	movs	r3, #0
 8004118:	617b      	str	r3, [r7, #20]
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800411e:	613b      	str	r3, [r7, #16]
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	685b      	ldr	r3, [r3, #4]
 8004126:	b29b      	uxth	r3, r3
 8004128:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800412c:	b29a      	uxth	r2, r3
 800412e:	693b      	ldr	r3, [r7, #16]
 8004130:	801a      	strh	r2, [r3, #0]
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004136:	1c9a      	adds	r2, r3, #2
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	629a      	str	r2, [r3, #40]	; 0x28
 800413c:	e026      	b.n	800418c <UART_Receive_IT+0x9e>
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004142:	617b      	str	r3, [r7, #20]
 8004144:	2300      	movs	r3, #0
 8004146:	613b      	str	r3, [r7, #16]
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	689b      	ldr	r3, [r3, #8]
 800414c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004150:	d007      	beq.n	8004162 <UART_Receive_IT+0x74>
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	689b      	ldr	r3, [r3, #8]
 8004156:	2b00      	cmp	r3, #0
 8004158:	d10a      	bne.n	8004170 <UART_Receive_IT+0x82>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	691b      	ldr	r3, [r3, #16]
 800415e:	2b00      	cmp	r3, #0
 8004160:	d106      	bne.n	8004170 <UART_Receive_IT+0x82>
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	685b      	ldr	r3, [r3, #4]
 8004168:	b2da      	uxtb	r2, r3
 800416a:	697b      	ldr	r3, [r7, #20]
 800416c:	701a      	strb	r2, [r3, #0]
 800416e:	e008      	b.n	8004182 <UART_Receive_IT+0x94>
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	685b      	ldr	r3, [r3, #4]
 8004176:	b2db      	uxtb	r3, r3
 8004178:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800417c:	b2da      	uxtb	r2, r3
 800417e:	697b      	ldr	r3, [r7, #20]
 8004180:	701a      	strb	r2, [r3, #0]
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004186:	1c5a      	adds	r2, r3, #1
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	629a      	str	r2, [r3, #40]	; 0x28
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004190:	b29b      	uxth	r3, r3
 8004192:	3b01      	subs	r3, #1
 8004194:	b29b      	uxth	r3, r3
 8004196:	687a      	ldr	r2, [r7, #4]
 8004198:	4619      	mov	r1, r3
 800419a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800419c:	2b00      	cmp	r3, #0
 800419e:	d148      	bne.n	8004232 <UART_Receive_IT+0x144>
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	68da      	ldr	r2, [r3, #12]
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	f022 0220 	bic.w	r2, r2, #32
 80041ae:	60da      	str	r2, [r3, #12]
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	68da      	ldr	r2, [r3, #12]
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80041be:	60da      	str	r2, [r3, #12]
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	681b      	ldr	r3, [r3, #0]
 80041c4:	695a      	ldr	r2, [r3, #20]
 80041c6:	687b      	ldr	r3, [r7, #4]
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	f022 0201 	bic.w	r2, r2, #1
 80041ce:	615a      	str	r2, [r3, #20]
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	2220      	movs	r2, #32
 80041d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80041dc:	2b01      	cmp	r3, #1
 80041de:	d123      	bne.n	8004228 <UART_Receive_IT+0x13a>
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	2200      	movs	r2, #0
 80041e4:	631a      	str	r2, [r3, #48]	; 0x30
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	68da      	ldr	r2, [r3, #12]
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	f022 0210 	bic.w	r2, r2, #16
 80041f4:	60da      	str	r2, [r3, #12]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	f003 0310 	and.w	r3, r3, #16
 8004200:	2b10      	cmp	r3, #16
 8004202:	d10a      	bne.n	800421a <UART_Receive_IT+0x12c>
 8004204:	2300      	movs	r3, #0
 8004206:	60fb      	str	r3, [r7, #12]
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	60fb      	str	r3, [r7, #12]
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	685b      	ldr	r3, [r3, #4]
 8004216:	60fb      	str	r3, [r7, #12]
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800421e:	4619      	mov	r1, r3
 8004220:	6878      	ldr	r0, [r7, #4]
 8004222:	f7ff fe68 	bl	8003ef6 <HAL_UARTEx_RxEventCallback>
 8004226:	e002      	b.n	800422e <UART_Receive_IT+0x140>
 8004228:	6878      	ldr	r0, [r7, #4]
 800422a:	f7ff fe52 	bl	8003ed2 <HAL_UART_RxCpltCallback>
 800422e:	2300      	movs	r3, #0
 8004230:	e002      	b.n	8004238 <UART_Receive_IT+0x14a>
 8004232:	2300      	movs	r3, #0
 8004234:	e000      	b.n	8004238 <UART_Receive_IT+0x14a>
 8004236:	2302      	movs	r3, #2
 8004238:	4618      	mov	r0, r3
 800423a:	3718      	adds	r7, #24
 800423c:	46bd      	mov	sp, r7
 800423e:	bd80      	pop	{r7, pc}

08004240 <UART_SetConfig>:
 8004240:	b580      	push	{r7, lr}
 8004242:	b084      	sub	sp, #16
 8004244:	af00      	add	r7, sp, #0
 8004246:	6078      	str	r0, [r7, #4]
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	691b      	ldr	r3, [r3, #16]
 800424e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	68da      	ldr	r2, [r3, #12]
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	430a      	orrs	r2, r1
 800425c:	611a      	str	r2, [r3, #16]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	689a      	ldr	r2, [r3, #8]
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	691b      	ldr	r3, [r3, #16]
 8004266:	431a      	orrs	r2, r3
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	695b      	ldr	r3, [r3, #20]
 800426c:	4313      	orrs	r3, r2
 800426e:	60bb      	str	r3, [r7, #8]
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	68db      	ldr	r3, [r3, #12]
 8004276:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800427a:	f023 030c 	bic.w	r3, r3, #12
 800427e:	687a      	ldr	r2, [r7, #4]
 8004280:	6812      	ldr	r2, [r2, #0]
 8004282:	68b9      	ldr	r1, [r7, #8]
 8004284:	430b      	orrs	r3, r1
 8004286:	60d3      	str	r3, [r2, #12]
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	681b      	ldr	r3, [r3, #0]
 800428c:	695b      	ldr	r3, [r3, #20]
 800428e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	699a      	ldr	r2, [r3, #24]
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	430a      	orrs	r2, r1
 800429c:	615a      	str	r2, [r3, #20]
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	4a2c      	ldr	r2, [pc, #176]	; (8004354 <UART_SetConfig+0x114>)
 80042a4:	4293      	cmp	r3, r2
 80042a6:	d103      	bne.n	80042b0 <UART_SetConfig+0x70>
 80042a8:	f7fe fbf0 	bl	8002a8c <HAL_RCC_GetPCLK2Freq>
 80042ac:	60f8      	str	r0, [r7, #12]
 80042ae:	e002      	b.n	80042b6 <UART_SetConfig+0x76>
 80042b0:	f7fe fbd8 	bl	8002a64 <HAL_RCC_GetPCLK1Freq>
 80042b4:	60f8      	str	r0, [r7, #12]
 80042b6:	68fa      	ldr	r2, [r7, #12]
 80042b8:	4613      	mov	r3, r2
 80042ba:	009b      	lsls	r3, r3, #2
 80042bc:	4413      	add	r3, r2
 80042be:	009a      	lsls	r2, r3, #2
 80042c0:	441a      	add	r2, r3
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	685b      	ldr	r3, [r3, #4]
 80042c6:	009b      	lsls	r3, r3, #2
 80042c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80042cc:	4a22      	ldr	r2, [pc, #136]	; (8004358 <UART_SetConfig+0x118>)
 80042ce:	fba2 2303 	umull	r2, r3, r2, r3
 80042d2:	095b      	lsrs	r3, r3, #5
 80042d4:	0119      	lsls	r1, r3, #4
 80042d6:	68fa      	ldr	r2, [r7, #12]
 80042d8:	4613      	mov	r3, r2
 80042da:	009b      	lsls	r3, r3, #2
 80042dc:	4413      	add	r3, r2
 80042de:	009a      	lsls	r2, r3, #2
 80042e0:	441a      	add	r2, r3
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	685b      	ldr	r3, [r3, #4]
 80042e6:	009b      	lsls	r3, r3, #2
 80042e8:	fbb2 f2f3 	udiv	r2, r2, r3
 80042ec:	4b1a      	ldr	r3, [pc, #104]	; (8004358 <UART_SetConfig+0x118>)
 80042ee:	fba3 0302 	umull	r0, r3, r3, r2
 80042f2:	095b      	lsrs	r3, r3, #5
 80042f4:	2064      	movs	r0, #100	; 0x64
 80042f6:	fb00 f303 	mul.w	r3, r0, r3
 80042fa:	1ad3      	subs	r3, r2, r3
 80042fc:	011b      	lsls	r3, r3, #4
 80042fe:	3332      	adds	r3, #50	; 0x32
 8004300:	4a15      	ldr	r2, [pc, #84]	; (8004358 <UART_SetConfig+0x118>)
 8004302:	fba2 2303 	umull	r2, r3, r2, r3
 8004306:	095b      	lsrs	r3, r3, #5
 8004308:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800430c:	4419      	add	r1, r3
 800430e:	68fa      	ldr	r2, [r7, #12]
 8004310:	4613      	mov	r3, r2
 8004312:	009b      	lsls	r3, r3, #2
 8004314:	4413      	add	r3, r2
 8004316:	009a      	lsls	r2, r3, #2
 8004318:	441a      	add	r2, r3
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	685b      	ldr	r3, [r3, #4]
 800431e:	009b      	lsls	r3, r3, #2
 8004320:	fbb2 f2f3 	udiv	r2, r2, r3
 8004324:	4b0c      	ldr	r3, [pc, #48]	; (8004358 <UART_SetConfig+0x118>)
 8004326:	fba3 0302 	umull	r0, r3, r3, r2
 800432a:	095b      	lsrs	r3, r3, #5
 800432c:	2064      	movs	r0, #100	; 0x64
 800432e:	fb00 f303 	mul.w	r3, r0, r3
 8004332:	1ad3      	subs	r3, r2, r3
 8004334:	011b      	lsls	r3, r3, #4
 8004336:	3332      	adds	r3, #50	; 0x32
 8004338:	4a07      	ldr	r2, [pc, #28]	; (8004358 <UART_SetConfig+0x118>)
 800433a:	fba2 2303 	umull	r2, r3, r2, r3
 800433e:	095b      	lsrs	r3, r3, #5
 8004340:	f003 020f 	and.w	r2, r3, #15
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	440a      	add	r2, r1
 800434a:	609a      	str	r2, [r3, #8]
 800434c:	bf00      	nop
 800434e:	3710      	adds	r7, #16
 8004350:	46bd      	mov	sp, r7
 8004352:	bd80      	pop	{r7, pc}
 8004354:	40013800 	.word	0x40013800
 8004358:	51eb851f 	.word	0x51eb851f

0800435c <__errno>:
 800435c:	4b01      	ldr	r3, [pc, #4]	; (8004364 <__errno+0x8>)
 800435e:	6818      	ldr	r0, [r3, #0]
 8004360:	4770      	bx	lr
 8004362:	bf00      	nop
 8004364:	20000030 	.word	0x20000030

08004368 <__libc_init_array>:
 8004368:	b570      	push	{r4, r5, r6, lr}
 800436a:	2600      	movs	r6, #0
 800436c:	4d0c      	ldr	r5, [pc, #48]	; (80043a0 <__libc_init_array+0x38>)
 800436e:	4c0d      	ldr	r4, [pc, #52]	; (80043a4 <__libc_init_array+0x3c>)
 8004370:	1b64      	subs	r4, r4, r5
 8004372:	10a4      	asrs	r4, r4, #2
 8004374:	42a6      	cmp	r6, r4
 8004376:	d109      	bne.n	800438c <__libc_init_array+0x24>
 8004378:	f000 fc5c 	bl	8004c34 <_init>
 800437c:	2600      	movs	r6, #0
 800437e:	4d0a      	ldr	r5, [pc, #40]	; (80043a8 <__libc_init_array+0x40>)
 8004380:	4c0a      	ldr	r4, [pc, #40]	; (80043ac <__libc_init_array+0x44>)
 8004382:	1b64      	subs	r4, r4, r5
 8004384:	10a4      	asrs	r4, r4, #2
 8004386:	42a6      	cmp	r6, r4
 8004388:	d105      	bne.n	8004396 <__libc_init_array+0x2e>
 800438a:	bd70      	pop	{r4, r5, r6, pc}
 800438c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004390:	4798      	blx	r3
 8004392:	3601      	adds	r6, #1
 8004394:	e7ee      	b.n	8004374 <__libc_init_array+0xc>
 8004396:	f855 3b04 	ldr.w	r3, [r5], #4
 800439a:	4798      	blx	r3
 800439c:	3601      	adds	r6, #1
 800439e:	e7f2      	b.n	8004386 <__libc_init_array+0x1e>
 80043a0:	08004d50 	.word	0x08004d50
 80043a4:	08004d50 	.word	0x08004d50
 80043a8:	08004d50 	.word	0x08004d50
 80043ac:	08004d54 	.word	0x08004d54

080043b0 <memset>:
 80043b0:	4603      	mov	r3, r0
 80043b2:	4402      	add	r2, r0
 80043b4:	4293      	cmp	r3, r2
 80043b6:	d100      	bne.n	80043ba <memset+0xa>
 80043b8:	4770      	bx	lr
 80043ba:	f803 1b01 	strb.w	r1, [r3], #1
 80043be:	e7f9      	b.n	80043b4 <memset+0x4>

080043c0 <siprintf>:
 80043c0:	b40e      	push	{r1, r2, r3}
 80043c2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80043c6:	b500      	push	{lr}
 80043c8:	b09c      	sub	sp, #112	; 0x70
 80043ca:	ab1d      	add	r3, sp, #116	; 0x74
 80043cc:	9002      	str	r0, [sp, #8]
 80043ce:	9006      	str	r0, [sp, #24]
 80043d0:	9107      	str	r1, [sp, #28]
 80043d2:	9104      	str	r1, [sp, #16]
 80043d4:	4808      	ldr	r0, [pc, #32]	; (80043f8 <siprintf+0x38>)
 80043d6:	4909      	ldr	r1, [pc, #36]	; (80043fc <siprintf+0x3c>)
 80043d8:	f853 2b04 	ldr.w	r2, [r3], #4
 80043dc:	9105      	str	r1, [sp, #20]
 80043de:	6800      	ldr	r0, [r0, #0]
 80043e0:	a902      	add	r1, sp, #8
 80043e2:	9301      	str	r3, [sp, #4]
 80043e4:	f000 f868 	bl	80044b8 <_svfiprintf_r>
 80043e8:	2200      	movs	r2, #0
 80043ea:	9b02      	ldr	r3, [sp, #8]
 80043ec:	701a      	strb	r2, [r3, #0]
 80043ee:	b01c      	add	sp, #112	; 0x70
 80043f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80043f4:	b003      	add	sp, #12
 80043f6:	4770      	bx	lr
 80043f8:	20000030 	.word	0x20000030
 80043fc:	ffff0208 	.word	0xffff0208

08004400 <__ssputs_r>:
 8004400:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004404:	688e      	ldr	r6, [r1, #8]
 8004406:	4682      	mov	sl, r0
 8004408:	429e      	cmp	r6, r3
 800440a:	460c      	mov	r4, r1
 800440c:	4690      	mov	r8, r2
 800440e:	461f      	mov	r7, r3
 8004410:	d838      	bhi.n	8004484 <__ssputs_r+0x84>
 8004412:	898a      	ldrh	r2, [r1, #12]
 8004414:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004418:	d032      	beq.n	8004480 <__ssputs_r+0x80>
 800441a:	6825      	ldr	r5, [r4, #0]
 800441c:	6909      	ldr	r1, [r1, #16]
 800441e:	3301      	adds	r3, #1
 8004420:	eba5 0901 	sub.w	r9, r5, r1
 8004424:	6965      	ldr	r5, [r4, #20]
 8004426:	444b      	add	r3, r9
 8004428:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800442c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004430:	106d      	asrs	r5, r5, #1
 8004432:	429d      	cmp	r5, r3
 8004434:	bf38      	it	cc
 8004436:	461d      	movcc	r5, r3
 8004438:	0553      	lsls	r3, r2, #21
 800443a:	d531      	bpl.n	80044a0 <__ssputs_r+0xa0>
 800443c:	4629      	mov	r1, r5
 800443e:	f000 fb53 	bl	8004ae8 <_malloc_r>
 8004442:	4606      	mov	r6, r0
 8004444:	b950      	cbnz	r0, 800445c <__ssputs_r+0x5c>
 8004446:	230c      	movs	r3, #12
 8004448:	f04f 30ff 	mov.w	r0, #4294967295
 800444c:	f8ca 3000 	str.w	r3, [sl]
 8004450:	89a3      	ldrh	r3, [r4, #12]
 8004452:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004456:	81a3      	strh	r3, [r4, #12]
 8004458:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800445c:	464a      	mov	r2, r9
 800445e:	6921      	ldr	r1, [r4, #16]
 8004460:	f000 face 	bl	8004a00 <memcpy>
 8004464:	89a3      	ldrh	r3, [r4, #12]
 8004466:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800446a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800446e:	81a3      	strh	r3, [r4, #12]
 8004470:	6126      	str	r6, [r4, #16]
 8004472:	444e      	add	r6, r9
 8004474:	6026      	str	r6, [r4, #0]
 8004476:	463e      	mov	r6, r7
 8004478:	6165      	str	r5, [r4, #20]
 800447a:	eba5 0509 	sub.w	r5, r5, r9
 800447e:	60a5      	str	r5, [r4, #8]
 8004480:	42be      	cmp	r6, r7
 8004482:	d900      	bls.n	8004486 <__ssputs_r+0x86>
 8004484:	463e      	mov	r6, r7
 8004486:	4632      	mov	r2, r6
 8004488:	4641      	mov	r1, r8
 800448a:	6820      	ldr	r0, [r4, #0]
 800448c:	f000 fac6 	bl	8004a1c <memmove>
 8004490:	68a3      	ldr	r3, [r4, #8]
 8004492:	6822      	ldr	r2, [r4, #0]
 8004494:	1b9b      	subs	r3, r3, r6
 8004496:	4432      	add	r2, r6
 8004498:	2000      	movs	r0, #0
 800449a:	60a3      	str	r3, [r4, #8]
 800449c:	6022      	str	r2, [r4, #0]
 800449e:	e7db      	b.n	8004458 <__ssputs_r+0x58>
 80044a0:	462a      	mov	r2, r5
 80044a2:	f000 fb7b 	bl	8004b9c <_realloc_r>
 80044a6:	4606      	mov	r6, r0
 80044a8:	2800      	cmp	r0, #0
 80044aa:	d1e1      	bne.n	8004470 <__ssputs_r+0x70>
 80044ac:	4650      	mov	r0, sl
 80044ae:	6921      	ldr	r1, [r4, #16]
 80044b0:	f000 face 	bl	8004a50 <_free_r>
 80044b4:	e7c7      	b.n	8004446 <__ssputs_r+0x46>
	...

080044b8 <_svfiprintf_r>:
 80044b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044bc:	4698      	mov	r8, r3
 80044be:	898b      	ldrh	r3, [r1, #12]
 80044c0:	4607      	mov	r7, r0
 80044c2:	061b      	lsls	r3, r3, #24
 80044c4:	460d      	mov	r5, r1
 80044c6:	4614      	mov	r4, r2
 80044c8:	b09d      	sub	sp, #116	; 0x74
 80044ca:	d50e      	bpl.n	80044ea <_svfiprintf_r+0x32>
 80044cc:	690b      	ldr	r3, [r1, #16]
 80044ce:	b963      	cbnz	r3, 80044ea <_svfiprintf_r+0x32>
 80044d0:	2140      	movs	r1, #64	; 0x40
 80044d2:	f000 fb09 	bl	8004ae8 <_malloc_r>
 80044d6:	6028      	str	r0, [r5, #0]
 80044d8:	6128      	str	r0, [r5, #16]
 80044da:	b920      	cbnz	r0, 80044e6 <_svfiprintf_r+0x2e>
 80044dc:	230c      	movs	r3, #12
 80044de:	603b      	str	r3, [r7, #0]
 80044e0:	f04f 30ff 	mov.w	r0, #4294967295
 80044e4:	e0d1      	b.n	800468a <_svfiprintf_r+0x1d2>
 80044e6:	2340      	movs	r3, #64	; 0x40
 80044e8:	616b      	str	r3, [r5, #20]
 80044ea:	2300      	movs	r3, #0
 80044ec:	9309      	str	r3, [sp, #36]	; 0x24
 80044ee:	2320      	movs	r3, #32
 80044f0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80044f4:	2330      	movs	r3, #48	; 0x30
 80044f6:	f04f 0901 	mov.w	r9, #1
 80044fa:	f8cd 800c 	str.w	r8, [sp, #12]
 80044fe:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80046a4 <_svfiprintf_r+0x1ec>
 8004502:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004506:	4623      	mov	r3, r4
 8004508:	469a      	mov	sl, r3
 800450a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800450e:	b10a      	cbz	r2, 8004514 <_svfiprintf_r+0x5c>
 8004510:	2a25      	cmp	r2, #37	; 0x25
 8004512:	d1f9      	bne.n	8004508 <_svfiprintf_r+0x50>
 8004514:	ebba 0b04 	subs.w	fp, sl, r4
 8004518:	d00b      	beq.n	8004532 <_svfiprintf_r+0x7a>
 800451a:	465b      	mov	r3, fp
 800451c:	4622      	mov	r2, r4
 800451e:	4629      	mov	r1, r5
 8004520:	4638      	mov	r0, r7
 8004522:	f7ff ff6d 	bl	8004400 <__ssputs_r>
 8004526:	3001      	adds	r0, #1
 8004528:	f000 80aa 	beq.w	8004680 <_svfiprintf_r+0x1c8>
 800452c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800452e:	445a      	add	r2, fp
 8004530:	9209      	str	r2, [sp, #36]	; 0x24
 8004532:	f89a 3000 	ldrb.w	r3, [sl]
 8004536:	2b00      	cmp	r3, #0
 8004538:	f000 80a2 	beq.w	8004680 <_svfiprintf_r+0x1c8>
 800453c:	2300      	movs	r3, #0
 800453e:	f04f 32ff 	mov.w	r2, #4294967295
 8004542:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004546:	f10a 0a01 	add.w	sl, sl, #1
 800454a:	9304      	str	r3, [sp, #16]
 800454c:	9307      	str	r3, [sp, #28]
 800454e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004552:	931a      	str	r3, [sp, #104]	; 0x68
 8004554:	4654      	mov	r4, sl
 8004556:	2205      	movs	r2, #5
 8004558:	f814 1b01 	ldrb.w	r1, [r4], #1
 800455c:	4851      	ldr	r0, [pc, #324]	; (80046a4 <_svfiprintf_r+0x1ec>)
 800455e:	f000 fa41 	bl	80049e4 <memchr>
 8004562:	9a04      	ldr	r2, [sp, #16]
 8004564:	b9d8      	cbnz	r0, 800459e <_svfiprintf_r+0xe6>
 8004566:	06d0      	lsls	r0, r2, #27
 8004568:	bf44      	itt	mi
 800456a:	2320      	movmi	r3, #32
 800456c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004570:	0711      	lsls	r1, r2, #28
 8004572:	bf44      	itt	mi
 8004574:	232b      	movmi	r3, #43	; 0x2b
 8004576:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800457a:	f89a 3000 	ldrb.w	r3, [sl]
 800457e:	2b2a      	cmp	r3, #42	; 0x2a
 8004580:	d015      	beq.n	80045ae <_svfiprintf_r+0xf6>
 8004582:	4654      	mov	r4, sl
 8004584:	2000      	movs	r0, #0
 8004586:	f04f 0c0a 	mov.w	ip, #10
 800458a:	9a07      	ldr	r2, [sp, #28]
 800458c:	4621      	mov	r1, r4
 800458e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004592:	3b30      	subs	r3, #48	; 0x30
 8004594:	2b09      	cmp	r3, #9
 8004596:	d94e      	bls.n	8004636 <_svfiprintf_r+0x17e>
 8004598:	b1b0      	cbz	r0, 80045c8 <_svfiprintf_r+0x110>
 800459a:	9207      	str	r2, [sp, #28]
 800459c:	e014      	b.n	80045c8 <_svfiprintf_r+0x110>
 800459e:	eba0 0308 	sub.w	r3, r0, r8
 80045a2:	fa09 f303 	lsl.w	r3, r9, r3
 80045a6:	4313      	orrs	r3, r2
 80045a8:	46a2      	mov	sl, r4
 80045aa:	9304      	str	r3, [sp, #16]
 80045ac:	e7d2      	b.n	8004554 <_svfiprintf_r+0x9c>
 80045ae:	9b03      	ldr	r3, [sp, #12]
 80045b0:	1d19      	adds	r1, r3, #4
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	9103      	str	r1, [sp, #12]
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	bfbb      	ittet	lt
 80045ba:	425b      	neglt	r3, r3
 80045bc:	f042 0202 	orrlt.w	r2, r2, #2
 80045c0:	9307      	strge	r3, [sp, #28]
 80045c2:	9307      	strlt	r3, [sp, #28]
 80045c4:	bfb8      	it	lt
 80045c6:	9204      	strlt	r2, [sp, #16]
 80045c8:	7823      	ldrb	r3, [r4, #0]
 80045ca:	2b2e      	cmp	r3, #46	; 0x2e
 80045cc:	d10c      	bne.n	80045e8 <_svfiprintf_r+0x130>
 80045ce:	7863      	ldrb	r3, [r4, #1]
 80045d0:	2b2a      	cmp	r3, #42	; 0x2a
 80045d2:	d135      	bne.n	8004640 <_svfiprintf_r+0x188>
 80045d4:	9b03      	ldr	r3, [sp, #12]
 80045d6:	3402      	adds	r4, #2
 80045d8:	1d1a      	adds	r2, r3, #4
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	9203      	str	r2, [sp, #12]
 80045de:	2b00      	cmp	r3, #0
 80045e0:	bfb8      	it	lt
 80045e2:	f04f 33ff 	movlt.w	r3, #4294967295
 80045e6:	9305      	str	r3, [sp, #20]
 80045e8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80046b4 <_svfiprintf_r+0x1fc>
 80045ec:	2203      	movs	r2, #3
 80045ee:	4650      	mov	r0, sl
 80045f0:	7821      	ldrb	r1, [r4, #0]
 80045f2:	f000 f9f7 	bl	80049e4 <memchr>
 80045f6:	b140      	cbz	r0, 800460a <_svfiprintf_r+0x152>
 80045f8:	2340      	movs	r3, #64	; 0x40
 80045fa:	eba0 000a 	sub.w	r0, r0, sl
 80045fe:	fa03 f000 	lsl.w	r0, r3, r0
 8004602:	9b04      	ldr	r3, [sp, #16]
 8004604:	3401      	adds	r4, #1
 8004606:	4303      	orrs	r3, r0
 8004608:	9304      	str	r3, [sp, #16]
 800460a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800460e:	2206      	movs	r2, #6
 8004610:	4825      	ldr	r0, [pc, #148]	; (80046a8 <_svfiprintf_r+0x1f0>)
 8004612:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004616:	f000 f9e5 	bl	80049e4 <memchr>
 800461a:	2800      	cmp	r0, #0
 800461c:	d038      	beq.n	8004690 <_svfiprintf_r+0x1d8>
 800461e:	4b23      	ldr	r3, [pc, #140]	; (80046ac <_svfiprintf_r+0x1f4>)
 8004620:	bb1b      	cbnz	r3, 800466a <_svfiprintf_r+0x1b2>
 8004622:	9b03      	ldr	r3, [sp, #12]
 8004624:	3307      	adds	r3, #7
 8004626:	f023 0307 	bic.w	r3, r3, #7
 800462a:	3308      	adds	r3, #8
 800462c:	9303      	str	r3, [sp, #12]
 800462e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004630:	4433      	add	r3, r6
 8004632:	9309      	str	r3, [sp, #36]	; 0x24
 8004634:	e767      	b.n	8004506 <_svfiprintf_r+0x4e>
 8004636:	460c      	mov	r4, r1
 8004638:	2001      	movs	r0, #1
 800463a:	fb0c 3202 	mla	r2, ip, r2, r3
 800463e:	e7a5      	b.n	800458c <_svfiprintf_r+0xd4>
 8004640:	2300      	movs	r3, #0
 8004642:	f04f 0c0a 	mov.w	ip, #10
 8004646:	4619      	mov	r1, r3
 8004648:	3401      	adds	r4, #1
 800464a:	9305      	str	r3, [sp, #20]
 800464c:	4620      	mov	r0, r4
 800464e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004652:	3a30      	subs	r2, #48	; 0x30
 8004654:	2a09      	cmp	r2, #9
 8004656:	d903      	bls.n	8004660 <_svfiprintf_r+0x1a8>
 8004658:	2b00      	cmp	r3, #0
 800465a:	d0c5      	beq.n	80045e8 <_svfiprintf_r+0x130>
 800465c:	9105      	str	r1, [sp, #20]
 800465e:	e7c3      	b.n	80045e8 <_svfiprintf_r+0x130>
 8004660:	4604      	mov	r4, r0
 8004662:	2301      	movs	r3, #1
 8004664:	fb0c 2101 	mla	r1, ip, r1, r2
 8004668:	e7f0      	b.n	800464c <_svfiprintf_r+0x194>
 800466a:	ab03      	add	r3, sp, #12
 800466c:	9300      	str	r3, [sp, #0]
 800466e:	462a      	mov	r2, r5
 8004670:	4638      	mov	r0, r7
 8004672:	4b0f      	ldr	r3, [pc, #60]	; (80046b0 <_svfiprintf_r+0x1f8>)
 8004674:	a904      	add	r1, sp, #16
 8004676:	f3af 8000 	nop.w
 800467a:	1c42      	adds	r2, r0, #1
 800467c:	4606      	mov	r6, r0
 800467e:	d1d6      	bne.n	800462e <_svfiprintf_r+0x176>
 8004680:	89ab      	ldrh	r3, [r5, #12]
 8004682:	065b      	lsls	r3, r3, #25
 8004684:	f53f af2c 	bmi.w	80044e0 <_svfiprintf_r+0x28>
 8004688:	9809      	ldr	r0, [sp, #36]	; 0x24
 800468a:	b01d      	add	sp, #116	; 0x74
 800468c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004690:	ab03      	add	r3, sp, #12
 8004692:	9300      	str	r3, [sp, #0]
 8004694:	462a      	mov	r2, r5
 8004696:	4638      	mov	r0, r7
 8004698:	4b05      	ldr	r3, [pc, #20]	; (80046b0 <_svfiprintf_r+0x1f8>)
 800469a:	a904      	add	r1, sp, #16
 800469c:	f000 f87c 	bl	8004798 <_printf_i>
 80046a0:	e7eb      	b.n	800467a <_svfiprintf_r+0x1c2>
 80046a2:	bf00      	nop
 80046a4:	08004d1c 	.word	0x08004d1c
 80046a8:	08004d26 	.word	0x08004d26
 80046ac:	00000000 	.word	0x00000000
 80046b0:	08004401 	.word	0x08004401
 80046b4:	08004d22 	.word	0x08004d22

080046b8 <_printf_common>:
 80046b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80046bc:	4616      	mov	r6, r2
 80046be:	4699      	mov	r9, r3
 80046c0:	688a      	ldr	r2, [r1, #8]
 80046c2:	690b      	ldr	r3, [r1, #16]
 80046c4:	4607      	mov	r7, r0
 80046c6:	4293      	cmp	r3, r2
 80046c8:	bfb8      	it	lt
 80046ca:	4613      	movlt	r3, r2
 80046cc:	6033      	str	r3, [r6, #0]
 80046ce:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80046d2:	460c      	mov	r4, r1
 80046d4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80046d8:	b10a      	cbz	r2, 80046de <_printf_common+0x26>
 80046da:	3301      	adds	r3, #1
 80046dc:	6033      	str	r3, [r6, #0]
 80046de:	6823      	ldr	r3, [r4, #0]
 80046e0:	0699      	lsls	r1, r3, #26
 80046e2:	bf42      	ittt	mi
 80046e4:	6833      	ldrmi	r3, [r6, #0]
 80046e6:	3302      	addmi	r3, #2
 80046e8:	6033      	strmi	r3, [r6, #0]
 80046ea:	6825      	ldr	r5, [r4, #0]
 80046ec:	f015 0506 	ands.w	r5, r5, #6
 80046f0:	d106      	bne.n	8004700 <_printf_common+0x48>
 80046f2:	f104 0a19 	add.w	sl, r4, #25
 80046f6:	68e3      	ldr	r3, [r4, #12]
 80046f8:	6832      	ldr	r2, [r6, #0]
 80046fa:	1a9b      	subs	r3, r3, r2
 80046fc:	42ab      	cmp	r3, r5
 80046fe:	dc28      	bgt.n	8004752 <_printf_common+0x9a>
 8004700:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004704:	1e13      	subs	r3, r2, #0
 8004706:	6822      	ldr	r2, [r4, #0]
 8004708:	bf18      	it	ne
 800470a:	2301      	movne	r3, #1
 800470c:	0692      	lsls	r2, r2, #26
 800470e:	d42d      	bmi.n	800476c <_printf_common+0xb4>
 8004710:	4649      	mov	r1, r9
 8004712:	4638      	mov	r0, r7
 8004714:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004718:	47c0      	blx	r8
 800471a:	3001      	adds	r0, #1
 800471c:	d020      	beq.n	8004760 <_printf_common+0xa8>
 800471e:	6823      	ldr	r3, [r4, #0]
 8004720:	68e5      	ldr	r5, [r4, #12]
 8004722:	f003 0306 	and.w	r3, r3, #6
 8004726:	2b04      	cmp	r3, #4
 8004728:	bf18      	it	ne
 800472a:	2500      	movne	r5, #0
 800472c:	6832      	ldr	r2, [r6, #0]
 800472e:	f04f 0600 	mov.w	r6, #0
 8004732:	68a3      	ldr	r3, [r4, #8]
 8004734:	bf08      	it	eq
 8004736:	1aad      	subeq	r5, r5, r2
 8004738:	6922      	ldr	r2, [r4, #16]
 800473a:	bf08      	it	eq
 800473c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004740:	4293      	cmp	r3, r2
 8004742:	bfc4      	itt	gt
 8004744:	1a9b      	subgt	r3, r3, r2
 8004746:	18ed      	addgt	r5, r5, r3
 8004748:	341a      	adds	r4, #26
 800474a:	42b5      	cmp	r5, r6
 800474c:	d11a      	bne.n	8004784 <_printf_common+0xcc>
 800474e:	2000      	movs	r0, #0
 8004750:	e008      	b.n	8004764 <_printf_common+0xac>
 8004752:	2301      	movs	r3, #1
 8004754:	4652      	mov	r2, sl
 8004756:	4649      	mov	r1, r9
 8004758:	4638      	mov	r0, r7
 800475a:	47c0      	blx	r8
 800475c:	3001      	adds	r0, #1
 800475e:	d103      	bne.n	8004768 <_printf_common+0xb0>
 8004760:	f04f 30ff 	mov.w	r0, #4294967295
 8004764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004768:	3501      	adds	r5, #1
 800476a:	e7c4      	b.n	80046f6 <_printf_common+0x3e>
 800476c:	2030      	movs	r0, #48	; 0x30
 800476e:	18e1      	adds	r1, r4, r3
 8004770:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004774:	1c5a      	adds	r2, r3, #1
 8004776:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800477a:	4422      	add	r2, r4
 800477c:	3302      	adds	r3, #2
 800477e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004782:	e7c5      	b.n	8004710 <_printf_common+0x58>
 8004784:	2301      	movs	r3, #1
 8004786:	4622      	mov	r2, r4
 8004788:	4649      	mov	r1, r9
 800478a:	4638      	mov	r0, r7
 800478c:	47c0      	blx	r8
 800478e:	3001      	adds	r0, #1
 8004790:	d0e6      	beq.n	8004760 <_printf_common+0xa8>
 8004792:	3601      	adds	r6, #1
 8004794:	e7d9      	b.n	800474a <_printf_common+0x92>
	...

08004798 <_printf_i>:
 8004798:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800479c:	460c      	mov	r4, r1
 800479e:	7e27      	ldrb	r7, [r4, #24]
 80047a0:	4691      	mov	r9, r2
 80047a2:	2f78      	cmp	r7, #120	; 0x78
 80047a4:	4680      	mov	r8, r0
 80047a6:	469a      	mov	sl, r3
 80047a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80047aa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80047ae:	d807      	bhi.n	80047c0 <_printf_i+0x28>
 80047b0:	2f62      	cmp	r7, #98	; 0x62
 80047b2:	d80a      	bhi.n	80047ca <_printf_i+0x32>
 80047b4:	2f00      	cmp	r7, #0
 80047b6:	f000 80d9 	beq.w	800496c <_printf_i+0x1d4>
 80047ba:	2f58      	cmp	r7, #88	; 0x58
 80047bc:	f000 80a4 	beq.w	8004908 <_printf_i+0x170>
 80047c0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80047c4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80047c8:	e03a      	b.n	8004840 <_printf_i+0xa8>
 80047ca:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80047ce:	2b15      	cmp	r3, #21
 80047d0:	d8f6      	bhi.n	80047c0 <_printf_i+0x28>
 80047d2:	a001      	add	r0, pc, #4	; (adr r0, 80047d8 <_printf_i+0x40>)
 80047d4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80047d8:	08004831 	.word	0x08004831
 80047dc:	08004845 	.word	0x08004845
 80047e0:	080047c1 	.word	0x080047c1
 80047e4:	080047c1 	.word	0x080047c1
 80047e8:	080047c1 	.word	0x080047c1
 80047ec:	080047c1 	.word	0x080047c1
 80047f0:	08004845 	.word	0x08004845
 80047f4:	080047c1 	.word	0x080047c1
 80047f8:	080047c1 	.word	0x080047c1
 80047fc:	080047c1 	.word	0x080047c1
 8004800:	080047c1 	.word	0x080047c1
 8004804:	08004953 	.word	0x08004953
 8004808:	08004875 	.word	0x08004875
 800480c:	08004935 	.word	0x08004935
 8004810:	080047c1 	.word	0x080047c1
 8004814:	080047c1 	.word	0x080047c1
 8004818:	08004975 	.word	0x08004975
 800481c:	080047c1 	.word	0x080047c1
 8004820:	08004875 	.word	0x08004875
 8004824:	080047c1 	.word	0x080047c1
 8004828:	080047c1 	.word	0x080047c1
 800482c:	0800493d 	.word	0x0800493d
 8004830:	680b      	ldr	r3, [r1, #0]
 8004832:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004836:	1d1a      	adds	r2, r3, #4
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	600a      	str	r2, [r1, #0]
 800483c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004840:	2301      	movs	r3, #1
 8004842:	e0a4      	b.n	800498e <_printf_i+0x1f6>
 8004844:	6825      	ldr	r5, [r4, #0]
 8004846:	6808      	ldr	r0, [r1, #0]
 8004848:	062e      	lsls	r6, r5, #24
 800484a:	f100 0304 	add.w	r3, r0, #4
 800484e:	d50a      	bpl.n	8004866 <_printf_i+0xce>
 8004850:	6805      	ldr	r5, [r0, #0]
 8004852:	600b      	str	r3, [r1, #0]
 8004854:	2d00      	cmp	r5, #0
 8004856:	da03      	bge.n	8004860 <_printf_i+0xc8>
 8004858:	232d      	movs	r3, #45	; 0x2d
 800485a:	426d      	negs	r5, r5
 800485c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004860:	230a      	movs	r3, #10
 8004862:	485e      	ldr	r0, [pc, #376]	; (80049dc <_printf_i+0x244>)
 8004864:	e019      	b.n	800489a <_printf_i+0x102>
 8004866:	f015 0f40 	tst.w	r5, #64	; 0x40
 800486a:	6805      	ldr	r5, [r0, #0]
 800486c:	600b      	str	r3, [r1, #0]
 800486e:	bf18      	it	ne
 8004870:	b22d      	sxthne	r5, r5
 8004872:	e7ef      	b.n	8004854 <_printf_i+0xbc>
 8004874:	680b      	ldr	r3, [r1, #0]
 8004876:	6825      	ldr	r5, [r4, #0]
 8004878:	1d18      	adds	r0, r3, #4
 800487a:	6008      	str	r0, [r1, #0]
 800487c:	0628      	lsls	r0, r5, #24
 800487e:	d501      	bpl.n	8004884 <_printf_i+0xec>
 8004880:	681d      	ldr	r5, [r3, #0]
 8004882:	e002      	b.n	800488a <_printf_i+0xf2>
 8004884:	0669      	lsls	r1, r5, #25
 8004886:	d5fb      	bpl.n	8004880 <_printf_i+0xe8>
 8004888:	881d      	ldrh	r5, [r3, #0]
 800488a:	2f6f      	cmp	r7, #111	; 0x6f
 800488c:	bf0c      	ite	eq
 800488e:	2308      	moveq	r3, #8
 8004890:	230a      	movne	r3, #10
 8004892:	4852      	ldr	r0, [pc, #328]	; (80049dc <_printf_i+0x244>)
 8004894:	2100      	movs	r1, #0
 8004896:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800489a:	6866      	ldr	r6, [r4, #4]
 800489c:	2e00      	cmp	r6, #0
 800489e:	bfa8      	it	ge
 80048a0:	6821      	ldrge	r1, [r4, #0]
 80048a2:	60a6      	str	r6, [r4, #8]
 80048a4:	bfa4      	itt	ge
 80048a6:	f021 0104 	bicge.w	r1, r1, #4
 80048aa:	6021      	strge	r1, [r4, #0]
 80048ac:	b90d      	cbnz	r5, 80048b2 <_printf_i+0x11a>
 80048ae:	2e00      	cmp	r6, #0
 80048b0:	d04d      	beq.n	800494e <_printf_i+0x1b6>
 80048b2:	4616      	mov	r6, r2
 80048b4:	fbb5 f1f3 	udiv	r1, r5, r3
 80048b8:	fb03 5711 	mls	r7, r3, r1, r5
 80048bc:	5dc7      	ldrb	r7, [r0, r7]
 80048be:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80048c2:	462f      	mov	r7, r5
 80048c4:	42bb      	cmp	r3, r7
 80048c6:	460d      	mov	r5, r1
 80048c8:	d9f4      	bls.n	80048b4 <_printf_i+0x11c>
 80048ca:	2b08      	cmp	r3, #8
 80048cc:	d10b      	bne.n	80048e6 <_printf_i+0x14e>
 80048ce:	6823      	ldr	r3, [r4, #0]
 80048d0:	07df      	lsls	r7, r3, #31
 80048d2:	d508      	bpl.n	80048e6 <_printf_i+0x14e>
 80048d4:	6923      	ldr	r3, [r4, #16]
 80048d6:	6861      	ldr	r1, [r4, #4]
 80048d8:	4299      	cmp	r1, r3
 80048da:	bfde      	ittt	le
 80048dc:	2330      	movle	r3, #48	; 0x30
 80048de:	f806 3c01 	strble.w	r3, [r6, #-1]
 80048e2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80048e6:	1b92      	subs	r2, r2, r6
 80048e8:	6122      	str	r2, [r4, #16]
 80048ea:	464b      	mov	r3, r9
 80048ec:	4621      	mov	r1, r4
 80048ee:	4640      	mov	r0, r8
 80048f0:	f8cd a000 	str.w	sl, [sp]
 80048f4:	aa03      	add	r2, sp, #12
 80048f6:	f7ff fedf 	bl	80046b8 <_printf_common>
 80048fa:	3001      	adds	r0, #1
 80048fc:	d14c      	bne.n	8004998 <_printf_i+0x200>
 80048fe:	f04f 30ff 	mov.w	r0, #4294967295
 8004902:	b004      	add	sp, #16
 8004904:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004908:	4834      	ldr	r0, [pc, #208]	; (80049dc <_printf_i+0x244>)
 800490a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800490e:	680e      	ldr	r6, [r1, #0]
 8004910:	6823      	ldr	r3, [r4, #0]
 8004912:	f856 5b04 	ldr.w	r5, [r6], #4
 8004916:	061f      	lsls	r7, r3, #24
 8004918:	600e      	str	r6, [r1, #0]
 800491a:	d514      	bpl.n	8004946 <_printf_i+0x1ae>
 800491c:	07d9      	lsls	r1, r3, #31
 800491e:	bf44      	itt	mi
 8004920:	f043 0320 	orrmi.w	r3, r3, #32
 8004924:	6023      	strmi	r3, [r4, #0]
 8004926:	b91d      	cbnz	r5, 8004930 <_printf_i+0x198>
 8004928:	6823      	ldr	r3, [r4, #0]
 800492a:	f023 0320 	bic.w	r3, r3, #32
 800492e:	6023      	str	r3, [r4, #0]
 8004930:	2310      	movs	r3, #16
 8004932:	e7af      	b.n	8004894 <_printf_i+0xfc>
 8004934:	6823      	ldr	r3, [r4, #0]
 8004936:	f043 0320 	orr.w	r3, r3, #32
 800493a:	6023      	str	r3, [r4, #0]
 800493c:	2378      	movs	r3, #120	; 0x78
 800493e:	4828      	ldr	r0, [pc, #160]	; (80049e0 <_printf_i+0x248>)
 8004940:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004944:	e7e3      	b.n	800490e <_printf_i+0x176>
 8004946:	065e      	lsls	r6, r3, #25
 8004948:	bf48      	it	mi
 800494a:	b2ad      	uxthmi	r5, r5
 800494c:	e7e6      	b.n	800491c <_printf_i+0x184>
 800494e:	4616      	mov	r6, r2
 8004950:	e7bb      	b.n	80048ca <_printf_i+0x132>
 8004952:	680b      	ldr	r3, [r1, #0]
 8004954:	6826      	ldr	r6, [r4, #0]
 8004956:	1d1d      	adds	r5, r3, #4
 8004958:	6960      	ldr	r0, [r4, #20]
 800495a:	600d      	str	r5, [r1, #0]
 800495c:	0635      	lsls	r5, r6, #24
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	d501      	bpl.n	8004966 <_printf_i+0x1ce>
 8004962:	6018      	str	r0, [r3, #0]
 8004964:	e002      	b.n	800496c <_printf_i+0x1d4>
 8004966:	0671      	lsls	r1, r6, #25
 8004968:	d5fb      	bpl.n	8004962 <_printf_i+0x1ca>
 800496a:	8018      	strh	r0, [r3, #0]
 800496c:	2300      	movs	r3, #0
 800496e:	4616      	mov	r6, r2
 8004970:	6123      	str	r3, [r4, #16]
 8004972:	e7ba      	b.n	80048ea <_printf_i+0x152>
 8004974:	680b      	ldr	r3, [r1, #0]
 8004976:	1d1a      	adds	r2, r3, #4
 8004978:	600a      	str	r2, [r1, #0]
 800497a:	681e      	ldr	r6, [r3, #0]
 800497c:	2100      	movs	r1, #0
 800497e:	4630      	mov	r0, r6
 8004980:	6862      	ldr	r2, [r4, #4]
 8004982:	f000 f82f 	bl	80049e4 <memchr>
 8004986:	b108      	cbz	r0, 800498c <_printf_i+0x1f4>
 8004988:	1b80      	subs	r0, r0, r6
 800498a:	6060      	str	r0, [r4, #4]
 800498c:	6863      	ldr	r3, [r4, #4]
 800498e:	6123      	str	r3, [r4, #16]
 8004990:	2300      	movs	r3, #0
 8004992:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004996:	e7a8      	b.n	80048ea <_printf_i+0x152>
 8004998:	4632      	mov	r2, r6
 800499a:	4649      	mov	r1, r9
 800499c:	4640      	mov	r0, r8
 800499e:	6923      	ldr	r3, [r4, #16]
 80049a0:	47d0      	blx	sl
 80049a2:	3001      	adds	r0, #1
 80049a4:	d0ab      	beq.n	80048fe <_printf_i+0x166>
 80049a6:	6823      	ldr	r3, [r4, #0]
 80049a8:	079b      	lsls	r3, r3, #30
 80049aa:	d413      	bmi.n	80049d4 <_printf_i+0x23c>
 80049ac:	68e0      	ldr	r0, [r4, #12]
 80049ae:	9b03      	ldr	r3, [sp, #12]
 80049b0:	4298      	cmp	r0, r3
 80049b2:	bfb8      	it	lt
 80049b4:	4618      	movlt	r0, r3
 80049b6:	e7a4      	b.n	8004902 <_printf_i+0x16a>
 80049b8:	2301      	movs	r3, #1
 80049ba:	4632      	mov	r2, r6
 80049bc:	4649      	mov	r1, r9
 80049be:	4640      	mov	r0, r8
 80049c0:	47d0      	blx	sl
 80049c2:	3001      	adds	r0, #1
 80049c4:	d09b      	beq.n	80048fe <_printf_i+0x166>
 80049c6:	3501      	adds	r5, #1
 80049c8:	68e3      	ldr	r3, [r4, #12]
 80049ca:	9903      	ldr	r1, [sp, #12]
 80049cc:	1a5b      	subs	r3, r3, r1
 80049ce:	42ab      	cmp	r3, r5
 80049d0:	dcf2      	bgt.n	80049b8 <_printf_i+0x220>
 80049d2:	e7eb      	b.n	80049ac <_printf_i+0x214>
 80049d4:	2500      	movs	r5, #0
 80049d6:	f104 0619 	add.w	r6, r4, #25
 80049da:	e7f5      	b.n	80049c8 <_printf_i+0x230>
 80049dc:	08004d2d 	.word	0x08004d2d
 80049e0:	08004d3e 	.word	0x08004d3e

080049e4 <memchr>:
 80049e4:	4603      	mov	r3, r0
 80049e6:	b510      	push	{r4, lr}
 80049e8:	b2c9      	uxtb	r1, r1
 80049ea:	4402      	add	r2, r0
 80049ec:	4293      	cmp	r3, r2
 80049ee:	4618      	mov	r0, r3
 80049f0:	d101      	bne.n	80049f6 <memchr+0x12>
 80049f2:	2000      	movs	r0, #0
 80049f4:	e003      	b.n	80049fe <memchr+0x1a>
 80049f6:	7804      	ldrb	r4, [r0, #0]
 80049f8:	3301      	adds	r3, #1
 80049fa:	428c      	cmp	r4, r1
 80049fc:	d1f6      	bne.n	80049ec <memchr+0x8>
 80049fe:	bd10      	pop	{r4, pc}

08004a00 <memcpy>:
 8004a00:	440a      	add	r2, r1
 8004a02:	4291      	cmp	r1, r2
 8004a04:	f100 33ff 	add.w	r3, r0, #4294967295
 8004a08:	d100      	bne.n	8004a0c <memcpy+0xc>
 8004a0a:	4770      	bx	lr
 8004a0c:	b510      	push	{r4, lr}
 8004a0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004a12:	4291      	cmp	r1, r2
 8004a14:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004a18:	d1f9      	bne.n	8004a0e <memcpy+0xe>
 8004a1a:	bd10      	pop	{r4, pc}

08004a1c <memmove>:
 8004a1c:	4288      	cmp	r0, r1
 8004a1e:	b510      	push	{r4, lr}
 8004a20:	eb01 0402 	add.w	r4, r1, r2
 8004a24:	d902      	bls.n	8004a2c <memmove+0x10>
 8004a26:	4284      	cmp	r4, r0
 8004a28:	4623      	mov	r3, r4
 8004a2a:	d807      	bhi.n	8004a3c <memmove+0x20>
 8004a2c:	1e43      	subs	r3, r0, #1
 8004a2e:	42a1      	cmp	r1, r4
 8004a30:	d008      	beq.n	8004a44 <memmove+0x28>
 8004a32:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004a36:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004a3a:	e7f8      	b.n	8004a2e <memmove+0x12>
 8004a3c:	4601      	mov	r1, r0
 8004a3e:	4402      	add	r2, r0
 8004a40:	428a      	cmp	r2, r1
 8004a42:	d100      	bne.n	8004a46 <memmove+0x2a>
 8004a44:	bd10      	pop	{r4, pc}
 8004a46:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004a4a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004a4e:	e7f7      	b.n	8004a40 <memmove+0x24>

08004a50 <_free_r>:
 8004a50:	b538      	push	{r3, r4, r5, lr}
 8004a52:	4605      	mov	r5, r0
 8004a54:	2900      	cmp	r1, #0
 8004a56:	d043      	beq.n	8004ae0 <_free_r+0x90>
 8004a58:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004a5c:	1f0c      	subs	r4, r1, #4
 8004a5e:	2b00      	cmp	r3, #0
 8004a60:	bfb8      	it	lt
 8004a62:	18e4      	addlt	r4, r4, r3
 8004a64:	f000 f8d0 	bl	8004c08 <__malloc_lock>
 8004a68:	4a1e      	ldr	r2, [pc, #120]	; (8004ae4 <_free_r+0x94>)
 8004a6a:	6813      	ldr	r3, [r2, #0]
 8004a6c:	4610      	mov	r0, r2
 8004a6e:	b933      	cbnz	r3, 8004a7e <_free_r+0x2e>
 8004a70:	6063      	str	r3, [r4, #4]
 8004a72:	6014      	str	r4, [r2, #0]
 8004a74:	4628      	mov	r0, r5
 8004a76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004a7a:	f000 b8cb 	b.w	8004c14 <__malloc_unlock>
 8004a7e:	42a3      	cmp	r3, r4
 8004a80:	d90a      	bls.n	8004a98 <_free_r+0x48>
 8004a82:	6821      	ldr	r1, [r4, #0]
 8004a84:	1862      	adds	r2, r4, r1
 8004a86:	4293      	cmp	r3, r2
 8004a88:	bf01      	itttt	eq
 8004a8a:	681a      	ldreq	r2, [r3, #0]
 8004a8c:	685b      	ldreq	r3, [r3, #4]
 8004a8e:	1852      	addeq	r2, r2, r1
 8004a90:	6022      	streq	r2, [r4, #0]
 8004a92:	6063      	str	r3, [r4, #4]
 8004a94:	6004      	str	r4, [r0, #0]
 8004a96:	e7ed      	b.n	8004a74 <_free_r+0x24>
 8004a98:	461a      	mov	r2, r3
 8004a9a:	685b      	ldr	r3, [r3, #4]
 8004a9c:	b10b      	cbz	r3, 8004aa2 <_free_r+0x52>
 8004a9e:	42a3      	cmp	r3, r4
 8004aa0:	d9fa      	bls.n	8004a98 <_free_r+0x48>
 8004aa2:	6811      	ldr	r1, [r2, #0]
 8004aa4:	1850      	adds	r0, r2, r1
 8004aa6:	42a0      	cmp	r0, r4
 8004aa8:	d10b      	bne.n	8004ac2 <_free_r+0x72>
 8004aaa:	6820      	ldr	r0, [r4, #0]
 8004aac:	4401      	add	r1, r0
 8004aae:	1850      	adds	r0, r2, r1
 8004ab0:	4283      	cmp	r3, r0
 8004ab2:	6011      	str	r1, [r2, #0]
 8004ab4:	d1de      	bne.n	8004a74 <_free_r+0x24>
 8004ab6:	6818      	ldr	r0, [r3, #0]
 8004ab8:	685b      	ldr	r3, [r3, #4]
 8004aba:	4401      	add	r1, r0
 8004abc:	6011      	str	r1, [r2, #0]
 8004abe:	6053      	str	r3, [r2, #4]
 8004ac0:	e7d8      	b.n	8004a74 <_free_r+0x24>
 8004ac2:	d902      	bls.n	8004aca <_free_r+0x7a>
 8004ac4:	230c      	movs	r3, #12
 8004ac6:	602b      	str	r3, [r5, #0]
 8004ac8:	e7d4      	b.n	8004a74 <_free_r+0x24>
 8004aca:	6820      	ldr	r0, [r4, #0]
 8004acc:	1821      	adds	r1, r4, r0
 8004ace:	428b      	cmp	r3, r1
 8004ad0:	bf01      	itttt	eq
 8004ad2:	6819      	ldreq	r1, [r3, #0]
 8004ad4:	685b      	ldreq	r3, [r3, #4]
 8004ad6:	1809      	addeq	r1, r1, r0
 8004ad8:	6021      	streq	r1, [r4, #0]
 8004ada:	6063      	str	r3, [r4, #4]
 8004adc:	6054      	str	r4, [r2, #4]
 8004ade:	e7c9      	b.n	8004a74 <_free_r+0x24>
 8004ae0:	bd38      	pop	{r3, r4, r5, pc}
 8004ae2:	bf00      	nop
 8004ae4:	200000d4 	.word	0x200000d4

08004ae8 <_malloc_r>:
 8004ae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004aea:	1ccd      	adds	r5, r1, #3
 8004aec:	f025 0503 	bic.w	r5, r5, #3
 8004af0:	3508      	adds	r5, #8
 8004af2:	2d0c      	cmp	r5, #12
 8004af4:	bf38      	it	cc
 8004af6:	250c      	movcc	r5, #12
 8004af8:	2d00      	cmp	r5, #0
 8004afa:	4606      	mov	r6, r0
 8004afc:	db01      	blt.n	8004b02 <_malloc_r+0x1a>
 8004afe:	42a9      	cmp	r1, r5
 8004b00:	d903      	bls.n	8004b0a <_malloc_r+0x22>
 8004b02:	230c      	movs	r3, #12
 8004b04:	6033      	str	r3, [r6, #0]
 8004b06:	2000      	movs	r0, #0
 8004b08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004b0a:	f000 f87d 	bl	8004c08 <__malloc_lock>
 8004b0e:	4921      	ldr	r1, [pc, #132]	; (8004b94 <_malloc_r+0xac>)
 8004b10:	680a      	ldr	r2, [r1, #0]
 8004b12:	4614      	mov	r4, r2
 8004b14:	b99c      	cbnz	r4, 8004b3e <_malloc_r+0x56>
 8004b16:	4f20      	ldr	r7, [pc, #128]	; (8004b98 <_malloc_r+0xb0>)
 8004b18:	683b      	ldr	r3, [r7, #0]
 8004b1a:	b923      	cbnz	r3, 8004b26 <_malloc_r+0x3e>
 8004b1c:	4621      	mov	r1, r4
 8004b1e:	4630      	mov	r0, r6
 8004b20:	f000 f862 	bl	8004be8 <_sbrk_r>
 8004b24:	6038      	str	r0, [r7, #0]
 8004b26:	4629      	mov	r1, r5
 8004b28:	4630      	mov	r0, r6
 8004b2a:	f000 f85d 	bl	8004be8 <_sbrk_r>
 8004b2e:	1c43      	adds	r3, r0, #1
 8004b30:	d123      	bne.n	8004b7a <_malloc_r+0x92>
 8004b32:	230c      	movs	r3, #12
 8004b34:	4630      	mov	r0, r6
 8004b36:	6033      	str	r3, [r6, #0]
 8004b38:	f000 f86c 	bl	8004c14 <__malloc_unlock>
 8004b3c:	e7e3      	b.n	8004b06 <_malloc_r+0x1e>
 8004b3e:	6823      	ldr	r3, [r4, #0]
 8004b40:	1b5b      	subs	r3, r3, r5
 8004b42:	d417      	bmi.n	8004b74 <_malloc_r+0x8c>
 8004b44:	2b0b      	cmp	r3, #11
 8004b46:	d903      	bls.n	8004b50 <_malloc_r+0x68>
 8004b48:	6023      	str	r3, [r4, #0]
 8004b4a:	441c      	add	r4, r3
 8004b4c:	6025      	str	r5, [r4, #0]
 8004b4e:	e004      	b.n	8004b5a <_malloc_r+0x72>
 8004b50:	6863      	ldr	r3, [r4, #4]
 8004b52:	42a2      	cmp	r2, r4
 8004b54:	bf0c      	ite	eq
 8004b56:	600b      	streq	r3, [r1, #0]
 8004b58:	6053      	strne	r3, [r2, #4]
 8004b5a:	4630      	mov	r0, r6
 8004b5c:	f000 f85a 	bl	8004c14 <__malloc_unlock>
 8004b60:	f104 000b 	add.w	r0, r4, #11
 8004b64:	1d23      	adds	r3, r4, #4
 8004b66:	f020 0007 	bic.w	r0, r0, #7
 8004b6a:	1ac2      	subs	r2, r0, r3
 8004b6c:	d0cc      	beq.n	8004b08 <_malloc_r+0x20>
 8004b6e:	1a1b      	subs	r3, r3, r0
 8004b70:	50a3      	str	r3, [r4, r2]
 8004b72:	e7c9      	b.n	8004b08 <_malloc_r+0x20>
 8004b74:	4622      	mov	r2, r4
 8004b76:	6864      	ldr	r4, [r4, #4]
 8004b78:	e7cc      	b.n	8004b14 <_malloc_r+0x2c>
 8004b7a:	1cc4      	adds	r4, r0, #3
 8004b7c:	f024 0403 	bic.w	r4, r4, #3
 8004b80:	42a0      	cmp	r0, r4
 8004b82:	d0e3      	beq.n	8004b4c <_malloc_r+0x64>
 8004b84:	1a21      	subs	r1, r4, r0
 8004b86:	4630      	mov	r0, r6
 8004b88:	f000 f82e 	bl	8004be8 <_sbrk_r>
 8004b8c:	3001      	adds	r0, #1
 8004b8e:	d1dd      	bne.n	8004b4c <_malloc_r+0x64>
 8004b90:	e7cf      	b.n	8004b32 <_malloc_r+0x4a>
 8004b92:	bf00      	nop
 8004b94:	200000d4 	.word	0x200000d4
 8004b98:	200000d8 	.word	0x200000d8

08004b9c <_realloc_r>:
 8004b9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b9e:	4607      	mov	r7, r0
 8004ba0:	4614      	mov	r4, r2
 8004ba2:	460e      	mov	r6, r1
 8004ba4:	b921      	cbnz	r1, 8004bb0 <_realloc_r+0x14>
 8004ba6:	4611      	mov	r1, r2
 8004ba8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004bac:	f7ff bf9c 	b.w	8004ae8 <_malloc_r>
 8004bb0:	b922      	cbnz	r2, 8004bbc <_realloc_r+0x20>
 8004bb2:	f7ff ff4d 	bl	8004a50 <_free_r>
 8004bb6:	4625      	mov	r5, r4
 8004bb8:	4628      	mov	r0, r5
 8004bba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004bbc:	f000 f830 	bl	8004c20 <_malloc_usable_size_r>
 8004bc0:	42a0      	cmp	r0, r4
 8004bc2:	d20f      	bcs.n	8004be4 <_realloc_r+0x48>
 8004bc4:	4621      	mov	r1, r4
 8004bc6:	4638      	mov	r0, r7
 8004bc8:	f7ff ff8e 	bl	8004ae8 <_malloc_r>
 8004bcc:	4605      	mov	r5, r0
 8004bce:	2800      	cmp	r0, #0
 8004bd0:	d0f2      	beq.n	8004bb8 <_realloc_r+0x1c>
 8004bd2:	4631      	mov	r1, r6
 8004bd4:	4622      	mov	r2, r4
 8004bd6:	f7ff ff13 	bl	8004a00 <memcpy>
 8004bda:	4631      	mov	r1, r6
 8004bdc:	4638      	mov	r0, r7
 8004bde:	f7ff ff37 	bl	8004a50 <_free_r>
 8004be2:	e7e9      	b.n	8004bb8 <_realloc_r+0x1c>
 8004be4:	4635      	mov	r5, r6
 8004be6:	e7e7      	b.n	8004bb8 <_realloc_r+0x1c>

08004be8 <_sbrk_r>:
 8004be8:	b538      	push	{r3, r4, r5, lr}
 8004bea:	2300      	movs	r3, #0
 8004bec:	4d05      	ldr	r5, [pc, #20]	; (8004c04 <_sbrk_r+0x1c>)
 8004bee:	4604      	mov	r4, r0
 8004bf0:	4608      	mov	r0, r1
 8004bf2:	602b      	str	r3, [r5, #0]
 8004bf4:	f7fc fc86 	bl	8001504 <_sbrk>
 8004bf8:	1c43      	adds	r3, r0, #1
 8004bfa:	d102      	bne.n	8004c02 <_sbrk_r+0x1a>
 8004bfc:	682b      	ldr	r3, [r5, #0]
 8004bfe:	b103      	cbz	r3, 8004c02 <_sbrk_r+0x1a>
 8004c00:	6023      	str	r3, [r4, #0]
 8004c02:	bd38      	pop	{r3, r4, r5, pc}
 8004c04:	20000200 	.word	0x20000200

08004c08 <__malloc_lock>:
 8004c08:	4801      	ldr	r0, [pc, #4]	; (8004c10 <__malloc_lock+0x8>)
 8004c0a:	f000 b811 	b.w	8004c30 <__retarget_lock_acquire_recursive>
 8004c0e:	bf00      	nop
 8004c10:	20000208 	.word	0x20000208

08004c14 <__malloc_unlock>:
 8004c14:	4801      	ldr	r0, [pc, #4]	; (8004c1c <__malloc_unlock+0x8>)
 8004c16:	f000 b80c 	b.w	8004c32 <__retarget_lock_release_recursive>
 8004c1a:	bf00      	nop
 8004c1c:	20000208 	.word	0x20000208

08004c20 <_malloc_usable_size_r>:
 8004c20:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004c24:	1f18      	subs	r0, r3, #4
 8004c26:	2b00      	cmp	r3, #0
 8004c28:	bfbc      	itt	lt
 8004c2a:	580b      	ldrlt	r3, [r1, r0]
 8004c2c:	18c0      	addlt	r0, r0, r3
 8004c2e:	4770      	bx	lr

08004c30 <__retarget_lock_acquire_recursive>:
 8004c30:	4770      	bx	lr

08004c32 <__retarget_lock_release_recursive>:
 8004c32:	4770      	bx	lr

08004c34 <_init>:
 8004c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c36:	bf00      	nop
 8004c38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c3a:	bc08      	pop	{r3}
 8004c3c:	469e      	mov	lr, r3
 8004c3e:	4770      	bx	lr

08004c40 <_fini>:
 8004c40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c42:	bf00      	nop
 8004c44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c46:	bc08      	pop	{r3}
 8004c48:	469e      	mov	lr, r3
 8004c4a:	4770      	bx	lr
