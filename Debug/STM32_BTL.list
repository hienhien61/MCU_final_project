
STM32_BTL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004b98  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  08004ca4  08004ca4  00014ca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004da8  08004da8  00020094  2**0
                  CONTENTS
  4 .ARM          00000000  08004da8  08004da8  00020094  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004da8  08004da8  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004da8  08004da8  00014da8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004dac  08004dac  00014dac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  08004db0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  20000094  08004e44  00020094  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000210  08004e44  00020210  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 12 .debug_info   00016b38  00000000  00000000  000200bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002e68  00000000  00000000  00036bf5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000da8  00000000  00000000  00039a60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c68  00000000  00000000  0003a808  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019c1d  00000000  00000000  0003b470  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011bd7  00000000  00000000  0005508d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b2f1  00000000  00000000  00066c64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000f1f55  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000039d8  00000000  00000000  000f1fa8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000094 	.word	0x20000094
 8000128:	00000000 	.word	0x00000000
 800012c:	08004c8c 	.word	0x08004c8c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000098 	.word	0x20000098
 8000148:	08004c8c 	.word	0x08004c8c

0800014c <fsmHorLEDsRun>:
#include "LEDs_display.h"

int horizontal_status = MODE_INIT;
int vertical_status = MODE_INIT;

void fsmHorLEDsRun() {
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	// FSM for horizontal LEDs

	switch (horizontal_status) {
 8000150:	4b2a      	ldr	r3, [pc, #168]	; (80001fc <fsmHorLEDsRun+0xb0>)
 8000152:	681b      	ldr	r3, [r3, #0]
 8000154:	2b04      	cmp	r3, #4
 8000156:	d847      	bhi.n	80001e8 <fsmHorLEDsRun+0x9c>
 8000158:	a201      	add	r2, pc, #4	; (adr r2, 8000160 <fsmHorLEDsRun+0x14>)
 800015a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800015e:	bf00      	nop
 8000160:	08000175 	.word	0x08000175
 8000164:	080001e9 	.word	0x080001e9
 8000168:	08000189 	.word	0x08000189
 800016c:	080001a9 	.word	0x080001a9
 8000170:	080001c9 	.word	0x080001c9
		case MODE_INIT:
			horizontal_status = AUTO_RED;
 8000174:	4b21      	ldr	r3, [pc, #132]	; (80001fc <fsmHorLEDsRun+0xb0>)
 8000176:	2202      	movs	r2, #2
 8000178:	601a      	str	r2, [r3, #0]
			setTimer(0, RED_time);
 800017a:	4b21      	ldr	r3, [pc, #132]	; (8000200 <fsmHorLEDsRun+0xb4>)
 800017c:	681b      	ldr	r3, [r3, #0]
 800017e:	4619      	mov	r1, r3
 8000180:	2000      	movs	r0, #0
 8000182:	f001 fa4b 	bl	800161c <setTimer>
			break;
 8000186:	e036      	b.n	80001f6 <fsmHorLEDsRun+0xaa>

		case AUTO_RED:
			if (isTimerUp(0)) {
 8000188:	2000      	movs	r0, #0
 800018a:	f001 fa33 	bl	80015f4 <isTimerUp>
 800018e:	4603      	mov	r3, r0
 8000190:	2b00      	cmp	r3, #0
 8000192:	d02b      	beq.n	80001ec <fsmHorLEDsRun+0xa0>
				horizontal_status = AUTO_GREEN;
 8000194:	4b19      	ldr	r3, [pc, #100]	; (80001fc <fsmHorLEDsRun+0xb0>)
 8000196:	2203      	movs	r2, #3
 8000198:	601a      	str	r2, [r3, #0]
				setTimer(0, GREEN_time);
 800019a:	4b1a      	ldr	r3, [pc, #104]	; (8000204 <fsmHorLEDsRun+0xb8>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	4619      	mov	r1, r3
 80001a0:	2000      	movs	r0, #0
 80001a2:	f001 fa3b 	bl	800161c <setTimer>
			}
			break;
 80001a6:	e021      	b.n	80001ec <fsmHorLEDsRun+0xa0>

		case AUTO_GREEN:
			if (isTimerUp(0)) {
 80001a8:	2000      	movs	r0, #0
 80001aa:	f001 fa23 	bl	80015f4 <isTimerUp>
 80001ae:	4603      	mov	r3, r0
 80001b0:	2b00      	cmp	r3, #0
 80001b2:	d01d      	beq.n	80001f0 <fsmHorLEDsRun+0xa4>
				horizontal_status = AUTO_YELLOW;
 80001b4:	4b11      	ldr	r3, [pc, #68]	; (80001fc <fsmHorLEDsRun+0xb0>)
 80001b6:	2204      	movs	r2, #4
 80001b8:	601a      	str	r2, [r3, #0]
				setTimer(0, YELLOW_time);
 80001ba:	4b13      	ldr	r3, [pc, #76]	; (8000208 <fsmHorLEDsRun+0xbc>)
 80001bc:	681b      	ldr	r3, [r3, #0]
 80001be:	4619      	mov	r1, r3
 80001c0:	2000      	movs	r0, #0
 80001c2:	f001 fa2b 	bl	800161c <setTimer>
			}
			break;
 80001c6:	e013      	b.n	80001f0 <fsmHorLEDsRun+0xa4>

		case AUTO_YELLOW:
			if (isTimerUp(0)) {
 80001c8:	2000      	movs	r0, #0
 80001ca:	f001 fa13 	bl	80015f4 <isTimerUp>
 80001ce:	4603      	mov	r3, r0
 80001d0:	2b00      	cmp	r3, #0
 80001d2:	d00f      	beq.n	80001f4 <fsmHorLEDsRun+0xa8>
				horizontal_status = AUTO_RED;
 80001d4:	4b09      	ldr	r3, [pc, #36]	; (80001fc <fsmHorLEDsRun+0xb0>)
 80001d6:	2202      	movs	r2, #2
 80001d8:	601a      	str	r2, [r3, #0]
				setTimer(0, RED_time);
 80001da:	4b09      	ldr	r3, [pc, #36]	; (8000200 <fsmHorLEDsRun+0xb4>)
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	4619      	mov	r1, r3
 80001e0:	2000      	movs	r0, #0
 80001e2:	f001 fa1b 	bl	800161c <setTimer>
			}
			break;
 80001e6:	e005      	b.n	80001f4 <fsmHorLEDsRun+0xa8>

		default:
			break;
 80001e8:	bf00      	nop
 80001ea:	e004      	b.n	80001f6 <fsmHorLEDsRun+0xaa>
			break;
 80001ec:	bf00      	nop
 80001ee:	e002      	b.n	80001f6 <fsmHorLEDsRun+0xaa>
			break;
 80001f0:	bf00      	nop
 80001f2:	e000      	b.n	80001f6 <fsmHorLEDsRun+0xaa>
			break;
 80001f4:	bf00      	nop
	}
}
 80001f6:	bf00      	nop
 80001f8:	bd80      	pop	{r7, pc}
 80001fa:	bf00      	nop
 80001fc:	200000b0 	.word	0x200000b0
 8000200:	20000018 	.word	0x20000018
 8000204:	2000001c 	.word	0x2000001c
 8000208:	20000020 	.word	0x20000020

0800020c <fsmVerLEDsRun>:


void fsmVerLEDsRun() {
 800020c:	b580      	push	{r7, lr}
 800020e:	af00      	add	r7, sp, #0
	// FSM for vertical LEDs

	switch (vertical_status) {
 8000210:	4b2a      	ldr	r3, [pc, #168]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	2b04      	cmp	r3, #4
 8000216:	d847      	bhi.n	80002a8 <fsmVerLEDsRun+0x9c>
 8000218:	a201      	add	r2, pc, #4	; (adr r2, 8000220 <fsmVerLEDsRun+0x14>)
 800021a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800021e:	bf00      	nop
 8000220:	08000235 	.word	0x08000235
 8000224:	080002a9 	.word	0x080002a9
 8000228:	08000249 	.word	0x08000249
 800022c:	08000269 	.word	0x08000269
 8000230:	08000289 	.word	0x08000289
		case MODE_INIT:
			vertical_status = AUTO_GREEN;
 8000234:	4b21      	ldr	r3, [pc, #132]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000236:	2203      	movs	r2, #3
 8000238:	601a      	str	r2, [r3, #0]
			setTimer(1, GREEN_time);
 800023a:	4b21      	ldr	r3, [pc, #132]	; (80002c0 <fsmVerLEDsRun+0xb4>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4619      	mov	r1, r3
 8000240:	2001      	movs	r0, #1
 8000242:	f001 f9eb 	bl	800161c <setTimer>
			break;
 8000246:	e036      	b.n	80002b6 <fsmVerLEDsRun+0xaa>

		case AUTO_RED:
			if (isTimerUp(1)) {
 8000248:	2001      	movs	r0, #1
 800024a:	f001 f9d3 	bl	80015f4 <isTimerUp>
 800024e:	4603      	mov	r3, r0
 8000250:	2b00      	cmp	r3, #0
 8000252:	d02b      	beq.n	80002ac <fsmVerLEDsRun+0xa0>
				vertical_status = AUTO_GREEN;
 8000254:	4b19      	ldr	r3, [pc, #100]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000256:	2203      	movs	r2, #3
 8000258:	601a      	str	r2, [r3, #0]
				setTimer(1, GREEN_time);
 800025a:	4b19      	ldr	r3, [pc, #100]	; (80002c0 <fsmVerLEDsRun+0xb4>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	4619      	mov	r1, r3
 8000260:	2001      	movs	r0, #1
 8000262:	f001 f9db 	bl	800161c <setTimer>
			}
			break;
 8000266:	e021      	b.n	80002ac <fsmVerLEDsRun+0xa0>

		case AUTO_GREEN:
			if (isTimerUp(1)) {
 8000268:	2001      	movs	r0, #1
 800026a:	f001 f9c3 	bl	80015f4 <isTimerUp>
 800026e:	4603      	mov	r3, r0
 8000270:	2b00      	cmp	r3, #0
 8000272:	d01d      	beq.n	80002b0 <fsmVerLEDsRun+0xa4>
				vertical_status = AUTO_YELLOW;
 8000274:	4b11      	ldr	r3, [pc, #68]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000276:	2204      	movs	r2, #4
 8000278:	601a      	str	r2, [r3, #0]
				setTimer(1, YELLOW_time);
 800027a:	4b12      	ldr	r3, [pc, #72]	; (80002c4 <fsmVerLEDsRun+0xb8>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	4619      	mov	r1, r3
 8000280:	2001      	movs	r0, #1
 8000282:	f001 f9cb 	bl	800161c <setTimer>
			}
			break;
 8000286:	e013      	b.n	80002b0 <fsmVerLEDsRun+0xa4>

		case AUTO_YELLOW:
			if (isTimerUp(1)) {
 8000288:	2001      	movs	r0, #1
 800028a:	f001 f9b3 	bl	80015f4 <isTimerUp>
 800028e:	4603      	mov	r3, r0
 8000290:	2b00      	cmp	r3, #0
 8000292:	d00f      	beq.n	80002b4 <fsmVerLEDsRun+0xa8>
				vertical_status = AUTO_RED;
 8000294:	4b09      	ldr	r3, [pc, #36]	; (80002bc <fsmVerLEDsRun+0xb0>)
 8000296:	2202      	movs	r2, #2
 8000298:	601a      	str	r2, [r3, #0]
				setTimer(1, RED_time);
 800029a:	4b0b      	ldr	r3, [pc, #44]	; (80002c8 <fsmVerLEDsRun+0xbc>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4619      	mov	r1, r3
 80002a0:	2001      	movs	r0, #1
 80002a2:	f001 f9bb 	bl	800161c <setTimer>
			}
			break;
 80002a6:	e005      	b.n	80002b4 <fsmVerLEDsRun+0xa8>

		default:
			break;
 80002a8:	bf00      	nop
 80002aa:	e004      	b.n	80002b6 <fsmVerLEDsRun+0xaa>
			break;
 80002ac:	bf00      	nop
 80002ae:	e002      	b.n	80002b6 <fsmVerLEDsRun+0xaa>
			break;
 80002b0:	bf00      	nop
 80002b2:	e000      	b.n	80002b6 <fsmVerLEDsRun+0xaa>
			break;
 80002b4:	bf00      	nop
	}
}
 80002b6:	bf00      	nop
 80002b8:	bd80      	pop	{r7, pc}
 80002ba:	bf00      	nop
 80002bc:	200000b4 	.word	0x200000b4
 80002c0:	2000001c 	.word	0x2000001c
 80002c4:	20000020 	.word	0x20000020
 80002c8:	20000018 	.word	0x20000018

080002cc <LEDsDisplay>:

void LEDsDisplay() {
 80002cc:	b580      	push	{r7, lr}
 80002ce:	af00      	add	r7, sp, #0
	// Display two ways LEDs

	fsmHorLEDsRun();
 80002d0:	f7ff ff3c 	bl	800014c <fsmHorLEDsRun>
	fsmVerLEDsRun();
 80002d4:	f7ff ff9a 	bl	800020c <fsmVerLEDsRun>

	switch (horizontal_status) {
 80002d8:	4b2f      	ldr	r3, [pc, #188]	; (8000398 <LEDsDisplay+0xcc>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	2b04      	cmp	r3, #4
 80002de:	d01e      	beq.n	800031e <LEDsDisplay+0x52>
 80002e0:	2b04      	cmp	r3, #4
 80002e2:	dc28      	bgt.n	8000336 <LEDsDisplay+0x6a>
 80002e4:	2b02      	cmp	r3, #2
 80002e6:	d002      	beq.n	80002ee <LEDsDisplay+0x22>
 80002e8:	2b03      	cmp	r3, #3
 80002ea:	d00c      	beq.n	8000306 <LEDsDisplay+0x3a>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
			break;

		default:
			break;
 80002ec:	e023      	b.n	8000336 <LEDsDisplay+0x6a>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 80002ee:	2201      	movs	r2, #1
 80002f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80002f4:	4829      	ldr	r0, [pc, #164]	; (800039c <LEDsDisplay+0xd0>)
 80002f6:	f001 ffd2 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_OFF);
 80002fa:	2200      	movs	r2, #0
 80002fc:	2108      	movs	r1, #8
 80002fe:	4828      	ldr	r0, [pc, #160]	; (80003a0 <LEDsDisplay+0xd4>)
 8000300:	f001 ffcd 	bl	800229e <HAL_GPIO_WritePin>
			break;
 8000304:	e018      	b.n	8000338 <LEDsDisplay+0x6c>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000306:	2200      	movs	r2, #0
 8000308:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800030c:	4823      	ldr	r0, [pc, #140]	; (800039c <LEDsDisplay+0xd0>)
 800030e:	f001 ffc6 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 8000312:	2201      	movs	r2, #1
 8000314:	2108      	movs	r1, #8
 8000316:	4822      	ldr	r0, [pc, #136]	; (80003a0 <LEDsDisplay+0xd4>)
 8000318:	f001 ffc1 	bl	800229e <HAL_GPIO_WritePin>
			break;
 800031c:	e00c      	b.n	8000338 <LEDsDisplay+0x6c>
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 800031e:	2201      	movs	r2, #1
 8000320:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000324:	481d      	ldr	r0, [pc, #116]	; (800039c <LEDsDisplay+0xd0>)
 8000326:	f001 ffba 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 800032a:	2201      	movs	r2, #1
 800032c:	2108      	movs	r1, #8
 800032e:	481c      	ldr	r0, [pc, #112]	; (80003a0 <LEDsDisplay+0xd4>)
 8000330:	f001 ffb5 	bl	800229e <HAL_GPIO_WritePin>
			break;
 8000334:	e000      	b.n	8000338 <LEDsDisplay+0x6c>
			break;
 8000336:	bf00      	nop
	}

	switch (vertical_status) {
 8000338:	4b1a      	ldr	r3, [pc, #104]	; (80003a4 <LEDsDisplay+0xd8>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	2b04      	cmp	r3, #4
 800033e:	d01c      	beq.n	800037a <LEDsDisplay+0xae>
 8000340:	2b04      	cmp	r3, #4
 8000342:	dc25      	bgt.n	8000390 <LEDsDisplay+0xc4>
 8000344:	2b02      	cmp	r3, #2
 8000346:	d002      	beq.n	800034e <LEDsDisplay+0x82>
 8000348:	2b03      	cmp	r3, #3
 800034a:	d00b      	beq.n	8000364 <LEDsDisplay+0x98>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
			break;

		default:
			break;
 800034c:	e020      	b.n	8000390 <LEDsDisplay+0xc4>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 800034e:	2201      	movs	r2, #1
 8000350:	2120      	movs	r1, #32
 8000352:	4813      	ldr	r0, [pc, #76]	; (80003a0 <LEDsDisplay+0xd4>)
 8000354:	f001 ffa3 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_OFF);
 8000358:	2200      	movs	r2, #0
 800035a:	2110      	movs	r1, #16
 800035c:	4810      	ldr	r0, [pc, #64]	; (80003a0 <LEDsDisplay+0xd4>)
 800035e:	f001 ff9e 	bl	800229e <HAL_GPIO_WritePin>
			break;
 8000362:	e016      	b.n	8000392 <LEDsDisplay+0xc6>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_OFF);
 8000364:	2200      	movs	r2, #0
 8000366:	2120      	movs	r1, #32
 8000368:	480d      	ldr	r0, [pc, #52]	; (80003a0 <LEDsDisplay+0xd4>)
 800036a:	f001 ff98 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 800036e:	2201      	movs	r2, #1
 8000370:	2110      	movs	r1, #16
 8000372:	480b      	ldr	r0, [pc, #44]	; (80003a0 <LEDsDisplay+0xd4>)
 8000374:	f001 ff93 	bl	800229e <HAL_GPIO_WritePin>
			break;
 8000378:	e00b      	b.n	8000392 <LEDsDisplay+0xc6>
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 800037a:	2201      	movs	r2, #1
 800037c:	2120      	movs	r1, #32
 800037e:	4808      	ldr	r0, [pc, #32]	; (80003a0 <LEDsDisplay+0xd4>)
 8000380:	f001 ff8d 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 8000384:	2201      	movs	r2, #1
 8000386:	2110      	movs	r1, #16
 8000388:	4805      	ldr	r0, [pc, #20]	; (80003a0 <LEDsDisplay+0xd4>)
 800038a:	f001 ff88 	bl	800229e <HAL_GPIO_WritePin>
			break;
 800038e:	e000      	b.n	8000392 <LEDsDisplay+0xc6>
			break;
 8000390:	bf00      	nop
	}
}
 8000392:	bf00      	nop
 8000394:	bd80      	pop	{r7, pc}
 8000396:	bf00      	nop
 8000398:	200000b0 	.word	0x200000b0
 800039c:	40010800 	.word	0x40010800
 80003a0:	40010c00 	.word	0x40010c00
 80003a4:	200000b4 	.word	0x200000b4

080003a8 <resetLights>:

void resetLights() {
 80003a8:	b480      	push	{r7}
 80003aa:	af00      	add	r7, sp, #0
	horizontal_status = MODE_INIT;
 80003ac:	4b04      	ldr	r3, [pc, #16]	; (80003c0 <resetLights+0x18>)
 80003ae:	2200      	movs	r2, #0
 80003b0:	601a      	str	r2, [r3, #0]
	vertical_status = MODE_INIT;
 80003b2:	4b04      	ldr	r3, [pc, #16]	; (80003c4 <resetLights+0x1c>)
 80003b4:	2200      	movs	r2, #0
 80003b6:	601a      	str	r2, [r3, #0]
}
 80003b8:	bf00      	nop
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bc80      	pop	{r7}
 80003be:	4770      	bx	lr
 80003c0:	200000b0 	.word	0x200000b0
 80003c4:	200000b4 	.word	0x200000b4

080003c8 <isButtonPressed>:
int button_flag[NO_OF_BUTTON];
int button_long_flag[NO_OF_BUTTON];
GPIO_PinState key_reg[NO_OF_BUTTON][4];
int counter_for_key_pressed[NO_OF_BUTTON];

int isButtonPressed(int button) {
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
	if (button_flag[button]) {
 80003d0:	4a09      	ldr	r2, [pc, #36]	; (80003f8 <isButtonPressed+0x30>)
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003d8:	2b00      	cmp	r3, #0
 80003da:	d006      	beq.n	80003ea <isButtonPressed+0x22>
		button_flag[button] = 0;
 80003dc:	4a06      	ldr	r2, [pc, #24]	; (80003f8 <isButtonPressed+0x30>)
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	2100      	movs	r1, #0
 80003e2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 80003e6:	2301      	movs	r3, #1
 80003e8:	e000      	b.n	80003ec <isButtonPressed+0x24>
	}
	else return 0;
 80003ea:	2300      	movs	r3, #0
}
 80003ec:	4618      	mov	r0, r3
 80003ee:	370c      	adds	r7, #12
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bc80      	pop	{r7}
 80003f4:	4770      	bx	lr
 80003f6:	bf00      	nop
 80003f8:	200000fc 	.word	0x200000fc

080003fc <isButtonLongPressed>:

int isButtonLongPressed(int button) {
 80003fc:	b480      	push	{r7}
 80003fe:	b083      	sub	sp, #12
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
	if (button_long_flag[button]) {
 8000404:	4a09      	ldr	r2, [pc, #36]	; (800042c <isButtonLongPressed+0x30>)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800040c:	2b00      	cmp	r3, #0
 800040e:	d006      	beq.n	800041e <isButtonLongPressed+0x22>
		button_long_flag[button] = 0;
 8000410:	4a06      	ldr	r2, [pc, #24]	; (800042c <isButtonLongPressed+0x30>)
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	2100      	movs	r1, #0
 8000416:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800041a:	2301      	movs	r3, #1
 800041c:	e000      	b.n	8000420 <isButtonLongPressed+0x24>
	}
	else return 0;
 800041e:	2300      	movs	r3, #0
}
 8000420:	4618      	mov	r0, r3
 8000422:	370c      	adds	r7, #12
 8000424:	46bd      	mov	sp, r7
 8000426:	bc80      	pop	{r7}
 8000428:	4770      	bx	lr
 800042a:	bf00      	nop
 800042c:	2000010c 	.word	0x2000010c

08000430 <subKeyProcess>:

void subKeyProcess(int button) {
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
 8000436:	6078      	str	r0, [r7, #4]
	button_flag[button] = 1;
 8000438:	4a04      	ldr	r2, [pc, #16]	; (800044c <subKeyProcess+0x1c>)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	2101      	movs	r1, #1
 800043e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000442:	bf00      	nop
 8000444:	370c      	adds	r7, #12
 8000446:	46bd      	mov	sp, r7
 8000448:	bc80      	pop	{r7}
 800044a:	4770      	bx	lr
 800044c:	200000fc 	.word	0x200000fc

08000450 <subKeyLongProcess>:

void subKeyLongProcess(int button) {
 8000450:	b480      	push	{r7}
 8000452:	b083      	sub	sp, #12
 8000454:	af00      	add	r7, sp, #0
 8000456:	6078      	str	r0, [r7, #4]
	button_long_flag[button] = 1;
 8000458:	4a04      	ldr	r2, [pc, #16]	; (800046c <subKeyLongProcess+0x1c>)
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	2101      	movs	r1, #1
 800045e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000462:	bf00      	nop
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	bc80      	pop	{r7}
 800046a:	4770      	bx	lr
 800046c:	2000010c 	.word	0x2000010c

08000470 <resetKey>:

void resetKey(int button) {
 8000470:	b480      	push	{r7}
 8000472:	b083      	sub	sp, #12
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
	button_flag[button] = 0;
 8000478:	4a07      	ldr	r2, [pc, #28]	; (8000498 <resetKey+0x28>)
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	2100      	movs	r1, #0
 800047e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	button_long_flag[button] = 0;
 8000482:	4a06      	ldr	r2, [pc, #24]	; (800049c <resetKey+0x2c>)
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	2100      	movs	r1, #0
 8000488:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 800048c:	bf00      	nop
 800048e:	370c      	adds	r7, #12
 8000490:	46bd      	mov	sp, r7
 8000492:	bc80      	pop	{r7}
 8000494:	4770      	bx	lr
 8000496:	bf00      	nop
 8000498:	200000fc 	.word	0x200000fc
 800049c:	2000010c 	.word	0x2000010c

080004a0 <setKeyTimer>:

void setKeyTimer(int button) {
 80004a0:	b480      	push	{r7}
 80004a2:	b083      	sub	sp, #12
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
	counter_for_key_pressed[button] = timer_for_key_pressed / timer_cycle;
 80004a8:	4b07      	ldr	r3, [pc, #28]	; (80004c8 <setKeyTimer+0x28>)
 80004aa:	681a      	ldr	r2, [r3, #0]
 80004ac:	4b07      	ldr	r3, [pc, #28]	; (80004cc <setKeyTimer+0x2c>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	fb92 f2f3 	sdiv	r2, r2, r3
 80004b4:	4906      	ldr	r1, [pc, #24]	; (80004d0 <setKeyTimer+0x30>)
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80004bc:	bf00      	nop
 80004be:	370c      	adds	r7, #12
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bc80      	pop	{r7}
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop
 80004c8:	20000014 	.word	0x20000014
 80004cc:	20000010 	.word	0x20000010
 80004d0:	200000dc 	.word	0x200000dc

080004d4 <getKeyInput>:

void getKeyInput() {
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b082      	sub	sp, #8
 80004d8:	af00      	add	r7, sp, #0
	for (int button = 0; button < NO_OF_BUTTON; button++) {
 80004da:	2300      	movs	r3, #0
 80004dc:	607b      	str	r3, [r7, #4]
 80004de:	e0b9      	b.n	8000654 <getKeyInput+0x180>
		key_reg[button][0] = key_reg[button][1];
 80004e0:	4a61      	ldr	r2, [pc, #388]	; (8000668 <getKeyInput+0x194>)
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	009b      	lsls	r3, r3, #2
 80004e6:	4413      	add	r3, r2
 80004e8:	7859      	ldrb	r1, [r3, #1]
 80004ea:	4a5f      	ldr	r2, [pc, #380]	; (8000668 <getKeyInput+0x194>)
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	f802 1023 	strb.w	r1, [r2, r3, lsl #2]
		key_reg[button][1] = key_reg[button][2];
 80004f2:	4a5d      	ldr	r2, [pc, #372]	; (8000668 <getKeyInput+0x194>)
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	009b      	lsls	r3, r3, #2
 80004f8:	4413      	add	r3, r2
 80004fa:	7899      	ldrb	r1, [r3, #2]
 80004fc:	4a5a      	ldr	r2, [pc, #360]	; (8000668 <getKeyInput+0x194>)
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	009b      	lsls	r3, r3, #2
 8000502:	4413      	add	r3, r2
 8000504:	460a      	mov	r2, r1
 8000506:	705a      	strb	r2, [r3, #1]
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	2b03      	cmp	r3, #3
 800050c:	d83e      	bhi.n	800058c <getKeyInput+0xb8>
 800050e:	a201      	add	r2, pc, #4	; (adr r2, 8000514 <getKeyInput+0x40>)
 8000510:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000514:	08000525 	.word	0x08000525
 8000518:	0800053f 	.word	0x0800053f
 800051c:	08000559 	.word	0x08000559
 8000520:	08000573 	.word	0x08000573
		switch (button) {
			case BUTTON_MODE:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_MODE_GPIO_Port, BUTTON_MODE_Pin);
 8000524:	2102      	movs	r1, #2
 8000526:	4851      	ldr	r0, [pc, #324]	; (800066c <getKeyInput+0x198>)
 8000528:	f001 fea2 	bl	8002270 <HAL_GPIO_ReadPin>
 800052c:	4603      	mov	r3, r0
 800052e:	4619      	mov	r1, r3
 8000530:	4a4d      	ldr	r2, [pc, #308]	; (8000668 <getKeyInput+0x194>)
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	009b      	lsls	r3, r3, #2
 8000536:	4413      	add	r3, r2
 8000538:	460a      	mov	r2, r1
 800053a:	709a      	strb	r2, [r3, #2]
				break;
 800053c:	e027      	b.n	800058e <getKeyInput+0xba>
			case BUTTON_SET:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_SET_GPIO_Port, BUTTON_SET_Pin);
 800053e:	2110      	movs	r1, #16
 8000540:	484a      	ldr	r0, [pc, #296]	; (800066c <getKeyInput+0x198>)
 8000542:	f001 fe95 	bl	8002270 <HAL_GPIO_ReadPin>
 8000546:	4603      	mov	r3, r0
 8000548:	4619      	mov	r1, r3
 800054a:	4a47      	ldr	r2, [pc, #284]	; (8000668 <getKeyInput+0x194>)
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	009b      	lsls	r3, r3, #2
 8000550:	4413      	add	r3, r2
 8000552:	460a      	mov	r2, r1
 8000554:	709a      	strb	r2, [r3, #2]
				break;
 8000556:	e01a      	b.n	800058e <getKeyInput+0xba>
			case BUTTON_INC:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_INC_GPIO_Port, BUTTON_INC_Pin);
 8000558:	2101      	movs	r1, #1
 800055a:	4845      	ldr	r0, [pc, #276]	; (8000670 <getKeyInput+0x19c>)
 800055c:	f001 fe88 	bl	8002270 <HAL_GPIO_ReadPin>
 8000560:	4603      	mov	r3, r0
 8000562:	4619      	mov	r1, r3
 8000564:	4a40      	ldr	r2, [pc, #256]	; (8000668 <getKeyInput+0x194>)
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	009b      	lsls	r3, r3, #2
 800056a:	4413      	add	r3, r2
 800056c:	460a      	mov	r2, r1
 800056e:	709a      	strb	r2, [r3, #2]
				break;
 8000570:	e00d      	b.n	800058e <getKeyInput+0xba>
			case BUTTON_PED:
				key_reg[button][2] = HAL_GPIO_ReadPin(BUTTON_PED_GPIO_Port, BUTTON_PED_Pin);
 8000572:	2101      	movs	r1, #1
 8000574:	483d      	ldr	r0, [pc, #244]	; (800066c <getKeyInput+0x198>)
 8000576:	f001 fe7b 	bl	8002270 <HAL_GPIO_ReadPin>
 800057a:	4603      	mov	r3, r0
 800057c:	4619      	mov	r1, r3
 800057e:	4a3a      	ldr	r2, [pc, #232]	; (8000668 <getKeyInput+0x194>)
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	009b      	lsls	r3, r3, #2
 8000584:	4413      	add	r3, r2
 8000586:	460a      	mov	r2, r1
 8000588:	709a      	strb	r2, [r3, #2]
				break;
 800058a:	e000      	b.n	800058e <getKeyInput+0xba>
			default:
				break;
 800058c:	bf00      	nop
		}

		if ((key_reg[button][0] == key_reg[button][1]) && (key_reg[button][1] == key_reg[button][2])) {
 800058e:	4a36      	ldr	r2, [pc, #216]	; (8000668 <getKeyInput+0x194>)
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	f812 2023 	ldrb.w	r2, [r2, r3, lsl #2]
 8000596:	4934      	ldr	r1, [pc, #208]	; (8000668 <getKeyInput+0x194>)
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	009b      	lsls	r3, r3, #2
 800059c:	440b      	add	r3, r1
 800059e:	785b      	ldrb	r3, [r3, #1]
 80005a0:	429a      	cmp	r2, r3
 80005a2:	d154      	bne.n	800064e <getKeyInput+0x17a>
 80005a4:	4a30      	ldr	r2, [pc, #192]	; (8000668 <getKeyInput+0x194>)
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	009b      	lsls	r3, r3, #2
 80005aa:	4413      	add	r3, r2
 80005ac:	785a      	ldrb	r2, [r3, #1]
 80005ae:	492e      	ldr	r1, [pc, #184]	; (8000668 <getKeyInput+0x194>)
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	009b      	lsls	r3, r3, #2
 80005b4:	440b      	add	r3, r1
 80005b6:	789b      	ldrb	r3, [r3, #2]
 80005b8:	429a      	cmp	r2, r3
 80005ba:	d148      	bne.n	800064e <getKeyInput+0x17a>

			// Press button, then release
			if (key_reg[button][3] != key_reg[button][2]) {
 80005bc:	4a2a      	ldr	r2, [pc, #168]	; (8000668 <getKeyInput+0x194>)
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	009b      	lsls	r3, r3, #2
 80005c2:	4413      	add	r3, r2
 80005c4:	78da      	ldrb	r2, [r3, #3]
 80005c6:	4928      	ldr	r1, [pc, #160]	; (8000668 <getKeyInput+0x194>)
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	009b      	lsls	r3, r3, #2
 80005cc:	440b      	add	r3, r1
 80005ce:	789b      	ldrb	r3, [r3, #2]
 80005d0:	429a      	cmp	r2, r3
 80005d2:	d01c      	beq.n	800060e <getKeyInput+0x13a>
				key_reg[button][3] = key_reg[button][2];
 80005d4:	4a24      	ldr	r2, [pc, #144]	; (8000668 <getKeyInput+0x194>)
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	009b      	lsls	r3, r3, #2
 80005da:	4413      	add	r3, r2
 80005dc:	7899      	ldrb	r1, [r3, #2]
 80005de:	4a22      	ldr	r2, [pc, #136]	; (8000668 <getKeyInput+0x194>)
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	009b      	lsls	r3, r3, #2
 80005e4:	4413      	add	r3, r2
 80005e6:	460a      	mov	r2, r1
 80005e8:	70da      	strb	r2, [r3, #3]

				if (key_reg[button][2] == PRESSED_STATE) {
 80005ea:	4a1f      	ldr	r2, [pc, #124]	; (8000668 <getKeyInput+0x194>)
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	009b      	lsls	r3, r3, #2
 80005f0:	4413      	add	r3, r2
 80005f2:	789b      	ldrb	r3, [r3, #2]
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d106      	bne.n	8000606 <getKeyInput+0x132>
					subKeyProcess(button);
 80005f8:	6878      	ldr	r0, [r7, #4]
 80005fa:	f7ff ff19 	bl	8000430 <subKeyProcess>
					setKeyTimer(button);
 80005fe:	6878      	ldr	r0, [r7, #4]
 8000600:	f7ff ff4e 	bl	80004a0 <setKeyTimer>
 8000604:	e023      	b.n	800064e <getKeyInput+0x17a>
				}
				else resetKey(button);
 8000606:	6878      	ldr	r0, [r7, #4]
 8000608:	f7ff ff32 	bl	8000470 <resetKey>
 800060c:	e01f      	b.n	800064e <getKeyInput+0x17a>
			}
			// Press and hold button
			else {
				counter_for_key_pressed[button]--;
 800060e:	4a19      	ldr	r2, [pc, #100]	; (8000674 <getKeyInput+0x1a0>)
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000616:	1e5a      	subs	r2, r3, #1
 8000618:	4916      	ldr	r1, [pc, #88]	; (8000674 <getKeyInput+0x1a0>)
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
				if (!counter_for_key_pressed[button]) {
 8000620:	4a14      	ldr	r2, [pc, #80]	; (8000674 <getKeyInput+0x1a0>)
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000628:	2b00      	cmp	r3, #0
 800062a:	d110      	bne.n	800064e <getKeyInput+0x17a>
					if (key_reg[button][2] == PRESSED_STATE) {
 800062c:	4a0e      	ldr	r2, [pc, #56]	; (8000668 <getKeyInput+0x194>)
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	009b      	lsls	r3, r3, #2
 8000632:	4413      	add	r3, r2
 8000634:	789b      	ldrb	r3, [r3, #2]
 8000636:	2b00      	cmp	r3, #0
 8000638:	d103      	bne.n	8000642 <getKeyInput+0x16e>
						subKeyLongProcess(button);
 800063a:	6878      	ldr	r0, [r7, #4]
 800063c:	f7ff ff08 	bl	8000450 <subKeyLongProcess>
 8000640:	e002      	b.n	8000648 <getKeyInput+0x174>
					}
					else resetKey(button);
 8000642:	6878      	ldr	r0, [r7, #4]
 8000644:	f7ff ff14 	bl	8000470 <resetKey>
					setKeyTimer(button);
 8000648:	6878      	ldr	r0, [r7, #4]
 800064a:	f7ff ff29 	bl	80004a0 <setKeyTimer>
	for (int button = 0; button < NO_OF_BUTTON; button++) {
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	3301      	adds	r3, #1
 8000652:	607b      	str	r3, [r7, #4]
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	2b03      	cmp	r3, #3
 8000658:	f77f af42 	ble.w	80004e0 <getKeyInput+0xc>
				}
			}
		}
	}
}
 800065c:	bf00      	nop
 800065e:	bf00      	nop
 8000660:	3708      	adds	r7, #8
 8000662:	46bd      	mov	sp, r7
 8000664:	bd80      	pop	{r7, pc}
 8000666:	bf00      	nop
 8000668:	200000ec 	.word	0x200000ec
 800066c:	40010800 	.word	0x40010800
 8000670:	40010c00 	.word	0x40010c00
 8000674:	200000dc 	.word	0x200000dc

08000678 <fsmAutoModeRun>:
#include "fsm_auto_mode.h"

void fsmAutoModeRun() {
 8000678:	b580      	push	{r7, lr}
 800067a:	af00      	add	r7, sp, #0
	// FSM for AUTO MODE

	switch (mode) {
 800067c:	4b10      	ldr	r3, [pc, #64]	; (80006c0 <fsmAutoModeRun+0x48>)
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	2b00      	cmp	r3, #0
 8000682:	d002      	beq.n	800068a <fsmAutoModeRun+0x12>
 8000684:	2b01      	cmp	r3, #1
 8000686:	d008      	beq.n	800069a <fsmAutoModeRun+0x22>
			sendTimerCounter();

			break;

		default:
			break;
 8000688:	e017      	b.n	80006ba <fsmAutoModeRun+0x42>
			mode = AUTO_MODE;
 800068a:	4b0d      	ldr	r3, [pc, #52]	; (80006c0 <fsmAutoModeRun+0x48>)
 800068c:	2201      	movs	r2, #1
 800068e:	601a      	str	r2, [r3, #0]
			resetLights();
 8000690:	f7ff fe8a 	bl	80003a8 <resetLights>
			sendModeNoti();
 8000694:	f001 f96a 	bl	800196c <sendModeNoti>
			break;
 8000698:	e00f      	b.n	80006ba <fsmAutoModeRun+0x42>
			if (isButtonPressed(BUTTON_MODE)) {
 800069a:	2000      	movs	r0, #0
 800069c:	f7ff fe94 	bl	80003c8 <isButtonPressed>
 80006a0:	4603      	mov	r3, r0
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d004      	beq.n	80006b0 <fsmAutoModeRun+0x38>
				mode = MAN_MODE;
 80006a6:	4b06      	ldr	r3, [pc, #24]	; (80006c0 <fsmAutoModeRun+0x48>)
 80006a8:	2205      	movs	r2, #5
 80006aa:	601a      	str	r2, [r3, #0]
				sendModeNoti();
 80006ac:	f001 f95e 	bl	800196c <sendModeNoti>
			LEDsDisplay();
 80006b0:	f7ff fe0c 	bl	80002cc <LEDsDisplay>
			sendTimerCounter();
 80006b4:	f001 f800 	bl	80016b8 <sendTimerCounter>
			break;
 80006b8:	bf00      	nop
	}
}
 80006ba:	bf00      	nop
 80006bc:	bd80      	pop	{r7, pc}
 80006be:	bf00      	nop
 80006c0:	200000c0 	.word	0x200000c0

080006c4 <fsmManualModeRun>:
#include "fsm_manual_mode.h"

void fsmManualModeRun()
{
 80006c4:	b580      	push	{r7, lr}
 80006c6:	af00      	add	r7, sp, #0
	// FSM for MANUAL MODE

	switch (mode)
 80006c8:	4b60      	ldr	r3, [pc, #384]	; (800084c <fsmManualModeRun+0x188>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	3b05      	subs	r3, #5
 80006ce:	2b03      	cmp	r3, #3
 80006d0:	f200 80b9 	bhi.w	8000846 <fsmManualModeRun+0x182>
 80006d4:	a201      	add	r2, pc, #4	; (adr r2, 80006dc <fsmManualModeRun+0x18>)
 80006d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006da:	bf00      	nop
 80006dc:	080006ed 	.word	0x080006ed
 80006e0:	080006f9 	.word	0x080006f9
 80006e4:	08000765 	.word	0x08000765
 80006e8:	080007d1 	.word	0x080007d1
	{
	case MAN_MODE:
		// Switch to MAN_RED
		sendTimeDuration();
 80006ec:	f001 f83c 	bl	8001768 <sendTimeDuration>
		mode = MAN_RED;
 80006f0:	4b56      	ldr	r3, [pc, #344]	; (800084c <fsmManualModeRun+0x188>)
 80006f2:	2206      	movs	r2, #6
 80006f4:	601a      	str	r2, [r3, #0]
		break;
 80006f6:	e0a6      	b.n	8000846 <fsmManualModeRun+0x182>

	case MAN_RED:

		// Turn on red lights
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 80006f8:	2201      	movs	r2, #1
 80006fa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006fe:	4854      	ldr	r0, [pc, #336]	; (8000850 <fsmManualModeRun+0x18c>)
 8000700:	f001 fdcd 	bl	800229e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_OFF);
 8000704:	2200      	movs	r2, #0
 8000706:	2108      	movs	r1, #8
 8000708:	4852      	ldr	r0, [pc, #328]	; (8000854 <fsmManualModeRun+0x190>)
 800070a:	f001 fdc8 	bl	800229e <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 800070e:	2201      	movs	r2, #1
 8000710:	2120      	movs	r1, #32
 8000712:	4850      	ldr	r0, [pc, #320]	; (8000854 <fsmManualModeRun+0x190>)
 8000714:	f001 fdc3 	bl	800229e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_OFF);
 8000718:	2200      	movs	r2, #0
 800071a:	2110      	movs	r1, #16
 800071c:	484d      	ldr	r0, [pc, #308]	; (8000854 <fsmManualModeRun+0x190>)
 800071e:	f001 fdbe 	bl	800229e <HAL_GPIO_WritePin>

		// Send duration time of red lights
		sendTimeDuration();
 8000722:	f001 f821 	bl	8001768 <sendTimeDuration>

		// Switch to MAN_GREEN when press SET button
		if (isButtonPressed(BUTTON_SET))
 8000726:	2001      	movs	r0, #1
 8000728:	f7ff fe4e 	bl	80003c8 <isButtonPressed>
 800072c:	4603      	mov	r3, r0
 800072e:	2b00      	cmp	r3, #0
 8000730:	d002      	beq.n	8000738 <fsmManualModeRun+0x74>
		{
			mode = MAN_GREEN;
 8000732:	4b46      	ldr	r3, [pc, #280]	; (800084c <fsmManualModeRun+0x188>)
 8000734:	2207      	movs	r2, #7
 8000736:	601a      	str	r2, [r3, #0]
		}

		// Switch to TUNING MODE when press MODE button
		if (isButtonPressed(BUTTON_MODE))
 8000738:	2000      	movs	r0, #0
 800073a:	f7ff fe45 	bl	80003c8 <isButtonPressed>
 800073e:	4603      	mov	r3, r0
 8000740:	2b00      	cmp	r3, #0
 8000742:	d07b      	beq.n	800083c <fsmManualModeRun+0x178>
		{
			mode = INC_RED;
 8000744:	4b41      	ldr	r3, [pc, #260]	; (800084c <fsmManualModeRun+0x188>)
 8000746:	2209      	movs	r2, #9
 8000748:	601a      	str	r2, [r3, #0]
			time_count = RED_time / 1000;
 800074a:	4b43      	ldr	r3, [pc, #268]	; (8000858 <fsmManualModeRun+0x194>)
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	4a43      	ldr	r2, [pc, #268]	; (800085c <fsmManualModeRun+0x198>)
 8000750:	fb82 1203 	smull	r1, r2, r2, r3
 8000754:	1192      	asrs	r2, r2, #6
 8000756:	17db      	asrs	r3, r3, #31
 8000758:	1ad3      	subs	r3, r2, r3
 800075a:	4a41      	ldr	r2, [pc, #260]	; (8000860 <fsmManualModeRun+0x19c>)
 800075c:	6013      	str	r3, [r2, #0]
			sendModeNoti();
 800075e:	f001 f905 	bl	800196c <sendModeNoti>
		}

		break;
 8000762:	e06b      	b.n	800083c <fsmManualModeRun+0x178>

	case MAN_GREEN:

		// Turn on green lights
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_OFF);
 8000764:	2200      	movs	r2, #0
 8000766:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800076a:	4839      	ldr	r0, [pc, #228]	; (8000850 <fsmManualModeRun+0x18c>)
 800076c:	f001 fd97 	bl	800229e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 8000770:	2201      	movs	r2, #1
 8000772:	2108      	movs	r1, #8
 8000774:	4837      	ldr	r0, [pc, #220]	; (8000854 <fsmManualModeRun+0x190>)
 8000776:	f001 fd92 	bl	800229e <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_OFF);
 800077a:	2200      	movs	r2, #0
 800077c:	2120      	movs	r1, #32
 800077e:	4835      	ldr	r0, [pc, #212]	; (8000854 <fsmManualModeRun+0x190>)
 8000780:	f001 fd8d 	bl	800229e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 8000784:	2201      	movs	r2, #1
 8000786:	2110      	movs	r1, #16
 8000788:	4832      	ldr	r0, [pc, #200]	; (8000854 <fsmManualModeRun+0x190>)
 800078a:	f001 fd88 	bl	800229e <HAL_GPIO_WritePin>

		// Send duration time of green lights
		sendTimeDuration();
 800078e:	f000 ffeb 	bl	8001768 <sendTimeDuration>

		// Switch to MAN_YELLOW when press SET button
		if (isButtonPressed(BUTTON_SET))
 8000792:	2001      	movs	r0, #1
 8000794:	f7ff fe18 	bl	80003c8 <isButtonPressed>
 8000798:	4603      	mov	r3, r0
 800079a:	2b00      	cmp	r3, #0
 800079c:	d002      	beq.n	80007a4 <fsmManualModeRun+0xe0>
		{
			mode = MAN_YELLOW;
 800079e:	4b2b      	ldr	r3, [pc, #172]	; (800084c <fsmManualModeRun+0x188>)
 80007a0:	2208      	movs	r2, #8
 80007a2:	601a      	str	r2, [r3, #0]
		}

		// Switch to TUNING MODE when press MODE button
		if (isButtonPressed(BUTTON_MODE))
 80007a4:	2000      	movs	r0, #0
 80007a6:	f7ff fe0f 	bl	80003c8 <isButtonPressed>
 80007aa:	4603      	mov	r3, r0
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d047      	beq.n	8000840 <fsmManualModeRun+0x17c>
		{
			mode = INC_GREEN;
 80007b0:	4b26      	ldr	r3, [pc, #152]	; (800084c <fsmManualModeRun+0x188>)
 80007b2:	220a      	movs	r2, #10
 80007b4:	601a      	str	r2, [r3, #0]
			time_count = GREEN_time / 1000;
 80007b6:	4b2b      	ldr	r3, [pc, #172]	; (8000864 <fsmManualModeRun+0x1a0>)
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	4a28      	ldr	r2, [pc, #160]	; (800085c <fsmManualModeRun+0x198>)
 80007bc:	fb82 1203 	smull	r1, r2, r2, r3
 80007c0:	1192      	asrs	r2, r2, #6
 80007c2:	17db      	asrs	r3, r3, #31
 80007c4:	1ad3      	subs	r3, r2, r3
 80007c6:	4a26      	ldr	r2, [pc, #152]	; (8000860 <fsmManualModeRun+0x19c>)
 80007c8:	6013      	str	r3, [r2, #0]
			sendModeNoti();
 80007ca:	f001 f8cf 	bl	800196c <sendModeNoti>
		}

		break;
 80007ce:	e037      	b.n	8000840 <fsmManualModeRun+0x17c>

	case MAN_YELLOW:

		// Turn on yellow lights
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, LED_ON);
 80007d0:	2201      	movs	r2, #1
 80007d2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80007d6:	481e      	ldr	r0, [pc, #120]	; (8000850 <fsmManualModeRun+0x18c>)
 80007d8:	f001 fd61 	bl	800229e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, LED_ON);
 80007dc:	2201      	movs	r2, #1
 80007de:	2108      	movs	r1, #8
 80007e0:	481c      	ldr	r0, [pc, #112]	; (8000854 <fsmManualModeRun+0x190>)
 80007e2:	f001 fd5c 	bl	800229e <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, LED_ON);
 80007e6:	2201      	movs	r2, #1
 80007e8:	2120      	movs	r1, #32
 80007ea:	481a      	ldr	r0, [pc, #104]	; (8000854 <fsmManualModeRun+0x190>)
 80007ec:	f001 fd57 	bl	800229e <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, LED_ON);
 80007f0:	2201      	movs	r2, #1
 80007f2:	2110      	movs	r1, #16
 80007f4:	4817      	ldr	r0, [pc, #92]	; (8000854 <fsmManualModeRun+0x190>)
 80007f6:	f001 fd52 	bl	800229e <HAL_GPIO_WritePin>

		// Send duration time of yellow lights
		sendTimeDuration();
 80007fa:	f000 ffb5 	bl	8001768 <sendTimeDuration>

		// Switch to MAN_RED when press SET button
		if (isButtonPressed(BUTTON_SET))
 80007fe:	2001      	movs	r0, #1
 8000800:	f7ff fde2 	bl	80003c8 <isButtonPressed>
 8000804:	4603      	mov	r3, r0
 8000806:	2b00      	cmp	r3, #0
 8000808:	d002      	beq.n	8000810 <fsmManualModeRun+0x14c>
		{
			mode = MAN_RED;
 800080a:	4b10      	ldr	r3, [pc, #64]	; (800084c <fsmManualModeRun+0x188>)
 800080c:	2206      	movs	r2, #6
 800080e:	601a      	str	r2, [r3, #0]
		}

		// Switch to TUNING MODE when press MODE button
		if (isButtonPressed(BUTTON_MODE))
 8000810:	2000      	movs	r0, #0
 8000812:	f7ff fdd9 	bl	80003c8 <isButtonPressed>
 8000816:	4603      	mov	r3, r0
 8000818:	2b00      	cmp	r3, #0
 800081a:	d013      	beq.n	8000844 <fsmManualModeRun+0x180>
		{
			mode = INC_YELLOW;
 800081c:	4b0b      	ldr	r3, [pc, #44]	; (800084c <fsmManualModeRun+0x188>)
 800081e:	220b      	movs	r2, #11
 8000820:	601a      	str	r2, [r3, #0]
			time_count = YELLOW_time / 1000;
 8000822:	4b11      	ldr	r3, [pc, #68]	; (8000868 <fsmManualModeRun+0x1a4>)
 8000824:	681b      	ldr	r3, [r3, #0]
 8000826:	4a0d      	ldr	r2, [pc, #52]	; (800085c <fsmManualModeRun+0x198>)
 8000828:	fb82 1203 	smull	r1, r2, r2, r3
 800082c:	1192      	asrs	r2, r2, #6
 800082e:	17db      	asrs	r3, r3, #31
 8000830:	1ad3      	subs	r3, r2, r3
 8000832:	4a0b      	ldr	r2, [pc, #44]	; (8000860 <fsmManualModeRun+0x19c>)
 8000834:	6013      	str	r3, [r2, #0]
			sendModeNoti();
 8000836:	f001 f899 	bl	800196c <sendModeNoti>
		}

		break;
 800083a:	e003      	b.n	8000844 <fsmManualModeRun+0x180>
		break;
 800083c:	bf00      	nop
 800083e:	e002      	b.n	8000846 <fsmManualModeRun+0x182>
		break;
 8000840:	bf00      	nop
 8000842:	e000      	b.n	8000846 <fsmManualModeRun+0x182>
		break;
 8000844:	bf00      	nop
	}
}
 8000846:	bf00      	nop
 8000848:	bd80      	pop	{r7, pc}
 800084a:	bf00      	nop
 800084c:	200000c0 	.word	0x200000c0
 8000850:	40010800 	.word	0x40010800
 8000854:	40010c00 	.word	0x40010c00
 8000858:	20000018 	.word	0x20000018
 800085c:	10624dd3 	.word	0x10624dd3
 8000860:	200000bc 	.word	0x200000bc
 8000864:	2000001c 	.word	0x2000001c
 8000868:	20000020 	.word	0x20000020

0800086c <fsmVerPedRun>:
int hor_ped = PED_OFF;
int buzzer_time = BUZZER_time;
int pul = BUZZER_pul;
int state = 0;

void fsmVerPedRun(){
 800086c:	b580      	push	{r7, lr}
 800086e:	af00      	add	r7, sp, #0
	switch(ver_ped){
 8000870:	4b57      	ldr	r3, [pc, #348]	; (80009d0 <fsmVerPedRun+0x164>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	3b0c      	subs	r3, #12
 8000876:	2b04      	cmp	r3, #4
 8000878:	f200 809c 	bhi.w	80009b4 <fsmVerPedRun+0x148>
 800087c:	a201      	add	r2, pc, #4	; (adr r2, 8000884 <fsmVerPedRun+0x18>)
 800087e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000882:	bf00      	nop
 8000884:	08000899 	.word	0x08000899
 8000888:	080008c9 	.word	0x080008c9
 800088c:	08000907 	.word	0x08000907
 8000890:	08000947 	.word	0x08000947
 8000894:	0800098d 	.word	0x0800098d
		case PED_OFF:
			//Reset buzzer
			buzzer_time = BUZZER_time;
 8000898:	4b4e      	ldr	r3, [pc, #312]	; (80009d4 <fsmVerPedRun+0x168>)
 800089a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800089e:	601a      	str	r2, [r3, #0]
			pul = BUZZER_pul;
 80008a0:	4b4d      	ldr	r3, [pc, #308]	; (80009d8 <fsmVerPedRun+0x16c>)
 80008a2:	f240 2226 	movw	r2, #550	; 0x226
 80008a6:	601a      	str	r2, [r3, #0]
			state = 0;
 80008a8:	4b4c      	ldr	r3, [pc, #304]	; (80009dc <fsmVerPedRun+0x170>)
 80008aa:	2200      	movs	r2, #0
 80008ac:	601a      	str	r2, [r3, #0]
			//Turn on pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 80008ae:	2003      	movs	r0, #3
 80008b0:	f7ff fd8a 	bl	80003c8 <isButtonPressed>
 80008b4:	4603      	mov	r3, r0
 80008b6:	2b00      	cmp	r3, #0
 80008b8:	d07e      	beq.n	80009b8 <fsmVerPedRun+0x14c>
				ver_ped = PED_ON;
 80008ba:	4b45      	ldr	r3, [pc, #276]	; (80009d0 <fsmVerPedRun+0x164>)
 80008bc:	220d      	movs	r2, #13
 80008be:	601a      	str	r2, [r3, #0]
				hor_ped = PED_ON;
 80008c0:	4b47      	ldr	r3, [pc, #284]	; (80009e0 <fsmVerPedRun+0x174>)
 80008c2:	220d      	movs	r2, #13
 80008c4:	601a      	str	r2, [r3, #0]
			}
			break;
 80008c6:	e077      	b.n	80009b8 <fsmVerPedRun+0x14c>
		case PED_ON:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 80008c8:	2003      	movs	r0, #3
 80008ca:	f7ff fd7d 	bl	80003c8 <isButtonPressed>
 80008ce:	4603      	mov	r3, r0
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d005      	beq.n	80008e0 <fsmVerPedRun+0x74>
				ver_ped = PED_OFF;
 80008d4:	4b3e      	ldr	r3, [pc, #248]	; (80009d0 <fsmVerPedRun+0x164>)
 80008d6:	220c      	movs	r2, #12
 80008d8:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 80008da:	4b41      	ldr	r3, [pc, #260]	; (80009e0 <fsmVerPedRun+0x174>)
 80008dc:	220c      	movs	r2, #12
 80008de:	601a      	str	r2, [r3, #0]
			}
			//Allow walk
			if(vertical_status == AUTO_RED){
 80008e0:	4b40      	ldr	r3, [pc, #256]	; (80009e4 <fsmVerPedRun+0x178>)
 80008e2:	681b      	ldr	r3, [r3, #0]
 80008e4:	2b02      	cmp	r3, #2
 80008e6:	d102      	bne.n	80008ee <fsmVerPedRun+0x82>
				ver_ped = WALK_ALLOW;
 80008e8:	4b39      	ldr	r3, [pc, #228]	; (80009d0 <fsmVerPedRun+0x164>)
 80008ea:	220e      	movs	r2, #14
 80008ec:	601a      	str	r2, [r3, #0]
			}
			//Stop walk
			if((vertical_status == AUTO_GREEN) || (vertical_status == AUTO_YELLOW)){
 80008ee:	4b3d      	ldr	r3, [pc, #244]	; (80009e4 <fsmVerPedRun+0x178>)
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	2b03      	cmp	r3, #3
 80008f4:	d003      	beq.n	80008fe <fsmVerPedRun+0x92>
 80008f6:	4b3b      	ldr	r3, [pc, #236]	; (80009e4 <fsmVerPedRun+0x178>)
 80008f8:	681b      	ldr	r3, [r3, #0]
 80008fa:	2b04      	cmp	r3, #4
 80008fc:	d15e      	bne.n	80009bc <fsmVerPedRun+0x150>
				ver_ped = WALK_STOP;
 80008fe:	4b34      	ldr	r3, [pc, #208]	; (80009d0 <fsmVerPedRun+0x164>)
 8000900:	2210      	movs	r2, #16
 8000902:	601a      	str	r2, [r3, #0]
			}
			break;
 8000904:	e05a      	b.n	80009bc <fsmVerPedRun+0x150>
		case WALK_ALLOW:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000906:	2003      	movs	r0, #3
 8000908:	f7ff fd5e 	bl	80003c8 <isButtonPressed>
 800090c:	4603      	mov	r3, r0
 800090e:	2b00      	cmp	r3, #0
 8000910:	d005      	beq.n	800091e <fsmVerPedRun+0xb2>
				ver_ped = PED_OFF;
 8000912:	4b2f      	ldr	r3, [pc, #188]	; (80009d0 <fsmVerPedRun+0x164>)
 8000914:	220c      	movs	r2, #12
 8000916:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000918:	4b31      	ldr	r3, [pc, #196]	; (80009e0 <fsmVerPedRun+0x174>)
 800091a:	220c      	movs	r2, #12
 800091c:	601a      	str	r2, [r3, #0]
			}
			//3 seconds left -> turn on buzzer
			if((currentCounter(1) <= 3000) && (mode == AUTO_MODE)){
 800091e:	2001      	movs	r0, #1
 8000920:	f000 fe58 	bl	80015d4 <currentCounter>
 8000924:	4603      	mov	r3, r0
 8000926:	f640 32b8 	movw	r2, #3000	; 0xbb8
 800092a:	4293      	cmp	r3, r2
 800092c:	dc48      	bgt.n	80009c0 <fsmVerPedRun+0x154>
 800092e:	4b2e      	ldr	r3, [pc, #184]	; (80009e8 <fsmVerPedRun+0x17c>)
 8000930:	681b      	ldr	r3, [r3, #0]
 8000932:	2b01      	cmp	r3, #1
 8000934:	d144      	bne.n	80009c0 <fsmVerPedRun+0x154>
				ver_ped = BUZZER_ON;
 8000936:	4b26      	ldr	r3, [pc, #152]	; (80009d0 <fsmVerPedRun+0x164>)
 8000938:	220f      	movs	r2, #15
 800093a:	601a      	str	r2, [r3, #0]
				setTimer(3, 100);
 800093c:	2164      	movs	r1, #100	; 0x64
 800093e:	2003      	movs	r0, #3
 8000940:	f000 fe6c 	bl	800161c <setTimer>
			}
			break;
 8000944:	e03c      	b.n	80009c0 <fsmVerPedRun+0x154>
		case BUZZER_ON:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000946:	2003      	movs	r0, #3
 8000948:	f7ff fd3e 	bl	80003c8 <isButtonPressed>
 800094c:	4603      	mov	r3, r0
 800094e:	2b00      	cmp	r3, #0
 8000950:	d005      	beq.n	800095e <fsmVerPedRun+0xf2>
				ver_ped = PED_OFF;
 8000952:	4b1f      	ldr	r3, [pc, #124]	; (80009d0 <fsmVerPedRun+0x164>)
 8000954:	220c      	movs	r2, #12
 8000956:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000958:	4b21      	ldr	r3, [pc, #132]	; (80009e0 <fsmVerPedRun+0x174>)
 800095a:	220c      	movs	r2, #12
 800095c:	601a      	str	r2, [r3, #0]
			}
			//Stop walk
			if(vertical_status == AUTO_GREEN || mode != AUTO_MODE){
 800095e:	4b21      	ldr	r3, [pc, #132]	; (80009e4 <fsmVerPedRun+0x178>)
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	2b03      	cmp	r3, #3
 8000964:	d003      	beq.n	800096e <fsmVerPedRun+0x102>
 8000966:	4b20      	ldr	r3, [pc, #128]	; (80009e8 <fsmVerPedRun+0x17c>)
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	2b01      	cmp	r3, #1
 800096c:	d02a      	beq.n	80009c4 <fsmVerPedRun+0x158>
				ver_ped = WALK_STOP;
 800096e:	4b18      	ldr	r3, [pc, #96]	; (80009d0 <fsmVerPedRun+0x164>)
 8000970:	2210      	movs	r2, #16
 8000972:	601a      	str	r2, [r3, #0]
				//Reset buzzer
				buzzer_time = BUZZER_time;
 8000974:	4b17      	ldr	r3, [pc, #92]	; (80009d4 <fsmVerPedRun+0x168>)
 8000976:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800097a:	601a      	str	r2, [r3, #0]
				pul = BUZZER_pul;
 800097c:	4b16      	ldr	r3, [pc, #88]	; (80009d8 <fsmVerPedRun+0x16c>)
 800097e:	f240 2226 	movw	r2, #550	; 0x226
 8000982:	601a      	str	r2, [r3, #0]
				state = 0;
 8000984:	4b15      	ldr	r3, [pc, #84]	; (80009dc <fsmVerPedRun+0x170>)
 8000986:	2200      	movs	r2, #0
 8000988:	601a      	str	r2, [r3, #0]
			}
			break;
 800098a:	e01b      	b.n	80009c4 <fsmVerPedRun+0x158>
		case WALK_STOP:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 800098c:	2003      	movs	r0, #3
 800098e:	f7ff fd1b 	bl	80003c8 <isButtonPressed>
 8000992:	4603      	mov	r3, r0
 8000994:	2b00      	cmp	r3, #0
 8000996:	d005      	beq.n	80009a4 <fsmVerPedRun+0x138>
				ver_ped = PED_OFF;
 8000998:	4b0d      	ldr	r3, [pc, #52]	; (80009d0 <fsmVerPedRun+0x164>)
 800099a:	220c      	movs	r2, #12
 800099c:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 800099e:	4b10      	ldr	r3, [pc, #64]	; (80009e0 <fsmVerPedRun+0x174>)
 80009a0:	220c      	movs	r2, #12
 80009a2:	601a      	str	r2, [r3, #0]
			}
			//Allow walk
			if(vertical_status == AUTO_RED){
 80009a4:	4b0f      	ldr	r3, [pc, #60]	; (80009e4 <fsmVerPedRun+0x178>)
 80009a6:	681b      	ldr	r3, [r3, #0]
 80009a8:	2b02      	cmp	r3, #2
 80009aa:	d10d      	bne.n	80009c8 <fsmVerPedRun+0x15c>
				ver_ped = WALK_ALLOW;
 80009ac:	4b08      	ldr	r3, [pc, #32]	; (80009d0 <fsmVerPedRun+0x164>)
 80009ae:	220e      	movs	r2, #14
 80009b0:	601a      	str	r2, [r3, #0]
			}
			break;
 80009b2:	e009      	b.n	80009c8 <fsmVerPedRun+0x15c>
		default:
			break;
 80009b4:	bf00      	nop
 80009b6:	e008      	b.n	80009ca <fsmVerPedRun+0x15e>
			break;
 80009b8:	bf00      	nop
 80009ba:	e006      	b.n	80009ca <fsmVerPedRun+0x15e>
			break;
 80009bc:	bf00      	nop
 80009be:	e004      	b.n	80009ca <fsmVerPedRun+0x15e>
			break;
 80009c0:	bf00      	nop
 80009c2:	e002      	b.n	80009ca <fsmVerPedRun+0x15e>
			break;
 80009c4:	bf00      	nop
 80009c6:	e000      	b.n	80009ca <fsmVerPedRun+0x15e>
			break;
 80009c8:	bf00      	nop
	}
}
 80009ca:	bf00      	nop
 80009cc:	bd80      	pop	{r7, pc}
 80009ce:	bf00      	nop
 80009d0:	20000000 	.word	0x20000000
 80009d4:	20000008 	.word	0x20000008
 80009d8:	2000000c 	.word	0x2000000c
 80009dc:	200000b8 	.word	0x200000b8
 80009e0:	20000004 	.word	0x20000004
 80009e4:	200000b4 	.word	0x200000b4
 80009e8:	200000c0 	.word	0x200000c0

080009ec <fsmHorPedRun>:

void fsmHorPedRun(){
 80009ec:	b580      	push	{r7, lr}
 80009ee:	af00      	add	r7, sp, #0
	switch(hor_ped){
 80009f0:	4b57      	ldr	r3, [pc, #348]	; (8000b50 <fsmHorPedRun+0x164>)
 80009f2:	681b      	ldr	r3, [r3, #0]
 80009f4:	3b0c      	subs	r3, #12
 80009f6:	2b04      	cmp	r3, #4
 80009f8:	f200 809c 	bhi.w	8000b34 <fsmHorPedRun+0x148>
 80009fc:	a201      	add	r2, pc, #4	; (adr r2, 8000a04 <fsmHorPedRun+0x18>)
 80009fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a02:	bf00      	nop
 8000a04:	08000a19 	.word	0x08000a19
 8000a08:	08000a49 	.word	0x08000a49
 8000a0c:	08000a87 	.word	0x08000a87
 8000a10:	08000ac7 	.word	0x08000ac7
 8000a14:	08000b0d 	.word	0x08000b0d
		case PED_OFF:
			//Reset buzzer
			buzzer_time = BUZZER_time;
 8000a18:	4b4e      	ldr	r3, [pc, #312]	; (8000b54 <fsmHorPedRun+0x168>)
 8000a1a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000a1e:	601a      	str	r2, [r3, #0]
			pul = BUZZER_pul;
 8000a20:	4b4d      	ldr	r3, [pc, #308]	; (8000b58 <fsmHorPedRun+0x16c>)
 8000a22:	f240 2226 	movw	r2, #550	; 0x226
 8000a26:	601a      	str	r2, [r3, #0]
			state = 0;
 8000a28:	4b4c      	ldr	r3, [pc, #304]	; (8000b5c <fsmHorPedRun+0x170>)
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	601a      	str	r2, [r3, #0]
			//Turn on pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000a2e:	2003      	movs	r0, #3
 8000a30:	f7ff fcca 	bl	80003c8 <isButtonPressed>
 8000a34:	4603      	mov	r3, r0
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d07e      	beq.n	8000b38 <fsmHorPedRun+0x14c>
				ver_ped = PED_ON;
 8000a3a:	4b49      	ldr	r3, [pc, #292]	; (8000b60 <fsmHorPedRun+0x174>)
 8000a3c:	220d      	movs	r2, #13
 8000a3e:	601a      	str	r2, [r3, #0]
				hor_ped = PED_ON;
 8000a40:	4b43      	ldr	r3, [pc, #268]	; (8000b50 <fsmHorPedRun+0x164>)
 8000a42:	220d      	movs	r2, #13
 8000a44:	601a      	str	r2, [r3, #0]
			}
			break;
 8000a46:	e077      	b.n	8000b38 <fsmHorPedRun+0x14c>
		case PED_ON:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000a48:	2003      	movs	r0, #3
 8000a4a:	f7ff fcbd 	bl	80003c8 <isButtonPressed>
 8000a4e:	4603      	mov	r3, r0
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	d005      	beq.n	8000a60 <fsmHorPedRun+0x74>
				ver_ped = PED_OFF;
 8000a54:	4b42      	ldr	r3, [pc, #264]	; (8000b60 <fsmHorPedRun+0x174>)
 8000a56:	220c      	movs	r2, #12
 8000a58:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000a5a:	4b3d      	ldr	r3, [pc, #244]	; (8000b50 <fsmHorPedRun+0x164>)
 8000a5c:	220c      	movs	r2, #12
 8000a5e:	601a      	str	r2, [r3, #0]
			}
			//Allow walk
			if(horizontal_status == AUTO_RED){
 8000a60:	4b40      	ldr	r3, [pc, #256]	; (8000b64 <fsmHorPedRun+0x178>)
 8000a62:	681b      	ldr	r3, [r3, #0]
 8000a64:	2b02      	cmp	r3, #2
 8000a66:	d102      	bne.n	8000a6e <fsmHorPedRun+0x82>
				hor_ped = WALK_ALLOW;
 8000a68:	4b39      	ldr	r3, [pc, #228]	; (8000b50 <fsmHorPedRun+0x164>)
 8000a6a:	220e      	movs	r2, #14
 8000a6c:	601a      	str	r2, [r3, #0]
			}
			//Stop walk
			if((horizontal_status == AUTO_GREEN) || (horizontal_status == AUTO_YELLOW)){
 8000a6e:	4b3d      	ldr	r3, [pc, #244]	; (8000b64 <fsmHorPedRun+0x178>)
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	2b03      	cmp	r3, #3
 8000a74:	d003      	beq.n	8000a7e <fsmHorPedRun+0x92>
 8000a76:	4b3b      	ldr	r3, [pc, #236]	; (8000b64 <fsmHorPedRun+0x178>)
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	2b04      	cmp	r3, #4
 8000a7c:	d15e      	bne.n	8000b3c <fsmHorPedRun+0x150>
				hor_ped = WALK_STOP;
 8000a7e:	4b34      	ldr	r3, [pc, #208]	; (8000b50 <fsmHorPedRun+0x164>)
 8000a80:	2210      	movs	r2, #16
 8000a82:	601a      	str	r2, [r3, #0]
			}
			break;
 8000a84:	e05a      	b.n	8000b3c <fsmHorPedRun+0x150>
		case WALK_ALLOW:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000a86:	2003      	movs	r0, #3
 8000a88:	f7ff fc9e 	bl	80003c8 <isButtonPressed>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d005      	beq.n	8000a9e <fsmHorPedRun+0xb2>
				ver_ped = PED_OFF;
 8000a92:	4b33      	ldr	r3, [pc, #204]	; (8000b60 <fsmHorPedRun+0x174>)
 8000a94:	220c      	movs	r2, #12
 8000a96:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000a98:	4b2d      	ldr	r3, [pc, #180]	; (8000b50 <fsmHorPedRun+0x164>)
 8000a9a:	220c      	movs	r2, #12
 8000a9c:	601a      	str	r2, [r3, #0]
			}
			//3 seconds left -> turn on buzzer
			if((currentCounter(0) <= 3000) && (mode == AUTO_MODE)){
 8000a9e:	2000      	movs	r0, #0
 8000aa0:	f000 fd98 	bl	80015d4 <currentCounter>
 8000aa4:	4603      	mov	r3, r0
 8000aa6:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000aaa:	4293      	cmp	r3, r2
 8000aac:	dc48      	bgt.n	8000b40 <fsmHorPedRun+0x154>
 8000aae:	4b2e      	ldr	r3, [pc, #184]	; (8000b68 <fsmHorPedRun+0x17c>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	2b01      	cmp	r3, #1
 8000ab4:	d144      	bne.n	8000b40 <fsmHorPedRun+0x154>
				hor_ped = BUZZER_ON;
 8000ab6:	4b26      	ldr	r3, [pc, #152]	; (8000b50 <fsmHorPedRun+0x164>)
 8000ab8:	220f      	movs	r2, #15
 8000aba:	601a      	str	r2, [r3, #0]
				setTimer(2, 100);
 8000abc:	2164      	movs	r1, #100	; 0x64
 8000abe:	2002      	movs	r0, #2
 8000ac0:	f000 fdac 	bl	800161c <setTimer>
			}
			break;
 8000ac4:	e03c      	b.n	8000b40 <fsmHorPedRun+0x154>
		case BUZZER_ON:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000ac6:	2003      	movs	r0, #3
 8000ac8:	f7ff fc7e 	bl	80003c8 <isButtonPressed>
 8000acc:	4603      	mov	r3, r0
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	d005      	beq.n	8000ade <fsmHorPedRun+0xf2>
				ver_ped = PED_OFF;
 8000ad2:	4b23      	ldr	r3, [pc, #140]	; (8000b60 <fsmHorPedRun+0x174>)
 8000ad4:	220c      	movs	r2, #12
 8000ad6:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000ad8:	4b1d      	ldr	r3, [pc, #116]	; (8000b50 <fsmHorPedRun+0x164>)
 8000ada:	220c      	movs	r2, #12
 8000adc:	601a      	str	r2, [r3, #0]
			}
			//Stop walk
			if(horizontal_status == AUTO_GREEN || mode != AUTO_MODE){
 8000ade:	4b21      	ldr	r3, [pc, #132]	; (8000b64 <fsmHorPedRun+0x178>)
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	2b03      	cmp	r3, #3
 8000ae4:	d003      	beq.n	8000aee <fsmHorPedRun+0x102>
 8000ae6:	4b20      	ldr	r3, [pc, #128]	; (8000b68 <fsmHorPedRun+0x17c>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	2b01      	cmp	r3, #1
 8000aec:	d02a      	beq.n	8000b44 <fsmHorPedRun+0x158>
				hor_ped = WALK_STOP;
 8000aee:	4b18      	ldr	r3, [pc, #96]	; (8000b50 <fsmHorPedRun+0x164>)
 8000af0:	2210      	movs	r2, #16
 8000af2:	601a      	str	r2, [r3, #0]
				//Reset buzzer
				buzzer_time = BUZZER_time;
 8000af4:	4b17      	ldr	r3, [pc, #92]	; (8000b54 <fsmHorPedRun+0x168>)
 8000af6:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8000afa:	601a      	str	r2, [r3, #0]
				pul = BUZZER_pul;
 8000afc:	4b16      	ldr	r3, [pc, #88]	; (8000b58 <fsmHorPedRun+0x16c>)
 8000afe:	f240 2226 	movw	r2, #550	; 0x226
 8000b02:	601a      	str	r2, [r3, #0]
				state = 0;
 8000b04:	4b15      	ldr	r3, [pc, #84]	; (8000b5c <fsmHorPedRun+0x170>)
 8000b06:	2200      	movs	r2, #0
 8000b08:	601a      	str	r2, [r3, #0]
			}
			break;
 8000b0a:	e01b      	b.n	8000b44 <fsmHorPedRun+0x158>
		case WALK_STOP:
			//Turn off pedestrian mode
			if(isButtonPressed(BUTTON_PED)){
 8000b0c:	2003      	movs	r0, #3
 8000b0e:	f7ff fc5b 	bl	80003c8 <isButtonPressed>
 8000b12:	4603      	mov	r3, r0
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	d005      	beq.n	8000b24 <fsmHorPedRun+0x138>
				ver_ped = PED_OFF;
 8000b18:	4b11      	ldr	r3, [pc, #68]	; (8000b60 <fsmHorPedRun+0x174>)
 8000b1a:	220c      	movs	r2, #12
 8000b1c:	601a      	str	r2, [r3, #0]
				hor_ped = PED_OFF;
 8000b1e:	4b0c      	ldr	r3, [pc, #48]	; (8000b50 <fsmHorPedRun+0x164>)
 8000b20:	220c      	movs	r2, #12
 8000b22:	601a      	str	r2, [r3, #0]
			}
			//Allow walk
			if(horizontal_status == AUTO_RED){
 8000b24:	4b0f      	ldr	r3, [pc, #60]	; (8000b64 <fsmHorPedRun+0x178>)
 8000b26:	681b      	ldr	r3, [r3, #0]
 8000b28:	2b02      	cmp	r3, #2
 8000b2a:	d10d      	bne.n	8000b48 <fsmHorPedRun+0x15c>
				hor_ped = WALK_ALLOW;
 8000b2c:	4b08      	ldr	r3, [pc, #32]	; (8000b50 <fsmHorPedRun+0x164>)
 8000b2e:	220e      	movs	r2, #14
 8000b30:	601a      	str	r2, [r3, #0]
			}
			break;
 8000b32:	e009      	b.n	8000b48 <fsmHorPedRun+0x15c>
		default:
			break;
 8000b34:	bf00      	nop
 8000b36:	e008      	b.n	8000b4a <fsmHorPedRun+0x15e>
			break;
 8000b38:	bf00      	nop
 8000b3a:	e006      	b.n	8000b4a <fsmHorPedRun+0x15e>
			break;
 8000b3c:	bf00      	nop
 8000b3e:	e004      	b.n	8000b4a <fsmHorPedRun+0x15e>
			break;
 8000b40:	bf00      	nop
 8000b42:	e002      	b.n	8000b4a <fsmHorPedRun+0x15e>
			break;
 8000b44:	bf00      	nop
 8000b46:	e000      	b.n	8000b4a <fsmHorPedRun+0x15e>
			break;
 8000b48:	bf00      	nop
	}
}
 8000b4a:	bf00      	nop
 8000b4c:	bd80      	pop	{r7, pc}
 8000b4e:	bf00      	nop
 8000b50:	20000004 	.word	0x20000004
 8000b54:	20000008 	.word	0x20000008
 8000b58:	2000000c 	.word	0x2000000c
 8000b5c:	200000b8 	.word	0x200000b8
 8000b60:	20000000 	.word	0x20000000
 8000b64:	200000b0 	.word	0x200000b0
 8000b68:	200000c0 	.word	0x200000c0

08000b6c <fsmPedestrianModeRun>:

void fsmPedestrianModeRun() {
 8000b6c:	b580      	push	{r7, lr}
 8000b6e:	af00      	add	r7, sp, #0
	fsmVerPedRun();
 8000b70:	f7ff fe7c 	bl	800086c <fsmVerPedRun>
	fsmHorPedRun();
 8000b74:	f7ff ff3a 	bl	80009ec <fsmHorPedRun>

	switch(ver_ped){
 8000b78:	4ba2      	ldr	r3, [pc, #648]	; (8000e04 <fsmPedestrianModeRun+0x298>)
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	3b0c      	subs	r3, #12
 8000b7e:	2b04      	cmp	r3, #4
 8000b80:	f200 8098 	bhi.w	8000cb4 <fsmPedestrianModeRun+0x148>
 8000b84:	a201      	add	r2, pc, #4	; (adr r2, 8000b8c <fsmPedestrianModeRun+0x20>)
 8000b86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b8a:	bf00      	nop
 8000b8c:	08000ba1 	.word	0x08000ba1
 8000b90:	08000cb5 	.word	0x08000cb5
 8000b94:	08000bc1 	.word	0x08000bc1
 8000b98:	08000bd9 	.word	0x08000bd9
 8000b9c:	08000c95 	.word	0x08000c95
		case PED_OFF:
			//Turn off LED and Buzzer
			HAL_GPIO_WritePin(LED_RED_P2_GPIO_Port, LED_RED_P2_Pin, LED_OFF);
 8000ba0:	2200      	movs	r2, #0
 8000ba2:	2104      	movs	r1, #4
 8000ba4:	4898      	ldr	r0, [pc, #608]	; (8000e08 <fsmPedestrianModeRun+0x29c>)
 8000ba6:	f001 fb7a 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P2_GPIO_Port, LED_GREEN_P2_Pin, LED_OFF);
 8000baa:	2200      	movs	r2, #0
 8000bac:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000bb0:	4896      	ldr	r0, [pc, #600]	; (8000e0c <fsmPedestrianModeRun+0x2a0>)
 8000bb2:	f001 fb74 	bl	800229e <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, 0);
 8000bb6:	4b96      	ldr	r3, [pc, #600]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	2200      	movs	r2, #0
 8000bbc:	639a      	str	r2, [r3, #56]	; 0x38
			break;
 8000bbe:	e07c      	b.n	8000cba <fsmPedestrianModeRun+0x14e>
		case PED_ON:
			break;
		case WALK_ALLOW:
			//Turn on LED Green
			HAL_GPIO_WritePin(LED_RED_P2_GPIO_Port, LED_RED_P2_Pin, LED_OFF);
 8000bc0:	2200      	movs	r2, #0
 8000bc2:	2104      	movs	r1, #4
 8000bc4:	4890      	ldr	r0, [pc, #576]	; (8000e08 <fsmPedestrianModeRun+0x29c>)
 8000bc6:	f001 fb6a 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P2_GPIO_Port, LED_GREEN_P2_Pin, LED_ON);
 8000bca:	2201      	movs	r2, #1
 8000bcc:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000bd0:	488e      	ldr	r0, [pc, #568]	; (8000e0c <fsmPedestrianModeRun+0x2a0>)
 8000bd2:	f001 fb64 	bl	800229e <HAL_GPIO_WritePin>
			break;
 8000bd6:	e070      	b.n	8000cba <fsmPedestrianModeRun+0x14e>
		case BUZZER_ON:
			//Buzzer is louder and faster
			if(isTimerUp(3) && state == 1){
 8000bd8:	2003      	movs	r0, #3
 8000bda:	f000 fd0b 	bl	80015f4 <isTimerUp>
 8000bde:	4603      	mov	r3, r0
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d028      	beq.n	8000c36 <fsmPedestrianModeRun+0xca>
 8000be4:	4b8b      	ldr	r3, [pc, #556]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000be6:	681b      	ldr	r3, [r3, #0]
 8000be8:	2b01      	cmp	r3, #1
 8000bea:	d124      	bne.n	8000c36 <fsmPedestrianModeRun+0xca>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, pul);
 8000bec:	4b8a      	ldr	r3, [pc, #552]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000bee:	681a      	ldr	r2, [r3, #0]
 8000bf0:	4b87      	ldr	r3, [pc, #540]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	639a      	str	r2, [r3, #56]	; 0x38
				setTimer(3, buzzer_time);
 8000bf6:	4b89      	ldr	r3, [pc, #548]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000bf8:	681b      	ldr	r3, [r3, #0]
 8000bfa:	4619      	mov	r1, r3
 8000bfc:	2003      	movs	r0, #3
 8000bfe:	f000 fd0d 	bl	800161c <setTimer>
				state = 1 - state;
 8000c02:	4b84      	ldr	r3, [pc, #528]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000c04:	681b      	ldr	r3, [r3, #0]
 8000c06:	f1c3 0301 	rsb	r3, r3, #1
 8000c0a:	4a82      	ldr	r2, [pc, #520]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000c0c:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000c0e:	4b82      	ldr	r3, [pc, #520]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000c16:	4293      	cmp	r3, r2
 8000c18:	dc04      	bgt.n	8000c24 <fsmPedestrianModeRun+0xb8>
 8000c1a:	4b7f      	ldr	r3, [pc, #508]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	3364      	adds	r3, #100	; 0x64
 8000c20:	4a7d      	ldr	r2, [pc, #500]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000c22:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000c24:	4b7d      	ldr	r3, [pc, #500]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	2b64      	cmp	r3, #100	; 0x64
 8000c2a:	dd04      	ble.n	8000c36 <fsmPedestrianModeRun+0xca>
 8000c2c:	4b7b      	ldr	r3, [pc, #492]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c2e:	681b      	ldr	r3, [r3, #0]
 8000c30:	3b64      	subs	r3, #100	; 0x64
 8000c32:	4a7a      	ldr	r2, [pc, #488]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c34:	6013      	str	r3, [r2, #0]
			}
			if(isTimerUp(3) && state == 0){
 8000c36:	2003      	movs	r0, #3
 8000c38:	f000 fcdc 	bl	80015f4 <isTimerUp>
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	2b00      	cmp	r3, #0
 8000c40:	d03a      	beq.n	8000cb8 <fsmPedestrianModeRun+0x14c>
 8000c42:	4b74      	ldr	r3, [pc, #464]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000c44:	681b      	ldr	r3, [r3, #0]
 8000c46:	2b00      	cmp	r3, #0
 8000c48:	d136      	bne.n	8000cb8 <fsmPedestrianModeRun+0x14c>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, 0);
 8000c4a:	4b71      	ldr	r3, [pc, #452]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000c4c:	681b      	ldr	r3, [r3, #0]
 8000c4e:	2200      	movs	r2, #0
 8000c50:	639a      	str	r2, [r3, #56]	; 0x38
				setTimer(3, buzzer_time);
 8000c52:	4b72      	ldr	r3, [pc, #456]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c54:	681b      	ldr	r3, [r3, #0]
 8000c56:	4619      	mov	r1, r3
 8000c58:	2003      	movs	r0, #3
 8000c5a:	f000 fcdf 	bl	800161c <setTimer>
				state = 1 - state;
 8000c5e:	4b6d      	ldr	r3, [pc, #436]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000c60:	681b      	ldr	r3, [r3, #0]
 8000c62:	f1c3 0301 	rsb	r3, r3, #1
 8000c66:	4a6b      	ldr	r2, [pc, #428]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000c68:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000c6a:	4b6b      	ldr	r3, [pc, #428]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000c72:	4293      	cmp	r3, r2
 8000c74:	dc04      	bgt.n	8000c80 <fsmPedestrianModeRun+0x114>
 8000c76:	4b68      	ldr	r3, [pc, #416]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000c78:	681b      	ldr	r3, [r3, #0]
 8000c7a:	3364      	adds	r3, #100	; 0x64
 8000c7c:	4a66      	ldr	r2, [pc, #408]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000c7e:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000c80:	4b66      	ldr	r3, [pc, #408]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c82:	681b      	ldr	r3, [r3, #0]
 8000c84:	2b64      	cmp	r3, #100	; 0x64
 8000c86:	dd17      	ble.n	8000cb8 <fsmPedestrianModeRun+0x14c>
 8000c88:	4b64      	ldr	r3, [pc, #400]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c8a:	681b      	ldr	r3, [r3, #0]
 8000c8c:	3b64      	subs	r3, #100	; 0x64
 8000c8e:	4a63      	ldr	r2, [pc, #396]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000c90:	6013      	str	r3, [r2, #0]
			}
			break;
 8000c92:	e011      	b.n	8000cb8 <fsmPedestrianModeRun+0x14c>
		case WALK_STOP:
			//Turn on LED Red, turn off Buzzer
			HAL_GPIO_WritePin(LED_RED_P2_GPIO_Port, LED_RED_P2_Pin, LED_ON);
 8000c94:	2201      	movs	r2, #1
 8000c96:	2104      	movs	r1, #4
 8000c98:	485b      	ldr	r0, [pc, #364]	; (8000e08 <fsmPedestrianModeRun+0x29c>)
 8000c9a:	f001 fb00 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P2_GPIO_Port, LED_GREEN_P2_Pin, LED_OFF);
 8000c9e:	2200      	movs	r2, #0
 8000ca0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000ca4:	4859      	ldr	r0, [pc, #356]	; (8000e0c <fsmPedestrianModeRun+0x2a0>)
 8000ca6:	f001 fafa 	bl	800229e <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_2, 0);
 8000caa:	4b59      	ldr	r3, [pc, #356]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	2200      	movs	r2, #0
 8000cb0:	639a      	str	r2, [r3, #56]	; 0x38
			break;
 8000cb2:	e002      	b.n	8000cba <fsmPedestrianModeRun+0x14e>
		default:
			break;
 8000cb4:	bf00      	nop
 8000cb6:	e000      	b.n	8000cba <fsmPedestrianModeRun+0x14e>
			break;
 8000cb8:	bf00      	nop
	}

	switch(hor_ped){
 8000cba:	4b59      	ldr	r3, [pc, #356]	; (8000e20 <fsmPedestrianModeRun+0x2b4>)
 8000cbc:	681b      	ldr	r3, [r3, #0]
 8000cbe:	3b0c      	subs	r3, #12
 8000cc0:	2b04      	cmp	r3, #4
 8000cc2:	f200 809a 	bhi.w	8000dfa <fsmPedestrianModeRun+0x28e>
 8000cc6:	a201      	add	r2, pc, #4	; (adr r2, 8000ccc <fsmPedestrianModeRun+0x160>)
 8000cc8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ccc:	08000ce1 	.word	0x08000ce1
 8000cd0:	08000dfb 	.word	0x08000dfb
 8000cd4:	08000d03 	.word	0x08000d03
 8000cd8:	08000d1d 	.word	0x08000d1d
 8000cdc:	08000dd9 	.word	0x08000dd9
		case PED_OFF:
			//Turn off LED and Buzzer
			HAL_GPIO_WritePin(LED_RED_P1_GPIO_Port, LED_RED_P1_Pin, LED_OFF);
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000ce6:	4848      	ldr	r0, [pc, #288]	; (8000e08 <fsmPedestrianModeRun+0x29c>)
 8000ce8:	f001 fad9 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P1_GPIO_Port, LED_GREEN_P1_Pin, LED_OFF);
 8000cec:	2200      	movs	r2, #0
 8000cee:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000cf2:	4846      	ldr	r0, [pc, #280]	; (8000e0c <fsmPedestrianModeRun+0x2a0>)
 8000cf4:	f001 fad3 	bl	800229e <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, 0);
 8000cf8:	4b45      	ldr	r3, [pc, #276]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	635a      	str	r2, [r3, #52]	; 0x34
			break;
 8000d00:	e07e      	b.n	8000e00 <fsmPedestrianModeRun+0x294>
		case PED_ON:
			break;
		case WALK_ALLOW:
			//Turn on LED Green
			HAL_GPIO_WritePin(LED_RED_P1_GPIO_Port, LED_RED_P1_Pin, LED_OFF);
 8000d02:	2200      	movs	r2, #0
 8000d04:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000d08:	483f      	ldr	r0, [pc, #252]	; (8000e08 <fsmPedestrianModeRun+0x29c>)
 8000d0a:	f001 fac8 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P1_GPIO_Port, LED_GREEN_P1_Pin, LED_ON);
 8000d0e:	2201      	movs	r2, #1
 8000d10:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d14:	483d      	ldr	r0, [pc, #244]	; (8000e0c <fsmPedestrianModeRun+0x2a0>)
 8000d16:	f001 fac2 	bl	800229e <HAL_GPIO_WritePin>
			break;
 8000d1a:	e071      	b.n	8000e00 <fsmPedestrianModeRun+0x294>
		case BUZZER_ON:
			//Buzzer is louder and faster
			if(isTimerUp(2) && state == 1){
 8000d1c:	2002      	movs	r0, #2
 8000d1e:	f000 fc69 	bl	80015f4 <isTimerUp>
 8000d22:	4603      	mov	r3, r0
 8000d24:	2b00      	cmp	r3, #0
 8000d26:	d028      	beq.n	8000d7a <fsmPedestrianModeRun+0x20e>
 8000d28:	4b3a      	ldr	r3, [pc, #232]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000d2a:	681b      	ldr	r3, [r3, #0]
 8000d2c:	2b01      	cmp	r3, #1
 8000d2e:	d124      	bne.n	8000d7a <fsmPedestrianModeRun+0x20e>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, pul);
 8000d30:	4b39      	ldr	r3, [pc, #228]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000d32:	681a      	ldr	r2, [r3, #0]
 8000d34:	4b36      	ldr	r3, [pc, #216]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000d36:	681b      	ldr	r3, [r3, #0]
 8000d38:	635a      	str	r2, [r3, #52]	; 0x34
				setTimer(2, buzzer_time);
 8000d3a:	4b38      	ldr	r3, [pc, #224]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000d3c:	681b      	ldr	r3, [r3, #0]
 8000d3e:	4619      	mov	r1, r3
 8000d40:	2002      	movs	r0, #2
 8000d42:	f000 fc6b 	bl	800161c <setTimer>
				state = 1 - state;
 8000d46:	4b33      	ldr	r3, [pc, #204]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	f1c3 0301 	rsb	r3, r3, #1
 8000d4e:	4a31      	ldr	r2, [pc, #196]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000d50:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000d52:	4b31      	ldr	r3, [pc, #196]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000d5a:	4293      	cmp	r3, r2
 8000d5c:	dc04      	bgt.n	8000d68 <fsmPedestrianModeRun+0x1fc>
 8000d5e:	4b2e      	ldr	r3, [pc, #184]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	3364      	adds	r3, #100	; 0x64
 8000d64:	4a2c      	ldr	r2, [pc, #176]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000d66:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000d68:	4b2c      	ldr	r3, [pc, #176]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	2b64      	cmp	r3, #100	; 0x64
 8000d6e:	dd04      	ble.n	8000d7a <fsmPedestrianModeRun+0x20e>
 8000d70:	4b2a      	ldr	r3, [pc, #168]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	3b64      	subs	r3, #100	; 0x64
 8000d76:	4a29      	ldr	r2, [pc, #164]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000d78:	6013      	str	r3, [r2, #0]
			}
			if(isTimerUp(2) && state == 0){
 8000d7a:	2002      	movs	r0, #2
 8000d7c:	f000 fc3a 	bl	80015f4 <isTimerUp>
 8000d80:	4603      	mov	r3, r0
 8000d82:	2b00      	cmp	r3, #0
 8000d84:	d03b      	beq.n	8000dfe <fsmPedestrianModeRun+0x292>
 8000d86:	4b23      	ldr	r3, [pc, #140]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d137      	bne.n	8000dfe <fsmPedestrianModeRun+0x292>
				__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, 0);
 8000d8e:	4b20      	ldr	r3, [pc, #128]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000d90:	681b      	ldr	r3, [r3, #0]
 8000d92:	2200      	movs	r2, #0
 8000d94:	635a      	str	r2, [r3, #52]	; 0x34
				setTimer(2, buzzer_time);
 8000d96:	4b21      	ldr	r3, [pc, #132]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	4619      	mov	r1, r3
 8000d9c:	2002      	movs	r0, #2
 8000d9e:	f000 fc3d 	bl	800161c <setTimer>
				state = 1 - state;
 8000da2:	4b1c      	ldr	r3, [pc, #112]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	f1c3 0301 	rsb	r3, r3, #1
 8000daa:	4a1a      	ldr	r2, [pc, #104]	; (8000e14 <fsmPedestrianModeRun+0x2a8>)
 8000dac:	6013      	str	r3, [r2, #0]
				if(pul < 950) pul += 100;
 8000dae:	4b1a      	ldr	r3, [pc, #104]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	f240 32b5 	movw	r2, #949	; 0x3b5
 8000db6:	4293      	cmp	r3, r2
 8000db8:	dc04      	bgt.n	8000dc4 <fsmPedestrianModeRun+0x258>
 8000dba:	4b17      	ldr	r3, [pc, #92]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	3364      	adds	r3, #100	; 0x64
 8000dc0:	4a15      	ldr	r2, [pc, #84]	; (8000e18 <fsmPedestrianModeRun+0x2ac>)
 8000dc2:	6013      	str	r3, [r2, #0]
				if(buzzer_time > 100) buzzer_time -= 100;
 8000dc4:	4b15      	ldr	r3, [pc, #84]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	2b64      	cmp	r3, #100	; 0x64
 8000dca:	dd18      	ble.n	8000dfe <fsmPedestrianModeRun+0x292>
 8000dcc:	4b13      	ldr	r3, [pc, #76]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	3b64      	subs	r3, #100	; 0x64
 8000dd2:	4a12      	ldr	r2, [pc, #72]	; (8000e1c <fsmPedestrianModeRun+0x2b0>)
 8000dd4:	6013      	str	r3, [r2, #0]
			}
			break;
 8000dd6:	e012      	b.n	8000dfe <fsmPedestrianModeRun+0x292>
		case WALK_STOP:
			//Turn on LED Red, turn off Buzzer
			HAL_GPIO_WritePin(LED_RED_P1_GPIO_Port, LED_RED_P1_Pin, LED_ON);
 8000dd8:	2201      	movs	r2, #1
 8000dda:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000dde:	480a      	ldr	r0, [pc, #40]	; (8000e08 <fsmPedestrianModeRun+0x29c>)
 8000de0:	f001 fa5d 	bl	800229e <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(LED_GREEN_P1_GPIO_Port, LED_GREEN_P1_Pin, LED_OFF);
 8000de4:	2200      	movs	r2, #0
 8000de6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000dea:	4808      	ldr	r0, [pc, #32]	; (8000e0c <fsmPedestrianModeRun+0x2a0>)
 8000dec:	f001 fa57 	bl	800229e <HAL_GPIO_WritePin>
			__HAL_TIM_SetCompare (&htim3, TIM_CHANNEL_1, 0);
 8000df0:	4b07      	ldr	r3, [pc, #28]	; (8000e10 <fsmPedestrianModeRun+0x2a4>)
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	2200      	movs	r2, #0
 8000df6:	635a      	str	r2, [r3, #52]	; 0x34
			break;
 8000df8:	e002      	b.n	8000e00 <fsmPedestrianModeRun+0x294>
		default:
			break;
 8000dfa:	bf00      	nop
 8000dfc:	e000      	b.n	8000e00 <fsmPedestrianModeRun+0x294>
			break;
 8000dfe:	bf00      	nop
	}


}
 8000e00:	bf00      	nop
 8000e02:	bd80      	pop	{r7, pc}
 8000e04:	20000000 	.word	0x20000000
 8000e08:	40010c00 	.word	0x40010c00
 8000e0c:	40010800 	.word	0x40010800
 8000e10:	2000011c 	.word	0x2000011c
 8000e14:	200000b8 	.word	0x200000b8
 8000e18:	2000000c 	.word	0x2000000c
 8000e1c:	20000008 	.word	0x20000008
 8000e20:	20000004 	.word	0x20000004

08000e24 <fsmTuningModeRun>:
#include "fsm_tuning_mode.h"

int time_count = 0;

void fsmTuningModeRun() {
 8000e24:	b580      	push	{r7, lr}
 8000e26:	af00      	add	r7, sp, #0
	// FSM for TUNING MODE

	switch (mode) {
 8000e28:	4b5c      	ldr	r3, [pc, #368]	; (8000f9c <fsmTuningModeRun+0x178>)
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	2b0b      	cmp	r3, #11
 8000e2e:	d079      	beq.n	8000f24 <fsmTuningModeRun+0x100>
 8000e30:	2b0b      	cmp	r3, #11
 8000e32:	f300 80b0 	bgt.w	8000f96 <fsmTuningModeRun+0x172>
 8000e36:	2b09      	cmp	r3, #9
 8000e38:	d002      	beq.n	8000e40 <fsmTuningModeRun+0x1c>
 8000e3a:	2b0a      	cmp	r3, #10
 8000e3c:	d039      	beq.n	8000eb2 <fsmTuningModeRun+0x8e>
			sendTimeInc();

			break;

		default:
			break;
 8000e3e:	e0aa      	b.n	8000f96 <fsmTuningModeRun+0x172>
			if (isButtonPressed(BUTTON_MODE)) {
 8000e40:	2000      	movs	r0, #0
 8000e42:	f7ff fac1 	bl	80003c8 <isButtonPressed>
 8000e46:	4603      	mov	r3, r0
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	d006      	beq.n	8000e5a <fsmTuningModeRun+0x36>
				mode = AUTO_MODE;
 8000e4c:	4b53      	ldr	r3, [pc, #332]	; (8000f9c <fsmTuningModeRun+0x178>)
 8000e4e:	2201      	movs	r2, #1
 8000e50:	601a      	str	r2, [r3, #0]
				resetLights();
 8000e52:	f7ff faa9 	bl	80003a8 <resetLights>
				sendModeNoti();
 8000e56:	f000 fd89 	bl	800196c <sendModeNoti>
			if (isButtonPressed(BUTTON_SET)) {
 8000e5a:	2001      	movs	r0, #1
 8000e5c:	f7ff fab4 	bl	80003c8 <isButtonPressed>
 8000e60:	4603      	mov	r3, r0
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d009      	beq.n	8000e7a <fsmTuningModeRun+0x56>
				RED_time = time_count * 1000;
 8000e66:	4b4e      	ldr	r3, [pc, #312]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000e68:	681b      	ldr	r3, [r3, #0]
 8000e6a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000e6e:	fb02 f303 	mul.w	r3, r2, r3
 8000e72:	4a4c      	ldr	r2, [pc, #304]	; (8000fa4 <fsmTuningModeRun+0x180>)
 8000e74:	6013      	str	r3, [r2, #0]
				sendSetNoti();
 8000e76:	f000 fdeb 	bl	8001a50 <sendSetNoti>
			if (isButtonPressed(BUTTON_INC) || isButtonLongPressed(BUTTON_INC)) {
 8000e7a:	2002      	movs	r0, #2
 8000e7c:	f7ff faa4 	bl	80003c8 <isButtonPressed>
 8000e80:	4603      	mov	r3, r0
 8000e82:	2b00      	cmp	r3, #0
 8000e84:	d105      	bne.n	8000e92 <fsmTuningModeRun+0x6e>
 8000e86:	2002      	movs	r0, #2
 8000e88:	f7ff fab8 	bl	80003fc <isButtonLongPressed>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	d00c      	beq.n	8000eac <fsmTuningModeRun+0x88>
				if (time_count >= 99) time_count = 5;
 8000e92:	4b43      	ldr	r3, [pc, #268]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	2b62      	cmp	r3, #98	; 0x62
 8000e98:	dd03      	ble.n	8000ea2 <fsmTuningModeRun+0x7e>
 8000e9a:	4b41      	ldr	r3, [pc, #260]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000e9c:	2205      	movs	r2, #5
 8000e9e:	601a      	str	r2, [r3, #0]
 8000ea0:	e004      	b.n	8000eac <fsmTuningModeRun+0x88>
				else time_count++;
 8000ea2:	4b3f      	ldr	r3, [pc, #252]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	3301      	adds	r3, #1
 8000ea8:	4a3d      	ldr	r2, [pc, #244]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000eaa:	6013      	str	r3, [r2, #0]
			sendTimeInc();
 8000eac:	f000 fd02 	bl	80018b4 <sendTimeInc>
			break;
 8000eb0:	e072      	b.n	8000f98 <fsmTuningModeRun+0x174>
			if (isButtonPressed(BUTTON_MODE)) {
 8000eb2:	2000      	movs	r0, #0
 8000eb4:	f7ff fa88 	bl	80003c8 <isButtonPressed>
 8000eb8:	4603      	mov	r3, r0
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d006      	beq.n	8000ecc <fsmTuningModeRun+0xa8>
				mode = AUTO_MODE;
 8000ebe:	4b37      	ldr	r3, [pc, #220]	; (8000f9c <fsmTuningModeRun+0x178>)
 8000ec0:	2201      	movs	r2, #1
 8000ec2:	601a      	str	r2, [r3, #0]
				resetLights();
 8000ec4:	f7ff fa70 	bl	80003a8 <resetLights>
				sendModeNoti();
 8000ec8:	f000 fd50 	bl	800196c <sendModeNoti>
			if (isButtonPressed(BUTTON_SET)) {
 8000ecc:	2001      	movs	r0, #1
 8000ece:	f7ff fa7b 	bl	80003c8 <isButtonPressed>
 8000ed2:	4603      	mov	r3, r0
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d009      	beq.n	8000eec <fsmTuningModeRun+0xc8>
				GREEN_time = time_count * 1000;
 8000ed8:	4b31      	ldr	r3, [pc, #196]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000ee0:	fb02 f303 	mul.w	r3, r2, r3
 8000ee4:	4a30      	ldr	r2, [pc, #192]	; (8000fa8 <fsmTuningModeRun+0x184>)
 8000ee6:	6013      	str	r3, [r2, #0]
				sendSetNoti();
 8000ee8:	f000 fdb2 	bl	8001a50 <sendSetNoti>
			if (isButtonPressed(BUTTON_INC) || isButtonLongPressed(BUTTON_INC)) {
 8000eec:	2002      	movs	r0, #2
 8000eee:	f7ff fa6b 	bl	80003c8 <isButtonPressed>
 8000ef2:	4603      	mov	r3, r0
 8000ef4:	2b00      	cmp	r3, #0
 8000ef6:	d105      	bne.n	8000f04 <fsmTuningModeRun+0xe0>
 8000ef8:	2002      	movs	r0, #2
 8000efa:	f7ff fa7f 	bl	80003fc <isButtonLongPressed>
 8000efe:	4603      	mov	r3, r0
 8000f00:	2b00      	cmp	r3, #0
 8000f02:	d00c      	beq.n	8000f1e <fsmTuningModeRun+0xfa>
				if (time_count >= 89) time_count = 3;
 8000f04:	4b26      	ldr	r3, [pc, #152]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	2b58      	cmp	r3, #88	; 0x58
 8000f0a:	dd03      	ble.n	8000f14 <fsmTuningModeRun+0xf0>
 8000f0c:	4b24      	ldr	r3, [pc, #144]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f0e:	2203      	movs	r2, #3
 8000f10:	601a      	str	r2, [r3, #0]
 8000f12:	e004      	b.n	8000f1e <fsmTuningModeRun+0xfa>
				else time_count++;
 8000f14:	4b22      	ldr	r3, [pc, #136]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	3301      	adds	r3, #1
 8000f1a:	4a21      	ldr	r2, [pc, #132]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f1c:	6013      	str	r3, [r2, #0]
			sendTimeInc();
 8000f1e:	f000 fcc9 	bl	80018b4 <sendTimeInc>
			break;
 8000f22:	e039      	b.n	8000f98 <fsmTuningModeRun+0x174>
			if (isButtonPressed(BUTTON_MODE)) {
 8000f24:	2000      	movs	r0, #0
 8000f26:	f7ff fa4f 	bl	80003c8 <isButtonPressed>
 8000f2a:	4603      	mov	r3, r0
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	d006      	beq.n	8000f3e <fsmTuningModeRun+0x11a>
				mode = AUTO_MODE;
 8000f30:	4b1a      	ldr	r3, [pc, #104]	; (8000f9c <fsmTuningModeRun+0x178>)
 8000f32:	2201      	movs	r2, #1
 8000f34:	601a      	str	r2, [r3, #0]
				resetLights();
 8000f36:	f7ff fa37 	bl	80003a8 <resetLights>
				sendModeNoti();
 8000f3a:	f000 fd17 	bl	800196c <sendModeNoti>
			if (isButtonPressed(BUTTON_SET)) {
 8000f3e:	2001      	movs	r0, #1
 8000f40:	f7ff fa42 	bl	80003c8 <isButtonPressed>
 8000f44:	4603      	mov	r3, r0
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d009      	beq.n	8000f5e <fsmTuningModeRun+0x13a>
				YELLOW_time = time_count * 1000;
 8000f4a:	4b15      	ldr	r3, [pc, #84]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f4c:	681b      	ldr	r3, [r3, #0]
 8000f4e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000f52:	fb02 f303 	mul.w	r3, r2, r3
 8000f56:	4a15      	ldr	r2, [pc, #84]	; (8000fac <fsmTuningModeRun+0x188>)
 8000f58:	6013      	str	r3, [r2, #0]
				sendSetNoti();
 8000f5a:	f000 fd79 	bl	8001a50 <sendSetNoti>
			if (isButtonPressed(BUTTON_INC) || isButtonLongPressed(BUTTON_INC)) {
 8000f5e:	2002      	movs	r0, #2
 8000f60:	f7ff fa32 	bl	80003c8 <isButtonPressed>
 8000f64:	4603      	mov	r3, r0
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	d105      	bne.n	8000f76 <fsmTuningModeRun+0x152>
 8000f6a:	2002      	movs	r0, #2
 8000f6c:	f7ff fa46 	bl	80003fc <isButtonLongPressed>
 8000f70:	4603      	mov	r3, r0
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d00c      	beq.n	8000f90 <fsmTuningModeRun+0x16c>
				if (time_count >= 10) time_count = 2;
 8000f76:	4b0a      	ldr	r3, [pc, #40]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f78:	681b      	ldr	r3, [r3, #0]
 8000f7a:	2b09      	cmp	r3, #9
 8000f7c:	dd03      	ble.n	8000f86 <fsmTuningModeRun+0x162>
 8000f7e:	4b08      	ldr	r3, [pc, #32]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f80:	2202      	movs	r2, #2
 8000f82:	601a      	str	r2, [r3, #0]
 8000f84:	e004      	b.n	8000f90 <fsmTuningModeRun+0x16c>
				else time_count++;
 8000f86:	4b06      	ldr	r3, [pc, #24]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f88:	681b      	ldr	r3, [r3, #0]
 8000f8a:	3301      	adds	r3, #1
 8000f8c:	4a04      	ldr	r2, [pc, #16]	; (8000fa0 <fsmTuningModeRun+0x17c>)
 8000f8e:	6013      	str	r3, [r2, #0]
			sendTimeInc();
 8000f90:	f000 fc90 	bl	80018b4 <sendTimeInc>
			break;
 8000f94:	e000      	b.n	8000f98 <fsmTuningModeRun+0x174>
			break;
 8000f96:	bf00      	nop
	}
}
 8000f98:	bf00      	nop
 8000f9a:	bd80      	pop	{r7, pc}
 8000f9c:	200000c0 	.word	0x200000c0
 8000fa0:	200000bc 	.word	0x200000bc
 8000fa4:	20000018 	.word	0x20000018
 8000fa8:	2000001c 	.word	0x2000001c
 8000fac:	20000020 	.word	0x20000020

08000fb0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000fb4:	f000 fdb8 	bl	8001b28 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000fb8:	f000 f81c 	bl	8000ff4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000fbc:	f000 f908 	bl	80011d0 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000fc0:	f000 f8dc 	bl	800117c <MX_USART2_UART_Init>
  MX_TIM3_Init();
 8000fc4:	f000 f858 	bl	8001078 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim3);
 8000fc8:	4809      	ldr	r0, [pc, #36]	; (8000ff0 <main+0x40>)
 8000fca:	f001 fe0d 	bl	8002be8 <HAL_TIM_Base_Start_IT>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000fce:	2100      	movs	r1, #0
 8000fd0:	4807      	ldr	r0, [pc, #28]	; (8000ff0 <main+0x40>)
 8000fd2:	f001 feb3 	bl	8002d3c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 8000fd6:	2104      	movs	r1, #4
 8000fd8:	4805      	ldr	r0, [pc, #20]	; (8000ff0 <main+0x40>)
 8000fda:	f001 feaf 	bl	8002d3c <HAL_TIM_PWM_Start>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  while (1)
  {
	  fsmAutoModeRun();
 8000fde:	f7ff fb4b 	bl	8000678 <fsmAutoModeRun>
	  fsmManualModeRun();
 8000fe2:	f7ff fb6f 	bl	80006c4 <fsmManualModeRun>
	  fsmTuningModeRun();
 8000fe6:	f7ff ff1d 	bl	8000e24 <fsmTuningModeRun>
	  fsmPedestrianModeRun();
 8000fea:	f7ff fdbf 	bl	8000b6c <fsmPedestrianModeRun>
	  fsmAutoModeRun();
 8000fee:	e7f6      	b.n	8000fde <main+0x2e>
 8000ff0:	2000011c 	.word	0x2000011c

08000ff4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	b090      	sub	sp, #64	; 0x40
 8000ff8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ffa:	f107 0318 	add.w	r3, r7, #24
 8000ffe:	2228      	movs	r2, #40	; 0x28
 8001000:	2100      	movs	r1, #0
 8001002:	4618      	mov	r0, r3
 8001004:	f003 fa00 	bl	8004408 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001008:	1d3b      	adds	r3, r7, #4
 800100a:	2200      	movs	r2, #0
 800100c:	601a      	str	r2, [r3, #0]
 800100e:	605a      	str	r2, [r3, #4]
 8001010:	609a      	str	r2, [r3, #8]
 8001012:	60da      	str	r2, [r3, #12]
 8001014:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001016:	2302      	movs	r3, #2
 8001018:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800101a:	2301      	movs	r3, #1
 800101c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800101e:	2310      	movs	r3, #16
 8001020:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001022:	2302      	movs	r3, #2
 8001024:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8001026:	2300      	movs	r3, #0
 8001028:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 800102a:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 800102e:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001030:	f107 0318 	add.w	r3, r7, #24
 8001034:	4618      	mov	r0, r3
 8001036:	f001 f96d 	bl	8002314 <HAL_RCC_OscConfig>
 800103a:	4603      	mov	r3, r0
 800103c:	2b00      	cmp	r3, #0
 800103e:	d001      	beq.n	8001044 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8001040:	f000 f972 	bl	8001328 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001044:	230f      	movs	r3, #15
 8001046:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001048:	2302      	movs	r3, #2
 800104a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800104c:	2300      	movs	r3, #0
 800104e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001050:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001054:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001056:	2300      	movs	r3, #0
 8001058:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800105a:	1d3b      	adds	r3, r7, #4
 800105c:	2102      	movs	r1, #2
 800105e:	4618      	mov	r0, r3
 8001060:	f001 fbd8 	bl	8002814 <HAL_RCC_ClockConfig>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d001      	beq.n	800106e <SystemClock_Config+0x7a>
  {
    Error_Handler();
 800106a:	f000 f95d 	bl	8001328 <Error_Handler>
  }
}
 800106e:	bf00      	nop
 8001070:	3740      	adds	r7, #64	; 0x40
 8001072:	46bd      	mov	sp, r7
 8001074:	bd80      	pop	{r7, pc}
	...

08001078 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	b08e      	sub	sp, #56	; 0x38
 800107c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800107e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001082:	2200      	movs	r2, #0
 8001084:	601a      	str	r2, [r3, #0]
 8001086:	605a      	str	r2, [r3, #4]
 8001088:	609a      	str	r2, [r3, #8]
 800108a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800108c:	f107 0320 	add.w	r3, r7, #32
 8001090:	2200      	movs	r2, #0
 8001092:	601a      	str	r2, [r3, #0]
 8001094:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001096:	1d3b      	adds	r3, r7, #4
 8001098:	2200      	movs	r2, #0
 800109a:	601a      	str	r2, [r3, #0]
 800109c:	605a      	str	r2, [r3, #4]
 800109e:	609a      	str	r2, [r3, #8]
 80010a0:	60da      	str	r2, [r3, #12]
 80010a2:	611a      	str	r2, [r3, #16]
 80010a4:	615a      	str	r2, [r3, #20]
 80010a6:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80010a8:	4b32      	ldr	r3, [pc, #200]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010aa:	4a33      	ldr	r2, [pc, #204]	; (8001178 <MX_TIM3_Init+0x100>)
 80010ac:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 80010ae:	4b31      	ldr	r3, [pc, #196]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010b0:	223f      	movs	r2, #63	; 0x3f
 80010b2:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010b4:	4b2f      	ldr	r3, [pc, #188]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010b6:	2200      	movs	r2, #0
 80010b8:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 80010ba:	4b2e      	ldr	r3, [pc, #184]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010bc:	f240 32e7 	movw	r2, #999	; 0x3e7
 80010c0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80010c2:	4b2c      	ldr	r3, [pc, #176]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010c4:	2200      	movs	r2, #0
 80010c6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80010c8:	4b2a      	ldr	r3, [pc, #168]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010ca:	2200      	movs	r2, #0
 80010cc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80010ce:	4829      	ldr	r0, [pc, #164]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010d0:	f001 fd3a 	bl	8002b48 <HAL_TIM_Base_Init>
 80010d4:	4603      	mov	r3, r0
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d001      	beq.n	80010de <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80010da:	f000 f925 	bl	8001328 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80010de:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80010e2:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80010e4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80010e8:	4619      	mov	r1, r3
 80010ea:	4822      	ldr	r0, [pc, #136]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010ec:	f002 f88e 	bl	800320c <HAL_TIM_ConfigClockSource>
 80010f0:	4603      	mov	r3, r0
 80010f2:	2b00      	cmp	r3, #0
 80010f4:	d001      	beq.n	80010fa <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 80010f6:	f000 f917 	bl	8001328 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80010fa:	481e      	ldr	r0, [pc, #120]	; (8001174 <MX_TIM3_Init+0xfc>)
 80010fc:	f001 fdc6 	bl	8002c8c <HAL_TIM_PWM_Init>
 8001100:	4603      	mov	r3, r0
 8001102:	2b00      	cmp	r3, #0
 8001104:	d001      	beq.n	800110a <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8001106:	f000 f90f 	bl	8001328 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800110a:	2300      	movs	r3, #0
 800110c:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800110e:	2300      	movs	r3, #0
 8001110:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001112:	f107 0320 	add.w	r3, r7, #32
 8001116:	4619      	mov	r1, r3
 8001118:	4816      	ldr	r0, [pc, #88]	; (8001174 <MX_TIM3_Init+0xfc>)
 800111a:	f002 fc03 	bl	8003924 <HAL_TIMEx_MasterConfigSynchronization>
 800111e:	4603      	mov	r3, r0
 8001120:	2b00      	cmp	r3, #0
 8001122:	d001      	beq.n	8001128 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8001124:	f000 f900 	bl	8001328 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001128:	2360      	movs	r3, #96	; 0x60
 800112a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800112c:	2300      	movs	r3, #0
 800112e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001130:	2300      	movs	r3, #0
 8001132:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001134:	2300      	movs	r3, #0
 8001136:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001138:	1d3b      	adds	r3, r7, #4
 800113a:	2200      	movs	r2, #0
 800113c:	4619      	mov	r1, r3
 800113e:	480d      	ldr	r0, [pc, #52]	; (8001174 <MX_TIM3_Init+0xfc>)
 8001140:	f001 ffa6 	bl	8003090 <HAL_TIM_PWM_ConfigChannel>
 8001144:	4603      	mov	r3, r0
 8001146:	2b00      	cmp	r3, #0
 8001148:	d001      	beq.n	800114e <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 800114a:	f000 f8ed 	bl	8001328 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800114e:	1d3b      	adds	r3, r7, #4
 8001150:	2204      	movs	r2, #4
 8001152:	4619      	mov	r1, r3
 8001154:	4807      	ldr	r0, [pc, #28]	; (8001174 <MX_TIM3_Init+0xfc>)
 8001156:	f001 ff9b 	bl	8003090 <HAL_TIM_PWM_ConfigChannel>
 800115a:	4603      	mov	r3, r0
 800115c:	2b00      	cmp	r3, #0
 800115e:	d001      	beq.n	8001164 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 8001160:	f000 f8e2 	bl	8001328 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001164:	4803      	ldr	r0, [pc, #12]	; (8001174 <MX_TIM3_Init+0xfc>)
 8001166:	f000 f93d 	bl	80013e4 <HAL_TIM_MspPostInit>

}
 800116a:	bf00      	nop
 800116c:	3738      	adds	r7, #56	; 0x38
 800116e:	46bd      	mov	sp, r7
 8001170:	bd80      	pop	{r7, pc}
 8001172:	bf00      	nop
 8001174:	2000011c 	.word	0x2000011c
 8001178:	40000400 	.word	0x40000400

0800117c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800117c:	b580      	push	{r7, lr}
 800117e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001180:	4b11      	ldr	r3, [pc, #68]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 8001182:	4a12      	ldr	r2, [pc, #72]	; (80011cc <MX_USART2_UART_Init+0x50>)
 8001184:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8001186:	4b10      	ldr	r3, [pc, #64]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 8001188:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 800118c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800118e:	4b0e      	ldr	r3, [pc, #56]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 8001190:	2200      	movs	r2, #0
 8001192:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001194:	4b0c      	ldr	r3, [pc, #48]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 8001196:	2200      	movs	r2, #0
 8001198:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800119a:	4b0b      	ldr	r3, [pc, #44]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 800119c:	2200      	movs	r2, #0
 800119e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80011a0:	4b09      	ldr	r3, [pc, #36]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 80011a2:	220c      	movs	r2, #12
 80011a4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80011a6:	4b08      	ldr	r3, [pc, #32]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 80011a8:	2200      	movs	r2, #0
 80011aa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80011ac:	4b06      	ldr	r3, [pc, #24]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 80011ae:	2200      	movs	r2, #0
 80011b0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80011b2:	4805      	ldr	r0, [pc, #20]	; (80011c8 <MX_USART2_UART_Init+0x4c>)
 80011b4:	f002 fc26 	bl	8003a04 <HAL_UART_Init>
 80011b8:	4603      	mov	r3, r0
 80011ba:	2b00      	cmp	r3, #0
 80011bc:	d001      	beq.n	80011c2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80011be:	f000 f8b3 	bl	8001328 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80011c2:	bf00      	nop
 80011c4:	bd80      	pop	{r7, pc}
 80011c6:	bf00      	nop
 80011c8:	20000184 	.word	0x20000184
 80011cc:	40004400 	.word	0x40004400

080011d0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80011d0:	b580      	push	{r7, lr}
 80011d2:	b088      	sub	sp, #32
 80011d4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011d6:	f107 0310 	add.w	r3, r7, #16
 80011da:	2200      	movs	r2, #0
 80011dc:	601a      	str	r2, [r3, #0]
 80011de:	605a      	str	r2, [r3, #4]
 80011e0:	609a      	str	r2, [r3, #8]
 80011e2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80011e4:	4b45      	ldr	r3, [pc, #276]	; (80012fc <MX_GPIO_Init+0x12c>)
 80011e6:	699b      	ldr	r3, [r3, #24]
 80011e8:	4a44      	ldr	r2, [pc, #272]	; (80012fc <MX_GPIO_Init+0x12c>)
 80011ea:	f043 0310 	orr.w	r3, r3, #16
 80011ee:	6193      	str	r3, [r2, #24]
 80011f0:	4b42      	ldr	r3, [pc, #264]	; (80012fc <MX_GPIO_Init+0x12c>)
 80011f2:	699b      	ldr	r3, [r3, #24]
 80011f4:	f003 0310 	and.w	r3, r3, #16
 80011f8:	60fb      	str	r3, [r7, #12]
 80011fa:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80011fc:	4b3f      	ldr	r3, [pc, #252]	; (80012fc <MX_GPIO_Init+0x12c>)
 80011fe:	699b      	ldr	r3, [r3, #24]
 8001200:	4a3e      	ldr	r2, [pc, #248]	; (80012fc <MX_GPIO_Init+0x12c>)
 8001202:	f043 0320 	orr.w	r3, r3, #32
 8001206:	6193      	str	r3, [r2, #24]
 8001208:	4b3c      	ldr	r3, [pc, #240]	; (80012fc <MX_GPIO_Init+0x12c>)
 800120a:	699b      	ldr	r3, [r3, #24]
 800120c:	f003 0320 	and.w	r3, r3, #32
 8001210:	60bb      	str	r3, [r7, #8]
 8001212:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001214:	4b39      	ldr	r3, [pc, #228]	; (80012fc <MX_GPIO_Init+0x12c>)
 8001216:	699b      	ldr	r3, [r3, #24]
 8001218:	4a38      	ldr	r2, [pc, #224]	; (80012fc <MX_GPIO_Init+0x12c>)
 800121a:	f043 0304 	orr.w	r3, r3, #4
 800121e:	6193      	str	r3, [r2, #24]
 8001220:	4b36      	ldr	r3, [pc, #216]	; (80012fc <MX_GPIO_Init+0x12c>)
 8001222:	699b      	ldr	r3, [r3, #24]
 8001224:	f003 0304 	and.w	r3, r3, #4
 8001228:	607b      	str	r3, [r7, #4]
 800122a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800122c:	4b33      	ldr	r3, [pc, #204]	; (80012fc <MX_GPIO_Init+0x12c>)
 800122e:	699b      	ldr	r3, [r3, #24]
 8001230:	4a32      	ldr	r2, [pc, #200]	; (80012fc <MX_GPIO_Init+0x12c>)
 8001232:	f043 0308 	orr.w	r3, r3, #8
 8001236:	6193      	str	r3, [r2, #24]
 8001238:	4b30      	ldr	r3, [pc, #192]	; (80012fc <MX_GPIO_Init+0x12c>)
 800123a:	699b      	ldr	r3, [r3, #24]
 800123c:	f003 0308 	and.w	r3, r3, #8
 8001240:	603b      	str	r3, [r7, #0]
 8001242:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|LED_GREEN_P1_Pin|LED_GREEN_P2_Pin|LED_RED_1_Pin, GPIO_PIN_RESET);
 8001244:	2200      	movs	r2, #0
 8001246:	f44f 61e4 	mov.w	r1, #1824	; 0x720
 800124a:	482d      	ldr	r0, [pc, #180]	; (8001300 <MX_GPIO_Init+0x130>)
 800124c:	f001 f827 	bl	800229e <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED_RED_P2_Pin|LED_RED_P1_Pin|LED_GREEN_1_Pin|LED_GREEN_2_Pin
 8001250:	2200      	movs	r2, #0
 8001252:	f240 413c 	movw	r1, #1084	; 0x43c
 8001256:	482b      	ldr	r0, [pc, #172]	; (8001304 <MX_GPIO_Init+0x134>)
 8001258:	f001 f821 	bl	800229e <HAL_GPIO_WritePin>
                          |LED_RED_2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800125c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001260:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001262:	4b29      	ldr	r3, [pc, #164]	; (8001308 <MX_GPIO_Init+0x138>)
 8001264:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001266:	2300      	movs	r3, #0
 8001268:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800126a:	f107 0310 	add.w	r3, r7, #16
 800126e:	4619      	mov	r1, r3
 8001270:	4826      	ldr	r0, [pc, #152]	; (800130c <MX_GPIO_Init+0x13c>)
 8001272:	f000 fe79 	bl	8001f68 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON_PED_Pin BUTTON_MODE_Pin BUTTON_SET_Pin */
  GPIO_InitStruct.Pin = BUTTON_PED_Pin|BUTTON_MODE_Pin|BUTTON_SET_Pin;
 8001276:	2313      	movs	r3, #19
 8001278:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800127a:	2300      	movs	r3, #0
 800127c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800127e:	2301      	movs	r3, #1
 8001280:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001282:	f107 0310 	add.w	r3, r7, #16
 8001286:	4619      	mov	r1, r3
 8001288:	481d      	ldr	r0, [pc, #116]	; (8001300 <MX_GPIO_Init+0x130>)
 800128a:	f000 fe6d 	bl	8001f68 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin LED_GREEN_P1_Pin LED_GREEN_P2_Pin LED_RED_1_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|LED_GREEN_P1_Pin|LED_GREEN_P2_Pin|LED_RED_1_Pin;
 800128e:	f44f 63e4 	mov.w	r3, #1824	; 0x720
 8001292:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001294:	2301      	movs	r3, #1
 8001296:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001298:	2300      	movs	r3, #0
 800129a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800129c:	2302      	movs	r3, #2
 800129e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012a0:	f107 0310 	add.w	r3, r7, #16
 80012a4:	4619      	mov	r1, r3
 80012a6:	4816      	ldr	r0, [pc, #88]	; (8001300 <MX_GPIO_Init+0x130>)
 80012a8:	f000 fe5e 	bl	8001f68 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_INC_Pin */
  GPIO_InitStruct.Pin = BUTTON_INC_Pin;
 80012ac:	2301      	movs	r3, #1
 80012ae:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80012b0:	2300      	movs	r3, #0
 80012b2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80012b4:	2301      	movs	r3, #1
 80012b6:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BUTTON_INC_GPIO_Port, &GPIO_InitStruct);
 80012b8:	f107 0310 	add.w	r3, r7, #16
 80012bc:	4619      	mov	r1, r3
 80012be:	4811      	ldr	r0, [pc, #68]	; (8001304 <MX_GPIO_Init+0x134>)
 80012c0:	f000 fe52 	bl	8001f68 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_RED_P2_Pin LED_RED_P1_Pin LED_GREEN_1_Pin LED_GREEN_2_Pin
                           LED_RED_2_Pin */
  GPIO_InitStruct.Pin = LED_RED_P2_Pin|LED_RED_P1_Pin|LED_GREEN_1_Pin|LED_GREEN_2_Pin
 80012c4:	f240 433c 	movw	r3, #1084	; 0x43c
 80012c8:	613b      	str	r3, [r7, #16]
                          |LED_RED_2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012ca:	2301      	movs	r3, #1
 80012cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012ce:	2300      	movs	r3, #0
 80012d0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012d2:	2302      	movs	r3, #2
 80012d4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012d6:	f107 0310 	add.w	r3, r7, #16
 80012da:	4619      	mov	r1, r3
 80012dc:	4809      	ldr	r0, [pc, #36]	; (8001304 <MX_GPIO_Init+0x134>)
 80012de:	f000 fe43 	bl	8001f68 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80012e2:	2200      	movs	r2, #0
 80012e4:	2100      	movs	r1, #0
 80012e6:	2028      	movs	r0, #40	; 0x28
 80012e8:	f000 fd57 	bl	8001d9a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80012ec:	2028      	movs	r0, #40	; 0x28
 80012ee:	f000 fd70 	bl	8001dd2 <HAL_NVIC_EnableIRQ>

}
 80012f2:	bf00      	nop
 80012f4:	3720      	adds	r7, #32
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	40021000 	.word	0x40021000
 8001300:	40010800 	.word	0x40010800
 8001304:	40010c00 	.word	0x40010c00
 8001308:	10110000 	.word	0x10110000
 800130c:	40011000 	.word	0x40011000

08001310 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8001310:	b580      	push	{r7, lr}
 8001312:	b082      	sub	sp, #8
 8001314:	af00      	add	r7, sp, #0
 8001316:	6078      	str	r0, [r7, #4]
	timerRun();
 8001318:	f000 f99e 	bl	8001658 <timerRun>
	getKeyInput();
 800131c:	f7ff f8da 	bl	80004d4 <getKeyInput>
}
 8001320:	bf00      	nop
 8001322:	3708      	adds	r7, #8
 8001324:	46bd      	mov	sp, r7
 8001326:	bd80      	pop	{r7, pc}

08001328 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001328:	b480      	push	{r7}
 800132a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800132c:	b672      	cpsid	i
}
 800132e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001330:	e7fe      	b.n	8001330 <Error_Handler+0x8>
	...

08001334 <HAL_MspInit>:
 8001334:	b480      	push	{r7}
 8001336:	b085      	sub	sp, #20
 8001338:	af00      	add	r7, sp, #0
 800133a:	4b15      	ldr	r3, [pc, #84]	; (8001390 <HAL_MspInit+0x5c>)
 800133c:	699b      	ldr	r3, [r3, #24]
 800133e:	4a14      	ldr	r2, [pc, #80]	; (8001390 <HAL_MspInit+0x5c>)
 8001340:	f043 0301 	orr.w	r3, r3, #1
 8001344:	6193      	str	r3, [r2, #24]
 8001346:	4b12      	ldr	r3, [pc, #72]	; (8001390 <HAL_MspInit+0x5c>)
 8001348:	699b      	ldr	r3, [r3, #24]
 800134a:	f003 0301 	and.w	r3, r3, #1
 800134e:	60bb      	str	r3, [r7, #8]
 8001350:	68bb      	ldr	r3, [r7, #8]
 8001352:	4b0f      	ldr	r3, [pc, #60]	; (8001390 <HAL_MspInit+0x5c>)
 8001354:	69db      	ldr	r3, [r3, #28]
 8001356:	4a0e      	ldr	r2, [pc, #56]	; (8001390 <HAL_MspInit+0x5c>)
 8001358:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800135c:	61d3      	str	r3, [r2, #28]
 800135e:	4b0c      	ldr	r3, [pc, #48]	; (8001390 <HAL_MspInit+0x5c>)
 8001360:	69db      	ldr	r3, [r3, #28]
 8001362:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001366:	607b      	str	r3, [r7, #4]
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	4b0a      	ldr	r3, [pc, #40]	; (8001394 <HAL_MspInit+0x60>)
 800136c:	685b      	ldr	r3, [r3, #4]
 800136e:	60fb      	str	r3, [r7, #12]
 8001370:	68fb      	ldr	r3, [r7, #12]
 8001372:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001376:	60fb      	str	r3, [r7, #12]
 8001378:	68fb      	ldr	r3, [r7, #12]
 800137a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800137e:	60fb      	str	r3, [r7, #12]
 8001380:	4a04      	ldr	r2, [pc, #16]	; (8001394 <HAL_MspInit+0x60>)
 8001382:	68fb      	ldr	r3, [r7, #12]
 8001384:	6053      	str	r3, [r2, #4]
 8001386:	bf00      	nop
 8001388:	3714      	adds	r7, #20
 800138a:	46bd      	mov	sp, r7
 800138c:	bc80      	pop	{r7}
 800138e:	4770      	bx	lr
 8001390:	40021000 	.word	0x40021000
 8001394:	40010000 	.word	0x40010000

08001398 <HAL_TIM_Base_MspInit>:
 8001398:	b580      	push	{r7, lr}
 800139a:	b084      	sub	sp, #16
 800139c:	af00      	add	r7, sp, #0
 800139e:	6078      	str	r0, [r7, #4]
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	681b      	ldr	r3, [r3, #0]
 80013a4:	4a0d      	ldr	r2, [pc, #52]	; (80013dc <HAL_TIM_Base_MspInit+0x44>)
 80013a6:	4293      	cmp	r3, r2
 80013a8:	d113      	bne.n	80013d2 <HAL_TIM_Base_MspInit+0x3a>
 80013aa:	4b0d      	ldr	r3, [pc, #52]	; (80013e0 <HAL_TIM_Base_MspInit+0x48>)
 80013ac:	69db      	ldr	r3, [r3, #28]
 80013ae:	4a0c      	ldr	r2, [pc, #48]	; (80013e0 <HAL_TIM_Base_MspInit+0x48>)
 80013b0:	f043 0302 	orr.w	r3, r3, #2
 80013b4:	61d3      	str	r3, [r2, #28]
 80013b6:	4b0a      	ldr	r3, [pc, #40]	; (80013e0 <HAL_TIM_Base_MspInit+0x48>)
 80013b8:	69db      	ldr	r3, [r3, #28]
 80013ba:	f003 0302 	and.w	r3, r3, #2
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	68fb      	ldr	r3, [r7, #12]
 80013c2:	2200      	movs	r2, #0
 80013c4:	2100      	movs	r1, #0
 80013c6:	201d      	movs	r0, #29
 80013c8:	f000 fce7 	bl	8001d9a <HAL_NVIC_SetPriority>
 80013cc:	201d      	movs	r0, #29
 80013ce:	f000 fd00 	bl	8001dd2 <HAL_NVIC_EnableIRQ>
 80013d2:	bf00      	nop
 80013d4:	3710      	adds	r7, #16
 80013d6:	46bd      	mov	sp, r7
 80013d8:	bd80      	pop	{r7, pc}
 80013da:	bf00      	nop
 80013dc:	40000400 	.word	0x40000400
 80013e0:	40021000 	.word	0x40021000

080013e4 <HAL_TIM_MspPostInit>:
 80013e4:	b580      	push	{r7, lr}
 80013e6:	b088      	sub	sp, #32
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
 80013ec:	f107 0310 	add.w	r3, r7, #16
 80013f0:	2200      	movs	r2, #0
 80013f2:	601a      	str	r2, [r3, #0]
 80013f4:	605a      	str	r2, [r3, #4]
 80013f6:	609a      	str	r2, [r3, #8]
 80013f8:	60da      	str	r2, [r3, #12]
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	4a0f      	ldr	r2, [pc, #60]	; (800143c <HAL_TIM_MspPostInit+0x58>)
 8001400:	4293      	cmp	r3, r2
 8001402:	d117      	bne.n	8001434 <HAL_TIM_MspPostInit+0x50>
 8001404:	4b0e      	ldr	r3, [pc, #56]	; (8001440 <HAL_TIM_MspPostInit+0x5c>)
 8001406:	699b      	ldr	r3, [r3, #24]
 8001408:	4a0d      	ldr	r2, [pc, #52]	; (8001440 <HAL_TIM_MspPostInit+0x5c>)
 800140a:	f043 0304 	orr.w	r3, r3, #4
 800140e:	6193      	str	r3, [r2, #24]
 8001410:	4b0b      	ldr	r3, [pc, #44]	; (8001440 <HAL_TIM_MspPostInit+0x5c>)
 8001412:	699b      	ldr	r3, [r3, #24]
 8001414:	f003 0304 	and.w	r3, r3, #4
 8001418:	60fb      	str	r3, [r7, #12]
 800141a:	68fb      	ldr	r3, [r7, #12]
 800141c:	23c0      	movs	r3, #192	; 0xc0
 800141e:	613b      	str	r3, [r7, #16]
 8001420:	2302      	movs	r3, #2
 8001422:	617b      	str	r3, [r7, #20]
 8001424:	2302      	movs	r3, #2
 8001426:	61fb      	str	r3, [r7, #28]
 8001428:	f107 0310 	add.w	r3, r7, #16
 800142c:	4619      	mov	r1, r3
 800142e:	4805      	ldr	r0, [pc, #20]	; (8001444 <HAL_TIM_MspPostInit+0x60>)
 8001430:	f000 fd9a 	bl	8001f68 <HAL_GPIO_Init>
 8001434:	bf00      	nop
 8001436:	3720      	adds	r7, #32
 8001438:	46bd      	mov	sp, r7
 800143a:	bd80      	pop	{r7, pc}
 800143c:	40000400 	.word	0x40000400
 8001440:	40021000 	.word	0x40021000
 8001444:	40010800 	.word	0x40010800

08001448 <HAL_UART_MspInit>:
 8001448:	b580      	push	{r7, lr}
 800144a:	b088      	sub	sp, #32
 800144c:	af00      	add	r7, sp, #0
 800144e:	6078      	str	r0, [r7, #4]
 8001450:	f107 0310 	add.w	r3, r7, #16
 8001454:	2200      	movs	r2, #0
 8001456:	601a      	str	r2, [r3, #0]
 8001458:	605a      	str	r2, [r3, #4]
 800145a:	609a      	str	r2, [r3, #8]
 800145c:	60da      	str	r2, [r3, #12]
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	4a19      	ldr	r2, [pc, #100]	; (80014c8 <HAL_UART_MspInit+0x80>)
 8001464:	4293      	cmp	r3, r2
 8001466:	d12b      	bne.n	80014c0 <HAL_UART_MspInit+0x78>
 8001468:	4b18      	ldr	r3, [pc, #96]	; (80014cc <HAL_UART_MspInit+0x84>)
 800146a:	69db      	ldr	r3, [r3, #28]
 800146c:	4a17      	ldr	r2, [pc, #92]	; (80014cc <HAL_UART_MspInit+0x84>)
 800146e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001472:	61d3      	str	r3, [r2, #28]
 8001474:	4b15      	ldr	r3, [pc, #84]	; (80014cc <HAL_UART_MspInit+0x84>)
 8001476:	69db      	ldr	r3, [r3, #28]
 8001478:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800147c:	60fb      	str	r3, [r7, #12]
 800147e:	68fb      	ldr	r3, [r7, #12]
 8001480:	4b12      	ldr	r3, [pc, #72]	; (80014cc <HAL_UART_MspInit+0x84>)
 8001482:	699b      	ldr	r3, [r3, #24]
 8001484:	4a11      	ldr	r2, [pc, #68]	; (80014cc <HAL_UART_MspInit+0x84>)
 8001486:	f043 0304 	orr.w	r3, r3, #4
 800148a:	6193      	str	r3, [r2, #24]
 800148c:	4b0f      	ldr	r3, [pc, #60]	; (80014cc <HAL_UART_MspInit+0x84>)
 800148e:	699b      	ldr	r3, [r3, #24]
 8001490:	f003 0304 	and.w	r3, r3, #4
 8001494:	60bb      	str	r3, [r7, #8]
 8001496:	68bb      	ldr	r3, [r7, #8]
 8001498:	230c      	movs	r3, #12
 800149a:	613b      	str	r3, [r7, #16]
 800149c:	2302      	movs	r3, #2
 800149e:	617b      	str	r3, [r7, #20]
 80014a0:	2302      	movs	r3, #2
 80014a2:	61fb      	str	r3, [r7, #28]
 80014a4:	f107 0310 	add.w	r3, r7, #16
 80014a8:	4619      	mov	r1, r3
 80014aa:	4809      	ldr	r0, [pc, #36]	; (80014d0 <HAL_UART_MspInit+0x88>)
 80014ac:	f000 fd5c 	bl	8001f68 <HAL_GPIO_Init>
 80014b0:	2200      	movs	r2, #0
 80014b2:	2100      	movs	r1, #0
 80014b4:	2026      	movs	r0, #38	; 0x26
 80014b6:	f000 fc70 	bl	8001d9a <HAL_NVIC_SetPriority>
 80014ba:	2026      	movs	r0, #38	; 0x26
 80014bc:	f000 fc89 	bl	8001dd2 <HAL_NVIC_EnableIRQ>
 80014c0:	bf00      	nop
 80014c2:	3720      	adds	r7, #32
 80014c4:	46bd      	mov	sp, r7
 80014c6:	bd80      	pop	{r7, pc}
 80014c8:	40004400 	.word	0x40004400
 80014cc:	40021000 	.word	0x40021000
 80014d0:	40010800 	.word	0x40010800

080014d4 <NMI_Handler>:
 80014d4:	b480      	push	{r7}
 80014d6:	af00      	add	r7, sp, #0
 80014d8:	e7fe      	b.n	80014d8 <NMI_Handler+0x4>

080014da <HardFault_Handler>:
 80014da:	b480      	push	{r7}
 80014dc:	af00      	add	r7, sp, #0
 80014de:	e7fe      	b.n	80014de <HardFault_Handler+0x4>

080014e0 <MemManage_Handler>:
 80014e0:	b480      	push	{r7}
 80014e2:	af00      	add	r7, sp, #0
 80014e4:	e7fe      	b.n	80014e4 <MemManage_Handler+0x4>

080014e6 <BusFault_Handler>:
 80014e6:	b480      	push	{r7}
 80014e8:	af00      	add	r7, sp, #0
 80014ea:	e7fe      	b.n	80014ea <BusFault_Handler+0x4>

080014ec <UsageFault_Handler>:
 80014ec:	b480      	push	{r7}
 80014ee:	af00      	add	r7, sp, #0
 80014f0:	e7fe      	b.n	80014f0 <UsageFault_Handler+0x4>

080014f2 <SVC_Handler>:
 80014f2:	b480      	push	{r7}
 80014f4:	af00      	add	r7, sp, #0
 80014f6:	bf00      	nop
 80014f8:	46bd      	mov	sp, r7
 80014fa:	bc80      	pop	{r7}
 80014fc:	4770      	bx	lr

080014fe <DebugMon_Handler>:
 80014fe:	b480      	push	{r7}
 8001500:	af00      	add	r7, sp, #0
 8001502:	bf00      	nop
 8001504:	46bd      	mov	sp, r7
 8001506:	bc80      	pop	{r7}
 8001508:	4770      	bx	lr

0800150a <PendSV_Handler>:
 800150a:	b480      	push	{r7}
 800150c:	af00      	add	r7, sp, #0
 800150e:	bf00      	nop
 8001510:	46bd      	mov	sp, r7
 8001512:	bc80      	pop	{r7}
 8001514:	4770      	bx	lr

08001516 <SysTick_Handler>:
 8001516:	b580      	push	{r7, lr}
 8001518:	af00      	add	r7, sp, #0
 800151a:	f000 fb4b 	bl	8001bb4 <HAL_IncTick>
 800151e:	bf00      	nop
 8001520:	bd80      	pop	{r7, pc}
	...

08001524 <TIM3_IRQHandler>:
 8001524:	b580      	push	{r7, lr}
 8001526:	af00      	add	r7, sp, #0
 8001528:	4802      	ldr	r0, [pc, #8]	; (8001534 <TIM3_IRQHandler+0x10>)
 800152a:	f001 fca9 	bl	8002e80 <HAL_TIM_IRQHandler>
 800152e:	bf00      	nop
 8001530:	bd80      	pop	{r7, pc}
 8001532:	bf00      	nop
 8001534:	2000011c 	.word	0x2000011c

08001538 <USART2_IRQHandler>:
 8001538:	b580      	push	{r7, lr}
 800153a:	af00      	add	r7, sp, #0
 800153c:	4802      	ldr	r0, [pc, #8]	; (8001548 <USART2_IRQHandler+0x10>)
 800153e:	f002 fb41 	bl	8003bc4 <HAL_UART_IRQHandler>
 8001542:	bf00      	nop
 8001544:	bd80      	pop	{r7, pc}
 8001546:	bf00      	nop
 8001548:	20000184 	.word	0x20000184

0800154c <EXTI15_10_IRQHandler>:
 800154c:	b580      	push	{r7, lr}
 800154e:	af00      	add	r7, sp, #0
 8001550:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001554:	f000 febc 	bl	80022d0 <HAL_GPIO_EXTI_IRQHandler>
 8001558:	bf00      	nop
 800155a:	bd80      	pop	{r7, pc}

0800155c <_sbrk>:
 800155c:	b580      	push	{r7, lr}
 800155e:	b086      	sub	sp, #24
 8001560:	af00      	add	r7, sp, #0
 8001562:	6078      	str	r0, [r7, #4]
 8001564:	4a14      	ldr	r2, [pc, #80]	; (80015b8 <_sbrk+0x5c>)
 8001566:	4b15      	ldr	r3, [pc, #84]	; (80015bc <_sbrk+0x60>)
 8001568:	1ad3      	subs	r3, r2, r3
 800156a:	617b      	str	r3, [r7, #20]
 800156c:	697b      	ldr	r3, [r7, #20]
 800156e:	613b      	str	r3, [r7, #16]
 8001570:	4b13      	ldr	r3, [pc, #76]	; (80015c0 <_sbrk+0x64>)
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	2b00      	cmp	r3, #0
 8001576:	d102      	bne.n	800157e <_sbrk+0x22>
 8001578:	4b11      	ldr	r3, [pc, #68]	; (80015c0 <_sbrk+0x64>)
 800157a:	4a12      	ldr	r2, [pc, #72]	; (80015c4 <_sbrk+0x68>)
 800157c:	601a      	str	r2, [r3, #0]
 800157e:	4b10      	ldr	r3, [pc, #64]	; (80015c0 <_sbrk+0x64>)
 8001580:	681a      	ldr	r2, [r3, #0]
 8001582:	687b      	ldr	r3, [r7, #4]
 8001584:	4413      	add	r3, r2
 8001586:	693a      	ldr	r2, [r7, #16]
 8001588:	429a      	cmp	r2, r3
 800158a:	d207      	bcs.n	800159c <_sbrk+0x40>
 800158c:	f002 ff12 	bl	80043b4 <__errno>
 8001590:	4603      	mov	r3, r0
 8001592:	220c      	movs	r2, #12
 8001594:	601a      	str	r2, [r3, #0]
 8001596:	f04f 33ff 	mov.w	r3, #4294967295
 800159a:	e009      	b.n	80015b0 <_sbrk+0x54>
 800159c:	4b08      	ldr	r3, [pc, #32]	; (80015c0 <_sbrk+0x64>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	60fb      	str	r3, [r7, #12]
 80015a2:	4b07      	ldr	r3, [pc, #28]	; (80015c0 <_sbrk+0x64>)
 80015a4:	681a      	ldr	r2, [r3, #0]
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	4413      	add	r3, r2
 80015aa:	4a05      	ldr	r2, [pc, #20]	; (80015c0 <_sbrk+0x64>)
 80015ac:	6013      	str	r3, [r2, #0]
 80015ae:	68fb      	ldr	r3, [r7, #12]
 80015b0:	4618      	mov	r0, r3
 80015b2:	3718      	adds	r7, #24
 80015b4:	46bd      	mov	sp, r7
 80015b6:	bd80      	pop	{r7, pc}
 80015b8:	20005000 	.word	0x20005000
 80015bc:	00000400 	.word	0x00000400
 80015c0:	200000c4 	.word	0x200000c4
 80015c4:	20000210 	.word	0x20000210

080015c8 <SystemInit>:
 80015c8:	b480      	push	{r7}
 80015ca:	af00      	add	r7, sp, #0
 80015cc:	bf00      	nop
 80015ce:	46bd      	mov	sp, r7
 80015d0:	bc80      	pop	{r7}
 80015d2:	4770      	bx	lr

080015d4 <currentCounter>:
#include "timer.h"

int timer_counter[NO_OF_TIMER];
int timer_flag[NO_OF_TIMER];

int currentCounter(int timer) {
 80015d4:	b480      	push	{r7}
 80015d6:	b083      	sub	sp, #12
 80015d8:	af00      	add	r7, sp, #0
 80015da:	6078      	str	r0, [r7, #4]
	return timer_counter[timer];
 80015dc:	4a04      	ldr	r2, [pc, #16]	; (80015f0 <currentCounter+0x1c>)
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
}
 80015e4:	4618      	mov	r0, r3
 80015e6:	370c      	adds	r7, #12
 80015e8:	46bd      	mov	sp, r7
 80015ea:	bc80      	pop	{r7}
 80015ec:	4770      	bx	lr
 80015ee:	bf00      	nop
 80015f0:	20000164 	.word	0x20000164

080015f4 <isTimerUp>:

int isTimerUp(int timer) {
 80015f4:	b480      	push	{r7}
 80015f6:	b083      	sub	sp, #12
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	6078      	str	r0, [r7, #4]
	return (timer_flag[timer] == 1);
 80015fc:	4a06      	ldr	r2, [pc, #24]	; (8001618 <isTimerUp+0x24>)
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001604:	2b01      	cmp	r3, #1
 8001606:	bf0c      	ite	eq
 8001608:	2301      	moveq	r3, #1
 800160a:	2300      	movne	r3, #0
 800160c:	b2db      	uxtb	r3, r3
}
 800160e:	4618      	mov	r0, r3
 8001610:	370c      	adds	r7, #12
 8001612:	46bd      	mov	sp, r7
 8001614:	bc80      	pop	{r7}
 8001616:	4770      	bx	lr
 8001618:	20000174 	.word	0x20000174

0800161c <setTimer>:

void setTimer(int timer, int duration){
 800161c:	b480      	push	{r7}
 800161e:	b083      	sub	sp, #12
 8001620:	af00      	add	r7, sp, #0
 8001622:	6078      	str	r0, [r7, #4]
 8001624:	6039      	str	r1, [r7, #0]
	timer_counter[timer] = duration / timer_cycle;
 8001626:	4b09      	ldr	r3, [pc, #36]	; (800164c <setTimer+0x30>)
 8001628:	681b      	ldr	r3, [r3, #0]
 800162a:	683a      	ldr	r2, [r7, #0]
 800162c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001630:	4907      	ldr	r1, [pc, #28]	; (8001650 <setTimer+0x34>)
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	timer_flag[timer] = 0;
 8001638:	4a06      	ldr	r2, [pc, #24]	; (8001654 <setTimer+0x38>)
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	2100      	movs	r1, #0
 800163e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8001642:	bf00      	nop
 8001644:	370c      	adds	r7, #12
 8001646:	46bd      	mov	sp, r7
 8001648:	bc80      	pop	{r7}
 800164a:	4770      	bx	lr
 800164c:	20000010 	.word	0x20000010
 8001650:	20000164 	.word	0x20000164
 8001654:	20000174 	.word	0x20000174

08001658 <timerRun>:
void timerRun(){
 8001658:	b480      	push	{r7}
 800165a:	b083      	sub	sp, #12
 800165c:	af00      	add	r7, sp, #0
	for (int timer = 0; timer < NO_OF_TIMER; timer++) {
 800165e:	2300      	movs	r3, #0
 8001660:	607b      	str	r3, [r7, #4]
 8001662:	e01c      	b.n	800169e <timerRun+0x46>
		if(timer_counter[timer] > 0){
 8001664:	4a12      	ldr	r2, [pc, #72]	; (80016b0 <timerRun+0x58>)
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800166c:	2b00      	cmp	r3, #0
 800166e:	dd13      	ble.n	8001698 <timerRun+0x40>
			timer_counter[timer]--;
 8001670:	4a0f      	ldr	r2, [pc, #60]	; (80016b0 <timerRun+0x58>)
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001678:	1e5a      	subs	r2, r3, #1
 800167a:	490d      	ldr	r1, [pc, #52]	; (80016b0 <timerRun+0x58>)
 800167c:	687b      	ldr	r3, [r7, #4]
 800167e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if(timer_counter[timer] == 0) {
 8001682:	4a0b      	ldr	r2, [pc, #44]	; (80016b0 <timerRun+0x58>)
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800168a:	2b00      	cmp	r3, #0
 800168c:	d104      	bne.n	8001698 <timerRun+0x40>
				timer_flag[timer] = 1;
 800168e:	4a09      	ldr	r2, [pc, #36]	; (80016b4 <timerRun+0x5c>)
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	2101      	movs	r1, #1
 8001694:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int timer = 0; timer < NO_OF_TIMER; timer++) {
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	3301      	adds	r3, #1
 800169c:	607b      	str	r3, [r7, #4]
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	2b03      	cmp	r3, #3
 80016a2:	dddf      	ble.n	8001664 <timerRun+0xc>
			}
		}
	}
}
 80016a4:	bf00      	nop
 80016a6:	bf00      	nop
 80016a8:	370c      	adds	r7, #12
 80016aa:	46bd      	mov	sp, r7
 80016ac:	bc80      	pop	{r7}
 80016ae:	4770      	bx	lr
 80016b0:	20000164 	.word	0x20000164
 80016b4:	20000174 	.word	0x20000174

080016b8 <sendTimerCounter>:
int count1 = 0;
int count2 = 0;
char str[50];
UART_HandleTypeDef huart2;

void sendTimerCounter() {
 80016b8:	b580      	push	{r7, lr}
 80016ba:	af00      	add	r7, sp, #0

	// Send current time counter of horizontal traffic lights
	if (count1 != currentCounter(0) / 100) {
 80016bc:	2000      	movs	r0, #0
 80016be:	f7ff ff89 	bl	80015d4 <currentCounter>
 80016c2:	4603      	mov	r3, r0
 80016c4:	4a1f      	ldr	r2, [pc, #124]	; (8001744 <sendTimerCounter+0x8c>)
 80016c6:	fb82 1203 	smull	r1, r2, r2, r3
 80016ca:	1152      	asrs	r2, r2, #5
 80016cc:	17db      	asrs	r3, r3, #31
 80016ce:	1ad2      	subs	r2, r2, r3
 80016d0:	4b1d      	ldr	r3, [pc, #116]	; (8001748 <sendTimerCounter+0x90>)
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	429a      	cmp	r2, r3
 80016d6:	d033      	beq.n	8001740 <sendTimerCounter+0x88>
		count1 = currentCounter(0) / 100;
 80016d8:	2000      	movs	r0, #0
 80016da:	f7ff ff7b 	bl	80015d4 <currentCounter>
 80016de:	4603      	mov	r3, r0
 80016e0:	4a18      	ldr	r2, [pc, #96]	; (8001744 <sendTimerCounter+0x8c>)
 80016e2:	fb82 1203 	smull	r1, r2, r2, r3
 80016e6:	1152      	asrs	r2, r2, #5
 80016e8:	17db      	asrs	r3, r3, #31
 80016ea:	1ad3      	subs	r3, r2, r3
 80016ec:	4a16      	ldr	r2, [pc, #88]	; (8001748 <sendTimerCounter+0x90>)
 80016ee:	6013      	str	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d - ", "H: ", count1), 100);
 80016f0:	4b15      	ldr	r3, [pc, #84]	; (8001748 <sendTimerCounter+0x90>)
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	4a15      	ldr	r2, [pc, #84]	; (800174c <sendTimerCounter+0x94>)
 80016f6:	4916      	ldr	r1, [pc, #88]	; (8001750 <sendTimerCounter+0x98>)
 80016f8:	4816      	ldr	r0, [pc, #88]	; (8001754 <sendTimerCounter+0x9c>)
 80016fa:	f002 fe8d 	bl	8004418 <siprintf>
 80016fe:	4603      	mov	r3, r0
 8001700:	b29a      	uxth	r2, r3
 8001702:	2364      	movs	r3, #100	; 0x64
 8001704:	4913      	ldr	r1, [pc, #76]	; (8001754 <sendTimerCounter+0x9c>)
 8001706:	4814      	ldr	r0, [pc, #80]	; (8001758 <sendTimerCounter+0xa0>)
 8001708:	f002 f9c9 	bl	8003a9e <HAL_UART_Transmit>

		count2 = currentCounter(1) / 100;
 800170c:	2001      	movs	r0, #1
 800170e:	f7ff ff61 	bl	80015d4 <currentCounter>
 8001712:	4603      	mov	r3, r0
 8001714:	4a0b      	ldr	r2, [pc, #44]	; (8001744 <sendTimerCounter+0x8c>)
 8001716:	fb82 1203 	smull	r1, r2, r2, r3
 800171a:	1152      	asrs	r2, r2, #5
 800171c:	17db      	asrs	r3, r3, #31
 800171e:	1ad3      	subs	r3, r2, r3
 8001720:	4a0e      	ldr	r2, [pc, #56]	; (800175c <sendTimerCounter+0xa4>)
 8001722:	6013      	str	r3, [r2, #0]
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "V: ", count2), 100);
 8001724:	4b0d      	ldr	r3, [pc, #52]	; (800175c <sendTimerCounter+0xa4>)
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	4a0d      	ldr	r2, [pc, #52]	; (8001760 <sendTimerCounter+0xa8>)
 800172a:	490e      	ldr	r1, [pc, #56]	; (8001764 <sendTimerCounter+0xac>)
 800172c:	4809      	ldr	r0, [pc, #36]	; (8001754 <sendTimerCounter+0x9c>)
 800172e:	f002 fe73 	bl	8004418 <siprintf>
 8001732:	4603      	mov	r3, r0
 8001734:	b29a      	uxth	r2, r3
 8001736:	2364      	movs	r3, #100	; 0x64
 8001738:	4906      	ldr	r1, [pc, #24]	; (8001754 <sendTimerCounter+0x9c>)
 800173a:	4807      	ldr	r0, [pc, #28]	; (8001758 <sendTimerCounter+0xa0>)
 800173c:	f002 f9af 	bl	8003a9e <HAL_UART_Transmit>

//	if (count2 != currentCounter(1) / 100) {
//		count2 = currentCounter(1) / 100;
//		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "V: ", count2), 100);
//	}
}
 8001740:	bf00      	nop
 8001742:	bd80      	pop	{r7, pc}
 8001744:	51eb851f 	.word	0x51eb851f
 8001748:	200000cc 	.word	0x200000cc
 800174c:	08004ca4 	.word	0x08004ca4
 8001750:	08004ca8 	.word	0x08004ca8
 8001754:	200001c8 	.word	0x200001c8
 8001758:	20000184 	.word	0x20000184
 800175c:	200000d0 	.word	0x200000d0
 8001760:	08004cb0 	.word	0x08004cb0
 8001764:	08004cb4 	.word	0x08004cb4

08001768 <sendTimeDuration>:

void sendTimeDuration() {
 8001768:	b580      	push	{r7, lr}
 800176a:	af00      	add	r7, sp, #0
	switch (mode) {
 800176c:	4b45      	ldr	r3, [pc, #276]	; (8001884 <sendTimeDuration+0x11c>)
 800176e:	681b      	ldr	r3, [r3, #0]
 8001770:	3b05      	subs	r3, #5
 8001772:	2b03      	cmp	r3, #3
 8001774:	d87d      	bhi.n	8001872 <sendTimeDuration+0x10a>
 8001776:	a201      	add	r2, pc, #4	; (adr r2, 800177c <sendTimeDuration+0x14>)
 8001778:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800177c:	0800178d 	.word	0x0800178d
 8001780:	08001795 	.word	0x08001795
 8001784:	080017df 	.word	0x080017df
 8001788:	08001829 	.word	0x08001829
		case MAN_MODE:
			count = 0;
 800178c:	4b3e      	ldr	r3, [pc, #248]	; (8001888 <sendTimeDuration+0x120>)
 800178e:	2200      	movs	r2, #0
 8001790:	601a      	str	r2, [r3, #0]
			break;
 8001792:	e075      	b.n	8001880 <sendTimeDuration+0x118>

		case MAN_RED:
			// Send duration time of red lights
			if (count != RED_time / 1000)
 8001794:	4b3d      	ldr	r3, [pc, #244]	; (800188c <sendTimeDuration+0x124>)
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	4a3d      	ldr	r2, [pc, #244]	; (8001890 <sendTimeDuration+0x128>)
 800179a:	fb82 1203 	smull	r1, r2, r2, r3
 800179e:	1192      	asrs	r2, r2, #6
 80017a0:	17db      	asrs	r3, r3, #31
 80017a2:	1ad2      	subs	r2, r2, r3
 80017a4:	4b38      	ldr	r3, [pc, #224]	; (8001888 <sendTimeDuration+0x120>)
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	429a      	cmp	r2, r3
 80017aa:	d064      	beq.n	8001876 <sendTimeDuration+0x10e>
			{
				count = RED_time / 1000;
 80017ac:	4b37      	ldr	r3, [pc, #220]	; (800188c <sendTimeDuration+0x124>)
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	4a37      	ldr	r2, [pc, #220]	; (8001890 <sendTimeDuration+0x128>)
 80017b2:	fb82 1203 	smull	r1, r2, r2, r3
 80017b6:	1192      	asrs	r2, r2, #6
 80017b8:	17db      	asrs	r3, r3, #31
 80017ba:	1ad3      	subs	r3, r2, r3
 80017bc:	4a32      	ldr	r2, [pc, #200]	; (8001888 <sendTimeDuration+0x120>)
 80017be:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Red = ", count), 100);
 80017c0:	4b31      	ldr	r3, [pc, #196]	; (8001888 <sendTimeDuration+0x120>)
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	4a33      	ldr	r2, [pc, #204]	; (8001894 <sendTimeDuration+0x12c>)
 80017c6:	4934      	ldr	r1, [pc, #208]	; (8001898 <sendTimeDuration+0x130>)
 80017c8:	4834      	ldr	r0, [pc, #208]	; (800189c <sendTimeDuration+0x134>)
 80017ca:	f002 fe25 	bl	8004418 <siprintf>
 80017ce:	4603      	mov	r3, r0
 80017d0:	b29a      	uxth	r2, r3
 80017d2:	2364      	movs	r3, #100	; 0x64
 80017d4:	4931      	ldr	r1, [pc, #196]	; (800189c <sendTimeDuration+0x134>)
 80017d6:	4832      	ldr	r0, [pc, #200]	; (80018a0 <sendTimeDuration+0x138>)
 80017d8:	f002 f961 	bl	8003a9e <HAL_UART_Transmit>
			}
			break;
 80017dc:	e04b      	b.n	8001876 <sendTimeDuration+0x10e>

		case MAN_GREEN:
			// Send duration time of green lights
			if (count != GREEN_time / 1000)
 80017de:	4b31      	ldr	r3, [pc, #196]	; (80018a4 <sendTimeDuration+0x13c>)
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	4a2b      	ldr	r2, [pc, #172]	; (8001890 <sendTimeDuration+0x128>)
 80017e4:	fb82 1203 	smull	r1, r2, r2, r3
 80017e8:	1192      	asrs	r2, r2, #6
 80017ea:	17db      	asrs	r3, r3, #31
 80017ec:	1ad2      	subs	r2, r2, r3
 80017ee:	4b26      	ldr	r3, [pc, #152]	; (8001888 <sendTimeDuration+0x120>)
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	429a      	cmp	r2, r3
 80017f4:	d041      	beq.n	800187a <sendTimeDuration+0x112>
			{
				count = GREEN_time / 1000;
 80017f6:	4b2b      	ldr	r3, [pc, #172]	; (80018a4 <sendTimeDuration+0x13c>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	4a25      	ldr	r2, [pc, #148]	; (8001890 <sendTimeDuration+0x128>)
 80017fc:	fb82 1203 	smull	r1, r2, r2, r3
 8001800:	1192      	asrs	r2, r2, #6
 8001802:	17db      	asrs	r3, r3, #31
 8001804:	1ad3      	subs	r3, r2, r3
 8001806:	4a20      	ldr	r2, [pc, #128]	; (8001888 <sendTimeDuration+0x120>)
 8001808:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Green = ", count), 100);
 800180a:	4b1f      	ldr	r3, [pc, #124]	; (8001888 <sendTimeDuration+0x120>)
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4a26      	ldr	r2, [pc, #152]	; (80018a8 <sendTimeDuration+0x140>)
 8001810:	4921      	ldr	r1, [pc, #132]	; (8001898 <sendTimeDuration+0x130>)
 8001812:	4822      	ldr	r0, [pc, #136]	; (800189c <sendTimeDuration+0x134>)
 8001814:	f002 fe00 	bl	8004418 <siprintf>
 8001818:	4603      	mov	r3, r0
 800181a:	b29a      	uxth	r2, r3
 800181c:	2364      	movs	r3, #100	; 0x64
 800181e:	491f      	ldr	r1, [pc, #124]	; (800189c <sendTimeDuration+0x134>)
 8001820:	481f      	ldr	r0, [pc, #124]	; (80018a0 <sendTimeDuration+0x138>)
 8001822:	f002 f93c 	bl	8003a9e <HAL_UART_Transmit>
			}
			break;
 8001826:	e028      	b.n	800187a <sendTimeDuration+0x112>

		case MAN_YELLOW:
			// Send duration time of yellow lights
			if (count != YELLOW_time / 1000)
 8001828:	4b20      	ldr	r3, [pc, #128]	; (80018ac <sendTimeDuration+0x144>)
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	4a18      	ldr	r2, [pc, #96]	; (8001890 <sendTimeDuration+0x128>)
 800182e:	fb82 1203 	smull	r1, r2, r2, r3
 8001832:	1192      	asrs	r2, r2, #6
 8001834:	17db      	asrs	r3, r3, #31
 8001836:	1ad2      	subs	r2, r2, r3
 8001838:	4b13      	ldr	r3, [pc, #76]	; (8001888 <sendTimeDuration+0x120>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	429a      	cmp	r2, r3
 800183e:	d01e      	beq.n	800187e <sendTimeDuration+0x116>
			{
				count = YELLOW_time / 1000;
 8001840:	4b1a      	ldr	r3, [pc, #104]	; (80018ac <sendTimeDuration+0x144>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	4a12      	ldr	r2, [pc, #72]	; (8001890 <sendTimeDuration+0x128>)
 8001846:	fb82 1203 	smull	r1, r2, r2, r3
 800184a:	1192      	asrs	r2, r2, #6
 800184c:	17db      	asrs	r3, r3, #31
 800184e:	1ad3      	subs	r3, r2, r3
 8001850:	4a0d      	ldr	r2, [pc, #52]	; (8001888 <sendTimeDuration+0x120>)
 8001852:	6013      	str	r3, [r2, #0]
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Yellow = ", count), 100);
 8001854:	4b0c      	ldr	r3, [pc, #48]	; (8001888 <sendTimeDuration+0x120>)
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	4a15      	ldr	r2, [pc, #84]	; (80018b0 <sendTimeDuration+0x148>)
 800185a:	490f      	ldr	r1, [pc, #60]	; (8001898 <sendTimeDuration+0x130>)
 800185c:	480f      	ldr	r0, [pc, #60]	; (800189c <sendTimeDuration+0x134>)
 800185e:	f002 fddb 	bl	8004418 <siprintf>
 8001862:	4603      	mov	r3, r0
 8001864:	b29a      	uxth	r2, r3
 8001866:	2364      	movs	r3, #100	; 0x64
 8001868:	490c      	ldr	r1, [pc, #48]	; (800189c <sendTimeDuration+0x134>)
 800186a:	480d      	ldr	r0, [pc, #52]	; (80018a0 <sendTimeDuration+0x138>)
 800186c:	f002 f917 	bl	8003a9e <HAL_UART_Transmit>
			}
			break;
 8001870:	e005      	b.n	800187e <sendTimeDuration+0x116>

		default:
			break;
 8001872:	bf00      	nop
 8001874:	e004      	b.n	8001880 <sendTimeDuration+0x118>
			break;
 8001876:	bf00      	nop
 8001878:	e002      	b.n	8001880 <sendTimeDuration+0x118>
			break;
 800187a:	bf00      	nop
 800187c:	e000      	b.n	8001880 <sendTimeDuration+0x118>
			break;
 800187e:	bf00      	nop
	}
}
 8001880:	bf00      	nop
 8001882:	bd80      	pop	{r7, pc}
 8001884:	200000c0 	.word	0x200000c0
 8001888:	200000c8 	.word	0x200000c8
 800188c:	20000018 	.word	0x20000018
 8001890:	10624dd3 	.word	0x10624dd3
 8001894:	08004cbc 	.word	0x08004cbc
 8001898:	08004cb4 	.word	0x08004cb4
 800189c:	200001c8 	.word	0x200001c8
 80018a0:	20000184 	.word	0x20000184
 80018a4:	2000001c 	.word	0x2000001c
 80018a8:	08004cc4 	.word	0x08004cc4
 80018ac:	20000020 	.word	0x20000020
 80018b0:	08004cd0 	.word	0x08004cd0

080018b4 <sendTimeInc>:

void sendTimeInc() {
 80018b4:	b580      	push	{r7, lr}
 80018b6:	af00      	add	r7, sp, #0
	if (count != time_count) {
 80018b8:	4b23      	ldr	r3, [pc, #140]	; (8001948 <sendTimeInc+0x94>)
 80018ba:	681a      	ldr	r2, [r3, #0]
 80018bc:	4b23      	ldr	r3, [pc, #140]	; (800194c <sendTimeInc+0x98>)
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	429a      	cmp	r2, r3
 80018c2:	d03b      	beq.n	800193c <sendTimeInc+0x88>
		count = time_count;
 80018c4:	4b21      	ldr	r3, [pc, #132]	; (800194c <sendTimeInc+0x98>)
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	4a1f      	ldr	r2, [pc, #124]	; (8001948 <sendTimeInc+0x94>)
 80018ca:	6013      	str	r3, [r2, #0]

		switch (mode) {
 80018cc:	4b20      	ldr	r3, [pc, #128]	; (8001950 <sendTimeInc+0x9c>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	2b0b      	cmp	r3, #11
 80018d2:	d024      	beq.n	800191e <sendTimeInc+0x6a>
 80018d4:	2b0b      	cmp	r3, #11
 80018d6:	dc33      	bgt.n	8001940 <sendTimeInc+0x8c>
 80018d8:	2b09      	cmp	r3, #9
 80018da:	d002      	beq.n	80018e2 <sendTimeInc+0x2e>
 80018dc:	2b0a      	cmp	r3, #10
 80018de:	d00f      	beq.n	8001900 <sendTimeInc+0x4c>
				// Send counter to increase duration time of red lights
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Y_inc = ", count), 100);
				break;

			default:
				break;
 80018e0:	e02e      	b.n	8001940 <sendTimeInc+0x8c>
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "R_inc = ", count), 100);
 80018e2:	4b19      	ldr	r3, [pc, #100]	; (8001948 <sendTimeInc+0x94>)
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	4a1b      	ldr	r2, [pc, #108]	; (8001954 <sendTimeInc+0xa0>)
 80018e8:	491b      	ldr	r1, [pc, #108]	; (8001958 <sendTimeInc+0xa4>)
 80018ea:	481c      	ldr	r0, [pc, #112]	; (800195c <sendTimeInc+0xa8>)
 80018ec:	f002 fd94 	bl	8004418 <siprintf>
 80018f0:	4603      	mov	r3, r0
 80018f2:	b29a      	uxth	r2, r3
 80018f4:	2364      	movs	r3, #100	; 0x64
 80018f6:	4919      	ldr	r1, [pc, #100]	; (800195c <sendTimeInc+0xa8>)
 80018f8:	4819      	ldr	r0, [pc, #100]	; (8001960 <sendTimeInc+0xac>)
 80018fa:	f002 f8d0 	bl	8003a9e <HAL_UART_Transmit>
				break;
 80018fe:	e020      	b.n	8001942 <sendTimeInc+0x8e>
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "G_inc = ", count), 100);
 8001900:	4b11      	ldr	r3, [pc, #68]	; (8001948 <sendTimeInc+0x94>)
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	4a17      	ldr	r2, [pc, #92]	; (8001964 <sendTimeInc+0xb0>)
 8001906:	4914      	ldr	r1, [pc, #80]	; (8001958 <sendTimeInc+0xa4>)
 8001908:	4814      	ldr	r0, [pc, #80]	; (800195c <sendTimeInc+0xa8>)
 800190a:	f002 fd85 	bl	8004418 <siprintf>
 800190e:	4603      	mov	r3, r0
 8001910:	b29a      	uxth	r2, r3
 8001912:	2364      	movs	r3, #100	; 0x64
 8001914:	4911      	ldr	r1, [pc, #68]	; (800195c <sendTimeInc+0xa8>)
 8001916:	4812      	ldr	r0, [pc, #72]	; (8001960 <sendTimeInc+0xac>)
 8001918:	f002 f8c1 	bl	8003a9e <HAL_UART_Transmit>
				break;
 800191c:	e011      	b.n	8001942 <sendTimeInc+0x8e>
				HAL_UART_Transmit(&huart2, str, sprintf(str, "%s%d\r\n", "Y_inc = ", count), 100);
 800191e:	4b0a      	ldr	r3, [pc, #40]	; (8001948 <sendTimeInc+0x94>)
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	4a11      	ldr	r2, [pc, #68]	; (8001968 <sendTimeInc+0xb4>)
 8001924:	490c      	ldr	r1, [pc, #48]	; (8001958 <sendTimeInc+0xa4>)
 8001926:	480d      	ldr	r0, [pc, #52]	; (800195c <sendTimeInc+0xa8>)
 8001928:	f002 fd76 	bl	8004418 <siprintf>
 800192c:	4603      	mov	r3, r0
 800192e:	b29a      	uxth	r2, r3
 8001930:	2364      	movs	r3, #100	; 0x64
 8001932:	490a      	ldr	r1, [pc, #40]	; (800195c <sendTimeInc+0xa8>)
 8001934:	480a      	ldr	r0, [pc, #40]	; (8001960 <sendTimeInc+0xac>)
 8001936:	f002 f8b2 	bl	8003a9e <HAL_UART_Transmit>
				break;
 800193a:	e002      	b.n	8001942 <sendTimeInc+0x8e>
		}
	}
 800193c:	bf00      	nop
 800193e:	e000      	b.n	8001942 <sendTimeInc+0x8e>
				break;
 8001940:	bf00      	nop
}
 8001942:	bf00      	nop
 8001944:	bd80      	pop	{r7, pc}
 8001946:	bf00      	nop
 8001948:	200000c8 	.word	0x200000c8
 800194c:	200000bc 	.word	0x200000bc
 8001950:	200000c0 	.word	0x200000c0
 8001954:	08004cdc 	.word	0x08004cdc
 8001958:	08004cb4 	.word	0x08004cb4
 800195c:	200001c8 	.word	0x200001c8
 8001960:	20000184 	.word	0x20000184
 8001964:	08004ce8 	.word	0x08004ce8
 8001968:	08004cf4 	.word	0x08004cf4

0800196c <sendModeNoti>:

void sendModeNoti() {
 800196c:	b580      	push	{r7, lr}
 800196e:	af00      	add	r7, sp, #0
	switch (mode) {
 8001970:	4b30      	ldr	r3, [pc, #192]	; (8001a34 <sendModeNoti+0xc8>)
 8001972:	681b      	ldr	r3, [r3, #0]
 8001974:	3b01      	subs	r3, #1
 8001976:	2b0a      	cmp	r3, #10
 8001978:	d859      	bhi.n	8001a2e <sendModeNoti+0xc2>
 800197a:	a201      	add	r2, pc, #4	; (adr r2, 8001980 <sendModeNoti+0x14>)
 800197c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001980:	080019ad 	.word	0x080019ad
 8001984:	08001a2f 	.word	0x08001a2f
 8001988:	08001a2f 	.word	0x08001a2f
 800198c:	08001a2f 	.word	0x08001a2f
 8001990:	080019c7 	.word	0x080019c7
 8001994:	08001a2f 	.word	0x08001a2f
 8001998:	08001a2f 	.word	0x08001a2f
 800199c:	08001a2f 	.word	0x08001a2f
 80019a0:	080019e1 	.word	0x080019e1
 80019a4:	080019fb 	.word	0x080019fb
 80019a8:	08001a15 	.word	0x08001a15
		case AUTO_MODE:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "AUTO MODE"), 100);
 80019ac:	4a22      	ldr	r2, [pc, #136]	; (8001a38 <sendModeNoti+0xcc>)
 80019ae:	4923      	ldr	r1, [pc, #140]	; (8001a3c <sendModeNoti+0xd0>)
 80019b0:	4823      	ldr	r0, [pc, #140]	; (8001a40 <sendModeNoti+0xd4>)
 80019b2:	f002 fd31 	bl	8004418 <siprintf>
 80019b6:	4603      	mov	r3, r0
 80019b8:	b29a      	uxth	r2, r3
 80019ba:	2364      	movs	r3, #100	; 0x64
 80019bc:	4920      	ldr	r1, [pc, #128]	; (8001a40 <sendModeNoti+0xd4>)
 80019be:	4821      	ldr	r0, [pc, #132]	; (8001a44 <sendModeNoti+0xd8>)
 80019c0:	f002 f86d 	bl	8003a9e <HAL_UART_Transmit>
			break;
 80019c4:	e034      	b.n	8001a30 <sendModeNoti+0xc4>
		case MAN_MODE:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "MANUAL MODE"), 100);
 80019c6:	4a20      	ldr	r2, [pc, #128]	; (8001a48 <sendModeNoti+0xdc>)
 80019c8:	491c      	ldr	r1, [pc, #112]	; (8001a3c <sendModeNoti+0xd0>)
 80019ca:	481d      	ldr	r0, [pc, #116]	; (8001a40 <sendModeNoti+0xd4>)
 80019cc:	f002 fd24 	bl	8004418 <siprintf>
 80019d0:	4603      	mov	r3, r0
 80019d2:	b29a      	uxth	r2, r3
 80019d4:	2364      	movs	r3, #100	; 0x64
 80019d6:	491a      	ldr	r1, [pc, #104]	; (8001a40 <sendModeNoti+0xd4>)
 80019d8:	481a      	ldr	r0, [pc, #104]	; (8001a44 <sendModeNoti+0xd8>)
 80019da:	f002 f860 	bl	8003a9e <HAL_UART_Transmit>
			break;
 80019de:	e027      	b.n	8001a30 <sendModeNoti+0xc4>
		case INC_RED:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "TUNING MODE"), 100);
 80019e0:	4a1a      	ldr	r2, [pc, #104]	; (8001a4c <sendModeNoti+0xe0>)
 80019e2:	4916      	ldr	r1, [pc, #88]	; (8001a3c <sendModeNoti+0xd0>)
 80019e4:	4816      	ldr	r0, [pc, #88]	; (8001a40 <sendModeNoti+0xd4>)
 80019e6:	f002 fd17 	bl	8004418 <siprintf>
 80019ea:	4603      	mov	r3, r0
 80019ec:	b29a      	uxth	r2, r3
 80019ee:	2364      	movs	r3, #100	; 0x64
 80019f0:	4913      	ldr	r1, [pc, #76]	; (8001a40 <sendModeNoti+0xd4>)
 80019f2:	4814      	ldr	r0, [pc, #80]	; (8001a44 <sendModeNoti+0xd8>)
 80019f4:	f002 f853 	bl	8003a9e <HAL_UART_Transmit>
			break;
 80019f8:	e01a      	b.n	8001a30 <sendModeNoti+0xc4>
		case INC_GREEN:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "TUNING MODE"), 100);
 80019fa:	4a14      	ldr	r2, [pc, #80]	; (8001a4c <sendModeNoti+0xe0>)
 80019fc:	490f      	ldr	r1, [pc, #60]	; (8001a3c <sendModeNoti+0xd0>)
 80019fe:	4810      	ldr	r0, [pc, #64]	; (8001a40 <sendModeNoti+0xd4>)
 8001a00:	f002 fd0a 	bl	8004418 <siprintf>
 8001a04:	4603      	mov	r3, r0
 8001a06:	b29a      	uxth	r2, r3
 8001a08:	2364      	movs	r3, #100	; 0x64
 8001a0a:	490d      	ldr	r1, [pc, #52]	; (8001a40 <sendModeNoti+0xd4>)
 8001a0c:	480d      	ldr	r0, [pc, #52]	; (8001a44 <sendModeNoti+0xd8>)
 8001a0e:	f002 f846 	bl	8003a9e <HAL_UART_Transmit>
			break;
 8001a12:	e00d      	b.n	8001a30 <sendModeNoti+0xc4>
		case INC_YELLOW:
			HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "TUNING MODE"), 100);
 8001a14:	4a0d      	ldr	r2, [pc, #52]	; (8001a4c <sendModeNoti+0xe0>)
 8001a16:	4909      	ldr	r1, [pc, #36]	; (8001a3c <sendModeNoti+0xd0>)
 8001a18:	4809      	ldr	r0, [pc, #36]	; (8001a40 <sendModeNoti+0xd4>)
 8001a1a:	f002 fcfd 	bl	8004418 <siprintf>
 8001a1e:	4603      	mov	r3, r0
 8001a20:	b29a      	uxth	r2, r3
 8001a22:	2364      	movs	r3, #100	; 0x64
 8001a24:	4906      	ldr	r1, [pc, #24]	; (8001a40 <sendModeNoti+0xd4>)
 8001a26:	4807      	ldr	r0, [pc, #28]	; (8001a44 <sendModeNoti+0xd8>)
 8001a28:	f002 f839 	bl	8003a9e <HAL_UART_Transmit>
			break;
 8001a2c:	e000      	b.n	8001a30 <sendModeNoti+0xc4>
		default:
			break;
 8001a2e:	bf00      	nop
	}
}
 8001a30:	bf00      	nop
 8001a32:	bd80      	pop	{r7, pc}
 8001a34:	200000c0 	.word	0x200000c0
 8001a38:	08004d00 	.word	0x08004d00
 8001a3c:	08004d0c 	.word	0x08004d0c
 8001a40:	200001c8 	.word	0x200001c8
 8001a44:	20000184 	.word	0x20000184
 8001a48:	08004d14 	.word	0x08004d14
 8001a4c:	08004d20 	.word	0x08004d20

08001a50 <sendSetNoti>:

void sendSetNoti() {
 8001a50:	b580      	push	{r7, lr}
 8001a52:	af00      	add	r7, sp, #0
	switch (mode) {
 8001a54:	4b1a      	ldr	r3, [pc, #104]	; (8001ac0 <sendSetNoti+0x70>)
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	2b0b      	cmp	r3, #11
 8001a5a:	d020      	beq.n	8001a9e <sendSetNoti+0x4e>
 8001a5c:	2b0b      	cmp	r3, #11
 8001a5e:	dc2b      	bgt.n	8001ab8 <sendSetNoti+0x68>
 8001a60:	2b09      	cmp	r3, #9
 8001a62:	d002      	beq.n	8001a6a <sendSetNoti+0x1a>
 8001a64:	2b0a      	cmp	r3, #10
 8001a66:	d00d      	beq.n	8001a84 <sendSetNoti+0x34>
		break;
	case INC_YELLOW:
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET YELLOW"), 100);
		break;
		default:
			break;
 8001a68:	e026      	b.n	8001ab8 <sendSetNoti+0x68>
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET RED"), 100);
 8001a6a:	4a16      	ldr	r2, [pc, #88]	; (8001ac4 <sendSetNoti+0x74>)
 8001a6c:	4916      	ldr	r1, [pc, #88]	; (8001ac8 <sendSetNoti+0x78>)
 8001a6e:	4817      	ldr	r0, [pc, #92]	; (8001acc <sendSetNoti+0x7c>)
 8001a70:	f002 fcd2 	bl	8004418 <siprintf>
 8001a74:	4603      	mov	r3, r0
 8001a76:	b29a      	uxth	r2, r3
 8001a78:	2364      	movs	r3, #100	; 0x64
 8001a7a:	4914      	ldr	r1, [pc, #80]	; (8001acc <sendSetNoti+0x7c>)
 8001a7c:	4814      	ldr	r0, [pc, #80]	; (8001ad0 <sendSetNoti+0x80>)
 8001a7e:	f002 f80e 	bl	8003a9e <HAL_UART_Transmit>
		break;
 8001a82:	e01a      	b.n	8001aba <sendSetNoti+0x6a>
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET GREEN"), 100);
 8001a84:	4a13      	ldr	r2, [pc, #76]	; (8001ad4 <sendSetNoti+0x84>)
 8001a86:	4910      	ldr	r1, [pc, #64]	; (8001ac8 <sendSetNoti+0x78>)
 8001a88:	4810      	ldr	r0, [pc, #64]	; (8001acc <sendSetNoti+0x7c>)
 8001a8a:	f002 fcc5 	bl	8004418 <siprintf>
 8001a8e:	4603      	mov	r3, r0
 8001a90:	b29a      	uxth	r2, r3
 8001a92:	2364      	movs	r3, #100	; 0x64
 8001a94:	490d      	ldr	r1, [pc, #52]	; (8001acc <sendSetNoti+0x7c>)
 8001a96:	480e      	ldr	r0, [pc, #56]	; (8001ad0 <sendSetNoti+0x80>)
 8001a98:	f002 f801 	bl	8003a9e <HAL_UART_Transmit>
		break;
 8001a9c:	e00d      	b.n	8001aba <sendSetNoti+0x6a>
		HAL_UART_Transmit(&huart2, str, sprintf(str, "%s\r\n", "SET YELLOW"), 100);
 8001a9e:	4a0e      	ldr	r2, [pc, #56]	; (8001ad8 <sendSetNoti+0x88>)
 8001aa0:	4909      	ldr	r1, [pc, #36]	; (8001ac8 <sendSetNoti+0x78>)
 8001aa2:	480a      	ldr	r0, [pc, #40]	; (8001acc <sendSetNoti+0x7c>)
 8001aa4:	f002 fcb8 	bl	8004418 <siprintf>
 8001aa8:	4603      	mov	r3, r0
 8001aaa:	b29a      	uxth	r2, r3
 8001aac:	2364      	movs	r3, #100	; 0x64
 8001aae:	4907      	ldr	r1, [pc, #28]	; (8001acc <sendSetNoti+0x7c>)
 8001ab0:	4807      	ldr	r0, [pc, #28]	; (8001ad0 <sendSetNoti+0x80>)
 8001ab2:	f001 fff4 	bl	8003a9e <HAL_UART_Transmit>
		break;
 8001ab6:	e000      	b.n	8001aba <sendSetNoti+0x6a>
			break;
 8001ab8:	bf00      	nop
	}
}
 8001aba:	bf00      	nop
 8001abc:	bd80      	pop	{r7, pc}
 8001abe:	bf00      	nop
 8001ac0:	200000c0 	.word	0x200000c0
 8001ac4:	08004d2c 	.word	0x08004d2c
 8001ac8:	08004d0c 	.word	0x08004d0c
 8001acc:	200001c8 	.word	0x200001c8
 8001ad0:	20000184 	.word	0x20000184
 8001ad4:	08004d34 	.word	0x08004d34
 8001ad8:	08004d40 	.word	0x08004d40

08001adc <Reset_Handler>:
 8001adc:	480c      	ldr	r0, [pc, #48]	; (8001b10 <LoopFillZerobss+0x12>)
 8001ade:	490d      	ldr	r1, [pc, #52]	; (8001b14 <LoopFillZerobss+0x16>)
 8001ae0:	4a0d      	ldr	r2, [pc, #52]	; (8001b18 <LoopFillZerobss+0x1a>)
 8001ae2:	2300      	movs	r3, #0
 8001ae4:	e002      	b.n	8001aec <LoopCopyDataInit>

08001ae6 <CopyDataInit>:
 8001ae6:	58d4      	ldr	r4, [r2, r3]
 8001ae8:	50c4      	str	r4, [r0, r3]
 8001aea:	3304      	adds	r3, #4

08001aec <LoopCopyDataInit>:
 8001aec:	18c4      	adds	r4, r0, r3
 8001aee:	428c      	cmp	r4, r1
 8001af0:	d3f9      	bcc.n	8001ae6 <CopyDataInit>
 8001af2:	4a0a      	ldr	r2, [pc, #40]	; (8001b1c <LoopFillZerobss+0x1e>)
 8001af4:	4c0a      	ldr	r4, [pc, #40]	; (8001b20 <LoopFillZerobss+0x22>)
 8001af6:	2300      	movs	r3, #0
 8001af8:	e001      	b.n	8001afe <LoopFillZerobss>

08001afa <FillZerobss>:
 8001afa:	6013      	str	r3, [r2, #0]
 8001afc:	3204      	adds	r2, #4

08001afe <LoopFillZerobss>:
 8001afe:	42a2      	cmp	r2, r4
 8001b00:	d3fb      	bcc.n	8001afa <FillZerobss>
 8001b02:	f7ff fd61 	bl	80015c8 <SystemInit>
 8001b06:	f002 fc5b 	bl	80043c0 <__libc_init_array>
 8001b0a:	f7ff fa51 	bl	8000fb0 <main>
 8001b0e:	4770      	bx	lr
 8001b10:	20000000 	.word	0x20000000
 8001b14:	20000094 	.word	0x20000094
 8001b18:	08004db0 	.word	0x08004db0
 8001b1c:	20000094 	.word	0x20000094
 8001b20:	20000210 	.word	0x20000210

08001b24 <ADC1_2_IRQHandler>:
 8001b24:	e7fe      	b.n	8001b24 <ADC1_2_IRQHandler>
	...

08001b28 <HAL_Init>:
 8001b28:	b580      	push	{r7, lr}
 8001b2a:	af00      	add	r7, sp, #0
 8001b2c:	4b08      	ldr	r3, [pc, #32]	; (8001b50 <HAL_Init+0x28>)
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	4a07      	ldr	r2, [pc, #28]	; (8001b50 <HAL_Init+0x28>)
 8001b32:	f043 0310 	orr.w	r3, r3, #16
 8001b36:	6013      	str	r3, [r2, #0]
 8001b38:	2003      	movs	r0, #3
 8001b3a:	f000 f923 	bl	8001d84 <HAL_NVIC_SetPriorityGrouping>
 8001b3e:	2000      	movs	r0, #0
 8001b40:	f000 f808 	bl	8001b54 <HAL_InitTick>
 8001b44:	f7ff fbf6 	bl	8001334 <HAL_MspInit>
 8001b48:	2300      	movs	r3, #0
 8001b4a:	4618      	mov	r0, r3
 8001b4c:	bd80      	pop	{r7, pc}
 8001b4e:	bf00      	nop
 8001b50:	40022000 	.word	0x40022000

08001b54 <HAL_InitTick>:
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b082      	sub	sp, #8
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
 8001b5c:	4b12      	ldr	r3, [pc, #72]	; (8001ba8 <HAL_InitTick+0x54>)
 8001b5e:	681a      	ldr	r2, [r3, #0]
 8001b60:	4b12      	ldr	r3, [pc, #72]	; (8001bac <HAL_InitTick+0x58>)
 8001b62:	781b      	ldrb	r3, [r3, #0]
 8001b64:	4619      	mov	r1, r3
 8001b66:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001b6a:	fbb3 f3f1 	udiv	r3, r3, r1
 8001b6e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b72:	4618      	mov	r0, r3
 8001b74:	f000 f93b 	bl	8001dee <HAL_SYSTICK_Config>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d001      	beq.n	8001b82 <HAL_InitTick+0x2e>
 8001b7e:	2301      	movs	r3, #1
 8001b80:	e00e      	b.n	8001ba0 <HAL_InitTick+0x4c>
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	2b0f      	cmp	r3, #15
 8001b86:	d80a      	bhi.n	8001b9e <HAL_InitTick+0x4a>
 8001b88:	2200      	movs	r2, #0
 8001b8a:	6879      	ldr	r1, [r7, #4]
 8001b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8001b90:	f000 f903 	bl	8001d9a <HAL_NVIC_SetPriority>
 8001b94:	4a06      	ldr	r2, [pc, #24]	; (8001bb0 <HAL_InitTick+0x5c>)
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	6013      	str	r3, [r2, #0]
 8001b9a:	2300      	movs	r3, #0
 8001b9c:	e000      	b.n	8001ba0 <HAL_InitTick+0x4c>
 8001b9e:	2301      	movs	r3, #1
 8001ba0:	4618      	mov	r0, r3
 8001ba2:	3708      	adds	r7, #8
 8001ba4:	46bd      	mov	sp, r7
 8001ba6:	bd80      	pop	{r7, pc}
 8001ba8:	20000024 	.word	0x20000024
 8001bac:	2000002c 	.word	0x2000002c
 8001bb0:	20000028 	.word	0x20000028

08001bb4 <HAL_IncTick>:
 8001bb4:	b480      	push	{r7}
 8001bb6:	af00      	add	r7, sp, #0
 8001bb8:	4b05      	ldr	r3, [pc, #20]	; (8001bd0 <HAL_IncTick+0x1c>)
 8001bba:	781b      	ldrb	r3, [r3, #0]
 8001bbc:	461a      	mov	r2, r3
 8001bbe:	4b05      	ldr	r3, [pc, #20]	; (8001bd4 <HAL_IncTick+0x20>)
 8001bc0:	681b      	ldr	r3, [r3, #0]
 8001bc2:	4413      	add	r3, r2
 8001bc4:	4a03      	ldr	r2, [pc, #12]	; (8001bd4 <HAL_IncTick+0x20>)
 8001bc6:	6013      	str	r3, [r2, #0]
 8001bc8:	bf00      	nop
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	bc80      	pop	{r7}
 8001bce:	4770      	bx	lr
 8001bd0:	2000002c 	.word	0x2000002c
 8001bd4:	200001fc 	.word	0x200001fc

08001bd8 <HAL_GetTick>:
 8001bd8:	b480      	push	{r7}
 8001bda:	af00      	add	r7, sp, #0
 8001bdc:	4b02      	ldr	r3, [pc, #8]	; (8001be8 <HAL_GetTick+0x10>)
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	4618      	mov	r0, r3
 8001be2:	46bd      	mov	sp, r7
 8001be4:	bc80      	pop	{r7}
 8001be6:	4770      	bx	lr
 8001be8:	200001fc 	.word	0x200001fc

08001bec <__NVIC_SetPriorityGrouping>:
 8001bec:	b480      	push	{r7}
 8001bee:	b085      	sub	sp, #20
 8001bf0:	af00      	add	r7, sp, #0
 8001bf2:	6078      	str	r0, [r7, #4]
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	f003 0307 	and.w	r3, r3, #7
 8001bfa:	60fb      	str	r3, [r7, #12]
 8001bfc:	4b0c      	ldr	r3, [pc, #48]	; (8001c30 <__NVIC_SetPriorityGrouping+0x44>)
 8001bfe:	68db      	ldr	r3, [r3, #12]
 8001c00:	60bb      	str	r3, [r7, #8]
 8001c02:	68ba      	ldr	r2, [r7, #8]
 8001c04:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001c08:	4013      	ands	r3, r2
 8001c0a:	60bb      	str	r3, [r7, #8]
 8001c0c:	68fb      	ldr	r3, [r7, #12]
 8001c0e:	021a      	lsls	r2, r3, #8
 8001c10:	68bb      	ldr	r3, [r7, #8]
 8001c12:	4313      	orrs	r3, r2
 8001c14:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001c18:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001c1c:	60bb      	str	r3, [r7, #8]
 8001c1e:	4a04      	ldr	r2, [pc, #16]	; (8001c30 <__NVIC_SetPriorityGrouping+0x44>)
 8001c20:	68bb      	ldr	r3, [r7, #8]
 8001c22:	60d3      	str	r3, [r2, #12]
 8001c24:	bf00      	nop
 8001c26:	3714      	adds	r7, #20
 8001c28:	46bd      	mov	sp, r7
 8001c2a:	bc80      	pop	{r7}
 8001c2c:	4770      	bx	lr
 8001c2e:	bf00      	nop
 8001c30:	e000ed00 	.word	0xe000ed00

08001c34 <__NVIC_GetPriorityGrouping>:
 8001c34:	b480      	push	{r7}
 8001c36:	af00      	add	r7, sp, #0
 8001c38:	4b04      	ldr	r3, [pc, #16]	; (8001c4c <__NVIC_GetPriorityGrouping+0x18>)
 8001c3a:	68db      	ldr	r3, [r3, #12]
 8001c3c:	0a1b      	lsrs	r3, r3, #8
 8001c3e:	f003 0307 	and.w	r3, r3, #7
 8001c42:	4618      	mov	r0, r3
 8001c44:	46bd      	mov	sp, r7
 8001c46:	bc80      	pop	{r7}
 8001c48:	4770      	bx	lr
 8001c4a:	bf00      	nop
 8001c4c:	e000ed00 	.word	0xe000ed00

08001c50 <__NVIC_EnableIRQ>:
 8001c50:	b480      	push	{r7}
 8001c52:	b083      	sub	sp, #12
 8001c54:	af00      	add	r7, sp, #0
 8001c56:	4603      	mov	r3, r0
 8001c58:	71fb      	strb	r3, [r7, #7]
 8001c5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c5e:	2b00      	cmp	r3, #0
 8001c60:	db0b      	blt.n	8001c7a <__NVIC_EnableIRQ+0x2a>
 8001c62:	79fb      	ldrb	r3, [r7, #7]
 8001c64:	f003 021f 	and.w	r2, r3, #31
 8001c68:	4906      	ldr	r1, [pc, #24]	; (8001c84 <__NVIC_EnableIRQ+0x34>)
 8001c6a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c6e:	095b      	lsrs	r3, r3, #5
 8001c70:	2001      	movs	r0, #1
 8001c72:	fa00 f202 	lsl.w	r2, r0, r2
 8001c76:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c7a:	bf00      	nop
 8001c7c:	370c      	adds	r7, #12
 8001c7e:	46bd      	mov	sp, r7
 8001c80:	bc80      	pop	{r7}
 8001c82:	4770      	bx	lr
 8001c84:	e000e100 	.word	0xe000e100

08001c88 <__NVIC_SetPriority>:
 8001c88:	b480      	push	{r7}
 8001c8a:	b083      	sub	sp, #12
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	4603      	mov	r3, r0
 8001c90:	6039      	str	r1, [r7, #0]
 8001c92:	71fb      	strb	r3, [r7, #7]
 8001c94:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c98:	2b00      	cmp	r3, #0
 8001c9a:	db0a      	blt.n	8001cb2 <__NVIC_SetPriority+0x2a>
 8001c9c:	683b      	ldr	r3, [r7, #0]
 8001c9e:	b2da      	uxtb	r2, r3
 8001ca0:	490c      	ldr	r1, [pc, #48]	; (8001cd4 <__NVIC_SetPriority+0x4c>)
 8001ca2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ca6:	0112      	lsls	r2, r2, #4
 8001ca8:	b2d2      	uxtb	r2, r2
 8001caa:	440b      	add	r3, r1
 8001cac:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001cb0:	e00a      	b.n	8001cc8 <__NVIC_SetPriority+0x40>
 8001cb2:	683b      	ldr	r3, [r7, #0]
 8001cb4:	b2da      	uxtb	r2, r3
 8001cb6:	4908      	ldr	r1, [pc, #32]	; (8001cd8 <__NVIC_SetPriority+0x50>)
 8001cb8:	79fb      	ldrb	r3, [r7, #7]
 8001cba:	f003 030f 	and.w	r3, r3, #15
 8001cbe:	3b04      	subs	r3, #4
 8001cc0:	0112      	lsls	r2, r2, #4
 8001cc2:	b2d2      	uxtb	r2, r2
 8001cc4:	440b      	add	r3, r1
 8001cc6:	761a      	strb	r2, [r3, #24]
 8001cc8:	bf00      	nop
 8001cca:	370c      	adds	r7, #12
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	bc80      	pop	{r7}
 8001cd0:	4770      	bx	lr
 8001cd2:	bf00      	nop
 8001cd4:	e000e100 	.word	0xe000e100
 8001cd8:	e000ed00 	.word	0xe000ed00

08001cdc <NVIC_EncodePriority>:
 8001cdc:	b480      	push	{r7}
 8001cde:	b089      	sub	sp, #36	; 0x24
 8001ce0:	af00      	add	r7, sp, #0
 8001ce2:	60f8      	str	r0, [r7, #12]
 8001ce4:	60b9      	str	r1, [r7, #8]
 8001ce6:	607a      	str	r2, [r7, #4]
 8001ce8:	68fb      	ldr	r3, [r7, #12]
 8001cea:	f003 0307 	and.w	r3, r3, #7
 8001cee:	61fb      	str	r3, [r7, #28]
 8001cf0:	69fb      	ldr	r3, [r7, #28]
 8001cf2:	f1c3 0307 	rsb	r3, r3, #7
 8001cf6:	2b04      	cmp	r3, #4
 8001cf8:	bf28      	it	cs
 8001cfa:	2304      	movcs	r3, #4
 8001cfc:	61bb      	str	r3, [r7, #24]
 8001cfe:	69fb      	ldr	r3, [r7, #28]
 8001d00:	3304      	adds	r3, #4
 8001d02:	2b06      	cmp	r3, #6
 8001d04:	d902      	bls.n	8001d0c <NVIC_EncodePriority+0x30>
 8001d06:	69fb      	ldr	r3, [r7, #28]
 8001d08:	3b03      	subs	r3, #3
 8001d0a:	e000      	b.n	8001d0e <NVIC_EncodePriority+0x32>
 8001d0c:	2300      	movs	r3, #0
 8001d0e:	617b      	str	r3, [r7, #20]
 8001d10:	f04f 32ff 	mov.w	r2, #4294967295
 8001d14:	69bb      	ldr	r3, [r7, #24]
 8001d16:	fa02 f303 	lsl.w	r3, r2, r3
 8001d1a:	43da      	mvns	r2, r3
 8001d1c:	68bb      	ldr	r3, [r7, #8]
 8001d1e:	401a      	ands	r2, r3
 8001d20:	697b      	ldr	r3, [r7, #20]
 8001d22:	409a      	lsls	r2, r3
 8001d24:	f04f 31ff 	mov.w	r1, #4294967295
 8001d28:	697b      	ldr	r3, [r7, #20]
 8001d2a:	fa01 f303 	lsl.w	r3, r1, r3
 8001d2e:	43d9      	mvns	r1, r3
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	400b      	ands	r3, r1
 8001d34:	4313      	orrs	r3, r2
 8001d36:	4618      	mov	r0, r3
 8001d38:	3724      	adds	r7, #36	; 0x24
 8001d3a:	46bd      	mov	sp, r7
 8001d3c:	bc80      	pop	{r7}
 8001d3e:	4770      	bx	lr

08001d40 <SysTick_Config>:
 8001d40:	b580      	push	{r7, lr}
 8001d42:	b082      	sub	sp, #8
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	6078      	str	r0, [r7, #4]
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	3b01      	subs	r3, #1
 8001d4c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001d50:	d301      	bcc.n	8001d56 <SysTick_Config+0x16>
 8001d52:	2301      	movs	r3, #1
 8001d54:	e00f      	b.n	8001d76 <SysTick_Config+0x36>
 8001d56:	4a0a      	ldr	r2, [pc, #40]	; (8001d80 <SysTick_Config+0x40>)
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	3b01      	subs	r3, #1
 8001d5c:	6053      	str	r3, [r2, #4]
 8001d5e:	210f      	movs	r1, #15
 8001d60:	f04f 30ff 	mov.w	r0, #4294967295
 8001d64:	f7ff ff90 	bl	8001c88 <__NVIC_SetPriority>
 8001d68:	4b05      	ldr	r3, [pc, #20]	; (8001d80 <SysTick_Config+0x40>)
 8001d6a:	2200      	movs	r2, #0
 8001d6c:	609a      	str	r2, [r3, #8]
 8001d6e:	4b04      	ldr	r3, [pc, #16]	; (8001d80 <SysTick_Config+0x40>)
 8001d70:	2207      	movs	r2, #7
 8001d72:	601a      	str	r2, [r3, #0]
 8001d74:	2300      	movs	r3, #0
 8001d76:	4618      	mov	r0, r3
 8001d78:	3708      	adds	r7, #8
 8001d7a:	46bd      	mov	sp, r7
 8001d7c:	bd80      	pop	{r7, pc}
 8001d7e:	bf00      	nop
 8001d80:	e000e010 	.word	0xe000e010

08001d84 <HAL_NVIC_SetPriorityGrouping>:
 8001d84:	b580      	push	{r7, lr}
 8001d86:	b082      	sub	sp, #8
 8001d88:	af00      	add	r7, sp, #0
 8001d8a:	6078      	str	r0, [r7, #4]
 8001d8c:	6878      	ldr	r0, [r7, #4]
 8001d8e:	f7ff ff2d 	bl	8001bec <__NVIC_SetPriorityGrouping>
 8001d92:	bf00      	nop
 8001d94:	3708      	adds	r7, #8
 8001d96:	46bd      	mov	sp, r7
 8001d98:	bd80      	pop	{r7, pc}

08001d9a <HAL_NVIC_SetPriority>:
 8001d9a:	b580      	push	{r7, lr}
 8001d9c:	b086      	sub	sp, #24
 8001d9e:	af00      	add	r7, sp, #0
 8001da0:	4603      	mov	r3, r0
 8001da2:	60b9      	str	r1, [r7, #8]
 8001da4:	607a      	str	r2, [r7, #4]
 8001da6:	73fb      	strb	r3, [r7, #15]
 8001da8:	2300      	movs	r3, #0
 8001daa:	617b      	str	r3, [r7, #20]
 8001dac:	f7ff ff42 	bl	8001c34 <__NVIC_GetPriorityGrouping>
 8001db0:	6178      	str	r0, [r7, #20]
 8001db2:	687a      	ldr	r2, [r7, #4]
 8001db4:	68b9      	ldr	r1, [r7, #8]
 8001db6:	6978      	ldr	r0, [r7, #20]
 8001db8:	f7ff ff90 	bl	8001cdc <NVIC_EncodePriority>
 8001dbc:	4602      	mov	r2, r0
 8001dbe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001dc2:	4611      	mov	r1, r2
 8001dc4:	4618      	mov	r0, r3
 8001dc6:	f7ff ff5f 	bl	8001c88 <__NVIC_SetPriority>
 8001dca:	bf00      	nop
 8001dcc:	3718      	adds	r7, #24
 8001dce:	46bd      	mov	sp, r7
 8001dd0:	bd80      	pop	{r7, pc}

08001dd2 <HAL_NVIC_EnableIRQ>:
 8001dd2:	b580      	push	{r7, lr}
 8001dd4:	b082      	sub	sp, #8
 8001dd6:	af00      	add	r7, sp, #0
 8001dd8:	4603      	mov	r3, r0
 8001dda:	71fb      	strb	r3, [r7, #7]
 8001ddc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001de0:	4618      	mov	r0, r3
 8001de2:	f7ff ff35 	bl	8001c50 <__NVIC_EnableIRQ>
 8001de6:	bf00      	nop
 8001de8:	3708      	adds	r7, #8
 8001dea:	46bd      	mov	sp, r7
 8001dec:	bd80      	pop	{r7, pc}

08001dee <HAL_SYSTICK_Config>:
 8001dee:	b580      	push	{r7, lr}
 8001df0:	b082      	sub	sp, #8
 8001df2:	af00      	add	r7, sp, #0
 8001df4:	6078      	str	r0, [r7, #4]
 8001df6:	6878      	ldr	r0, [r7, #4]
 8001df8:	f7ff ffa2 	bl	8001d40 <SysTick_Config>
 8001dfc:	4603      	mov	r3, r0
 8001dfe:	4618      	mov	r0, r3
 8001e00:	3708      	adds	r7, #8
 8001e02:	46bd      	mov	sp, r7
 8001e04:	bd80      	pop	{r7, pc}

08001e06 <HAL_DMA_Abort>:
 8001e06:	b480      	push	{r7}
 8001e08:	b085      	sub	sp, #20
 8001e0a:	af00      	add	r7, sp, #0
 8001e0c:	6078      	str	r0, [r7, #4]
 8001e0e:	2300      	movs	r3, #0
 8001e10:	73fb      	strb	r3, [r7, #15]
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001e18:	2b02      	cmp	r3, #2
 8001e1a:	d008      	beq.n	8001e2e <HAL_DMA_Abort+0x28>
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	2204      	movs	r2, #4
 8001e20:	639a      	str	r2, [r3, #56]	; 0x38
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	2200      	movs	r2, #0
 8001e26:	f883 2020 	strb.w	r2, [r3, #32]
 8001e2a:	2301      	movs	r3, #1
 8001e2c:	e020      	b.n	8001e70 <HAL_DMA_Abort+0x6a>
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	681a      	ldr	r2, [r3, #0]
 8001e34:	687b      	ldr	r3, [r7, #4]
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	f022 020e 	bic.w	r2, r2, #14
 8001e3c:	601a      	str	r2, [r3, #0]
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	681b      	ldr	r3, [r3, #0]
 8001e42:	681a      	ldr	r2, [r3, #0]
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	f022 0201 	bic.w	r2, r2, #1
 8001e4c:	601a      	str	r2, [r3, #0]
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001e56:	2101      	movs	r1, #1
 8001e58:	fa01 f202 	lsl.w	r2, r1, r2
 8001e5c:	605a      	str	r2, [r3, #4]
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	2201      	movs	r2, #1
 8001e62:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	2200      	movs	r2, #0
 8001e6a:	f883 2020 	strb.w	r2, [r3, #32]
 8001e6e:	7bfb      	ldrb	r3, [r7, #15]
 8001e70:	4618      	mov	r0, r3
 8001e72:	3714      	adds	r7, #20
 8001e74:	46bd      	mov	sp, r7
 8001e76:	bc80      	pop	{r7}
 8001e78:	4770      	bx	lr
	...

08001e7c <HAL_DMA_Abort_IT>:
 8001e7c:	b580      	push	{r7, lr}
 8001e7e:	b084      	sub	sp, #16
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	6078      	str	r0, [r7, #4]
 8001e84:	2300      	movs	r3, #0
 8001e86:	73fb      	strb	r3, [r7, #15]
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001e8e:	2b02      	cmp	r3, #2
 8001e90:	d005      	beq.n	8001e9e <HAL_DMA_Abort_IT+0x22>
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	2204      	movs	r2, #4
 8001e96:	639a      	str	r2, [r3, #56]	; 0x38
 8001e98:	2301      	movs	r3, #1
 8001e9a:	73fb      	strb	r3, [r7, #15]
 8001e9c:	e051      	b.n	8001f42 <HAL_DMA_Abort_IT+0xc6>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	681a      	ldr	r2, [r3, #0]
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	f022 020e 	bic.w	r2, r2, #14
 8001eac:	601a      	str	r2, [r3, #0]
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	681a      	ldr	r2, [r3, #0]
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	f022 0201 	bic.w	r2, r2, #1
 8001ebc:	601a      	str	r2, [r3, #0]
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	4a22      	ldr	r2, [pc, #136]	; (8001f4c <HAL_DMA_Abort_IT+0xd0>)
 8001ec4:	4293      	cmp	r3, r2
 8001ec6:	d029      	beq.n	8001f1c <HAL_DMA_Abort_IT+0xa0>
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	4a20      	ldr	r2, [pc, #128]	; (8001f50 <HAL_DMA_Abort_IT+0xd4>)
 8001ece:	4293      	cmp	r3, r2
 8001ed0:	d022      	beq.n	8001f18 <HAL_DMA_Abort_IT+0x9c>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	4a1f      	ldr	r2, [pc, #124]	; (8001f54 <HAL_DMA_Abort_IT+0xd8>)
 8001ed8:	4293      	cmp	r3, r2
 8001eda:	d01a      	beq.n	8001f12 <HAL_DMA_Abort_IT+0x96>
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	4a1d      	ldr	r2, [pc, #116]	; (8001f58 <HAL_DMA_Abort_IT+0xdc>)
 8001ee2:	4293      	cmp	r3, r2
 8001ee4:	d012      	beq.n	8001f0c <HAL_DMA_Abort_IT+0x90>
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	4a1c      	ldr	r2, [pc, #112]	; (8001f5c <HAL_DMA_Abort_IT+0xe0>)
 8001eec:	4293      	cmp	r3, r2
 8001eee:	d00a      	beq.n	8001f06 <HAL_DMA_Abort_IT+0x8a>
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	4a1a      	ldr	r2, [pc, #104]	; (8001f60 <HAL_DMA_Abort_IT+0xe4>)
 8001ef6:	4293      	cmp	r3, r2
 8001ef8:	d102      	bne.n	8001f00 <HAL_DMA_Abort_IT+0x84>
 8001efa:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001efe:	e00e      	b.n	8001f1e <HAL_DMA_Abort_IT+0xa2>
 8001f00:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001f04:	e00b      	b.n	8001f1e <HAL_DMA_Abort_IT+0xa2>
 8001f06:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001f0a:	e008      	b.n	8001f1e <HAL_DMA_Abort_IT+0xa2>
 8001f0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001f10:	e005      	b.n	8001f1e <HAL_DMA_Abort_IT+0xa2>
 8001f12:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001f16:	e002      	b.n	8001f1e <HAL_DMA_Abort_IT+0xa2>
 8001f18:	2310      	movs	r3, #16
 8001f1a:	e000      	b.n	8001f1e <HAL_DMA_Abort_IT+0xa2>
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	4a11      	ldr	r2, [pc, #68]	; (8001f64 <HAL_DMA_Abort_IT+0xe8>)
 8001f20:	6053      	str	r3, [r2, #4]
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	2201      	movs	r2, #1
 8001f26:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	2200      	movs	r2, #0
 8001f2e:	f883 2020 	strb.w	r2, [r3, #32]
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d003      	beq.n	8001f42 <HAL_DMA_Abort_IT+0xc6>
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001f3e:	6878      	ldr	r0, [r7, #4]
 8001f40:	4798      	blx	r3
 8001f42:	7bfb      	ldrb	r3, [r7, #15]
 8001f44:	4618      	mov	r0, r3
 8001f46:	3710      	adds	r7, #16
 8001f48:	46bd      	mov	sp, r7
 8001f4a:	bd80      	pop	{r7, pc}
 8001f4c:	40020008 	.word	0x40020008
 8001f50:	4002001c 	.word	0x4002001c
 8001f54:	40020030 	.word	0x40020030
 8001f58:	40020044 	.word	0x40020044
 8001f5c:	40020058 	.word	0x40020058
 8001f60:	4002006c 	.word	0x4002006c
 8001f64:	40020000 	.word	0x40020000

08001f68 <HAL_GPIO_Init>:
 8001f68:	b480      	push	{r7}
 8001f6a:	b08b      	sub	sp, #44	; 0x2c
 8001f6c:	af00      	add	r7, sp, #0
 8001f6e:	6078      	str	r0, [r7, #4]
 8001f70:	6039      	str	r1, [r7, #0]
 8001f72:	2300      	movs	r3, #0
 8001f74:	627b      	str	r3, [r7, #36]	; 0x24
 8001f76:	2300      	movs	r3, #0
 8001f78:	623b      	str	r3, [r7, #32]
 8001f7a:	e169      	b.n	8002250 <HAL_GPIO_Init+0x2e8>
 8001f7c:	2201      	movs	r2, #1
 8001f7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f80:	fa02 f303 	lsl.w	r3, r2, r3
 8001f84:	61fb      	str	r3, [r7, #28]
 8001f86:	683b      	ldr	r3, [r7, #0]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	69fa      	ldr	r2, [r7, #28]
 8001f8c:	4013      	ands	r3, r2
 8001f8e:	61bb      	str	r3, [r7, #24]
 8001f90:	69ba      	ldr	r2, [r7, #24]
 8001f92:	69fb      	ldr	r3, [r7, #28]
 8001f94:	429a      	cmp	r2, r3
 8001f96:	f040 8158 	bne.w	800224a <HAL_GPIO_Init+0x2e2>
 8001f9a:	683b      	ldr	r3, [r7, #0]
 8001f9c:	685b      	ldr	r3, [r3, #4]
 8001f9e:	4a9a      	ldr	r2, [pc, #616]	; (8002208 <HAL_GPIO_Init+0x2a0>)
 8001fa0:	4293      	cmp	r3, r2
 8001fa2:	d05e      	beq.n	8002062 <HAL_GPIO_Init+0xfa>
 8001fa4:	4a98      	ldr	r2, [pc, #608]	; (8002208 <HAL_GPIO_Init+0x2a0>)
 8001fa6:	4293      	cmp	r3, r2
 8001fa8:	d875      	bhi.n	8002096 <HAL_GPIO_Init+0x12e>
 8001faa:	4a98      	ldr	r2, [pc, #608]	; (800220c <HAL_GPIO_Init+0x2a4>)
 8001fac:	4293      	cmp	r3, r2
 8001fae:	d058      	beq.n	8002062 <HAL_GPIO_Init+0xfa>
 8001fb0:	4a96      	ldr	r2, [pc, #600]	; (800220c <HAL_GPIO_Init+0x2a4>)
 8001fb2:	4293      	cmp	r3, r2
 8001fb4:	d86f      	bhi.n	8002096 <HAL_GPIO_Init+0x12e>
 8001fb6:	4a96      	ldr	r2, [pc, #600]	; (8002210 <HAL_GPIO_Init+0x2a8>)
 8001fb8:	4293      	cmp	r3, r2
 8001fba:	d052      	beq.n	8002062 <HAL_GPIO_Init+0xfa>
 8001fbc:	4a94      	ldr	r2, [pc, #592]	; (8002210 <HAL_GPIO_Init+0x2a8>)
 8001fbe:	4293      	cmp	r3, r2
 8001fc0:	d869      	bhi.n	8002096 <HAL_GPIO_Init+0x12e>
 8001fc2:	4a94      	ldr	r2, [pc, #592]	; (8002214 <HAL_GPIO_Init+0x2ac>)
 8001fc4:	4293      	cmp	r3, r2
 8001fc6:	d04c      	beq.n	8002062 <HAL_GPIO_Init+0xfa>
 8001fc8:	4a92      	ldr	r2, [pc, #584]	; (8002214 <HAL_GPIO_Init+0x2ac>)
 8001fca:	4293      	cmp	r3, r2
 8001fcc:	d863      	bhi.n	8002096 <HAL_GPIO_Init+0x12e>
 8001fce:	4a92      	ldr	r2, [pc, #584]	; (8002218 <HAL_GPIO_Init+0x2b0>)
 8001fd0:	4293      	cmp	r3, r2
 8001fd2:	d046      	beq.n	8002062 <HAL_GPIO_Init+0xfa>
 8001fd4:	4a90      	ldr	r2, [pc, #576]	; (8002218 <HAL_GPIO_Init+0x2b0>)
 8001fd6:	4293      	cmp	r3, r2
 8001fd8:	d85d      	bhi.n	8002096 <HAL_GPIO_Init+0x12e>
 8001fda:	2b12      	cmp	r3, #18
 8001fdc:	d82a      	bhi.n	8002034 <HAL_GPIO_Init+0xcc>
 8001fde:	2b12      	cmp	r3, #18
 8001fe0:	d859      	bhi.n	8002096 <HAL_GPIO_Init+0x12e>
 8001fe2:	a201      	add	r2, pc, #4	; (adr r2, 8001fe8 <HAL_GPIO_Init+0x80>)
 8001fe4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fe8:	08002063 	.word	0x08002063
 8001fec:	0800203d 	.word	0x0800203d
 8001ff0:	0800204f 	.word	0x0800204f
 8001ff4:	08002091 	.word	0x08002091
 8001ff8:	08002097 	.word	0x08002097
 8001ffc:	08002097 	.word	0x08002097
 8002000:	08002097 	.word	0x08002097
 8002004:	08002097 	.word	0x08002097
 8002008:	08002097 	.word	0x08002097
 800200c:	08002097 	.word	0x08002097
 8002010:	08002097 	.word	0x08002097
 8002014:	08002097 	.word	0x08002097
 8002018:	08002097 	.word	0x08002097
 800201c:	08002097 	.word	0x08002097
 8002020:	08002097 	.word	0x08002097
 8002024:	08002097 	.word	0x08002097
 8002028:	08002097 	.word	0x08002097
 800202c:	08002045 	.word	0x08002045
 8002030:	08002059 	.word	0x08002059
 8002034:	4a79      	ldr	r2, [pc, #484]	; (800221c <HAL_GPIO_Init+0x2b4>)
 8002036:	4293      	cmp	r3, r2
 8002038:	d013      	beq.n	8002062 <HAL_GPIO_Init+0xfa>
 800203a:	e02c      	b.n	8002096 <HAL_GPIO_Init+0x12e>
 800203c:	683b      	ldr	r3, [r7, #0]
 800203e:	68db      	ldr	r3, [r3, #12]
 8002040:	623b      	str	r3, [r7, #32]
 8002042:	e029      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002044:	683b      	ldr	r3, [r7, #0]
 8002046:	68db      	ldr	r3, [r3, #12]
 8002048:	3304      	adds	r3, #4
 800204a:	623b      	str	r3, [r7, #32]
 800204c:	e024      	b.n	8002098 <HAL_GPIO_Init+0x130>
 800204e:	683b      	ldr	r3, [r7, #0]
 8002050:	68db      	ldr	r3, [r3, #12]
 8002052:	3308      	adds	r3, #8
 8002054:	623b      	str	r3, [r7, #32]
 8002056:	e01f      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002058:	683b      	ldr	r3, [r7, #0]
 800205a:	68db      	ldr	r3, [r3, #12]
 800205c:	330c      	adds	r3, #12
 800205e:	623b      	str	r3, [r7, #32]
 8002060:	e01a      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002062:	683b      	ldr	r3, [r7, #0]
 8002064:	689b      	ldr	r3, [r3, #8]
 8002066:	2b00      	cmp	r3, #0
 8002068:	d102      	bne.n	8002070 <HAL_GPIO_Init+0x108>
 800206a:	2304      	movs	r3, #4
 800206c:	623b      	str	r3, [r7, #32]
 800206e:	e013      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002070:	683b      	ldr	r3, [r7, #0]
 8002072:	689b      	ldr	r3, [r3, #8]
 8002074:	2b01      	cmp	r3, #1
 8002076:	d105      	bne.n	8002084 <HAL_GPIO_Init+0x11c>
 8002078:	2308      	movs	r3, #8
 800207a:	623b      	str	r3, [r7, #32]
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	69fa      	ldr	r2, [r7, #28]
 8002080:	611a      	str	r2, [r3, #16]
 8002082:	e009      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002084:	2308      	movs	r3, #8
 8002086:	623b      	str	r3, [r7, #32]
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	69fa      	ldr	r2, [r7, #28]
 800208c:	615a      	str	r2, [r3, #20]
 800208e:	e003      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002090:	2300      	movs	r3, #0
 8002092:	623b      	str	r3, [r7, #32]
 8002094:	e000      	b.n	8002098 <HAL_GPIO_Init+0x130>
 8002096:	bf00      	nop
 8002098:	69bb      	ldr	r3, [r7, #24]
 800209a:	2bff      	cmp	r3, #255	; 0xff
 800209c:	d801      	bhi.n	80020a2 <HAL_GPIO_Init+0x13a>
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	e001      	b.n	80020a6 <HAL_GPIO_Init+0x13e>
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	3304      	adds	r3, #4
 80020a6:	617b      	str	r3, [r7, #20]
 80020a8:	69bb      	ldr	r3, [r7, #24]
 80020aa:	2bff      	cmp	r3, #255	; 0xff
 80020ac:	d802      	bhi.n	80020b4 <HAL_GPIO_Init+0x14c>
 80020ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020b0:	009b      	lsls	r3, r3, #2
 80020b2:	e002      	b.n	80020ba <HAL_GPIO_Init+0x152>
 80020b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020b6:	3b08      	subs	r3, #8
 80020b8:	009b      	lsls	r3, r3, #2
 80020ba:	613b      	str	r3, [r7, #16]
 80020bc:	697b      	ldr	r3, [r7, #20]
 80020be:	681a      	ldr	r2, [r3, #0]
 80020c0:	210f      	movs	r1, #15
 80020c2:	693b      	ldr	r3, [r7, #16]
 80020c4:	fa01 f303 	lsl.w	r3, r1, r3
 80020c8:	43db      	mvns	r3, r3
 80020ca:	401a      	ands	r2, r3
 80020cc:	6a39      	ldr	r1, [r7, #32]
 80020ce:	693b      	ldr	r3, [r7, #16]
 80020d0:	fa01 f303 	lsl.w	r3, r1, r3
 80020d4:	431a      	orrs	r2, r3
 80020d6:	697b      	ldr	r3, [r7, #20]
 80020d8:	601a      	str	r2, [r3, #0]
 80020da:	683b      	ldr	r3, [r7, #0]
 80020dc:	685b      	ldr	r3, [r3, #4]
 80020de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	f000 80b1 	beq.w	800224a <HAL_GPIO_Init+0x2e2>
 80020e8:	4b4d      	ldr	r3, [pc, #308]	; (8002220 <HAL_GPIO_Init+0x2b8>)
 80020ea:	699b      	ldr	r3, [r3, #24]
 80020ec:	4a4c      	ldr	r2, [pc, #304]	; (8002220 <HAL_GPIO_Init+0x2b8>)
 80020ee:	f043 0301 	orr.w	r3, r3, #1
 80020f2:	6193      	str	r3, [r2, #24]
 80020f4:	4b4a      	ldr	r3, [pc, #296]	; (8002220 <HAL_GPIO_Init+0x2b8>)
 80020f6:	699b      	ldr	r3, [r3, #24]
 80020f8:	f003 0301 	and.w	r3, r3, #1
 80020fc:	60bb      	str	r3, [r7, #8]
 80020fe:	68bb      	ldr	r3, [r7, #8]
 8002100:	4a48      	ldr	r2, [pc, #288]	; (8002224 <HAL_GPIO_Init+0x2bc>)
 8002102:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002104:	089b      	lsrs	r3, r3, #2
 8002106:	3302      	adds	r3, #2
 8002108:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800210c:	60fb      	str	r3, [r7, #12]
 800210e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002110:	f003 0303 	and.w	r3, r3, #3
 8002114:	009b      	lsls	r3, r3, #2
 8002116:	220f      	movs	r2, #15
 8002118:	fa02 f303 	lsl.w	r3, r2, r3
 800211c:	43db      	mvns	r3, r3
 800211e:	68fa      	ldr	r2, [r7, #12]
 8002120:	4013      	ands	r3, r2
 8002122:	60fb      	str	r3, [r7, #12]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	4a40      	ldr	r2, [pc, #256]	; (8002228 <HAL_GPIO_Init+0x2c0>)
 8002128:	4293      	cmp	r3, r2
 800212a:	d013      	beq.n	8002154 <HAL_GPIO_Init+0x1ec>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	4a3f      	ldr	r2, [pc, #252]	; (800222c <HAL_GPIO_Init+0x2c4>)
 8002130:	4293      	cmp	r3, r2
 8002132:	d00d      	beq.n	8002150 <HAL_GPIO_Init+0x1e8>
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	4a3e      	ldr	r2, [pc, #248]	; (8002230 <HAL_GPIO_Init+0x2c8>)
 8002138:	4293      	cmp	r3, r2
 800213a:	d007      	beq.n	800214c <HAL_GPIO_Init+0x1e4>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	4a3d      	ldr	r2, [pc, #244]	; (8002234 <HAL_GPIO_Init+0x2cc>)
 8002140:	4293      	cmp	r3, r2
 8002142:	d101      	bne.n	8002148 <HAL_GPIO_Init+0x1e0>
 8002144:	2303      	movs	r3, #3
 8002146:	e006      	b.n	8002156 <HAL_GPIO_Init+0x1ee>
 8002148:	2304      	movs	r3, #4
 800214a:	e004      	b.n	8002156 <HAL_GPIO_Init+0x1ee>
 800214c:	2302      	movs	r3, #2
 800214e:	e002      	b.n	8002156 <HAL_GPIO_Init+0x1ee>
 8002150:	2301      	movs	r3, #1
 8002152:	e000      	b.n	8002156 <HAL_GPIO_Init+0x1ee>
 8002154:	2300      	movs	r3, #0
 8002156:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002158:	f002 0203 	and.w	r2, r2, #3
 800215c:	0092      	lsls	r2, r2, #2
 800215e:	4093      	lsls	r3, r2
 8002160:	68fa      	ldr	r2, [r7, #12]
 8002162:	4313      	orrs	r3, r2
 8002164:	60fb      	str	r3, [r7, #12]
 8002166:	492f      	ldr	r1, [pc, #188]	; (8002224 <HAL_GPIO_Init+0x2bc>)
 8002168:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800216a:	089b      	lsrs	r3, r3, #2
 800216c:	3302      	adds	r3, #2
 800216e:	68fa      	ldr	r2, [r7, #12]
 8002170:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002174:	683b      	ldr	r3, [r7, #0]
 8002176:	685b      	ldr	r3, [r3, #4]
 8002178:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800217c:	2b00      	cmp	r3, #0
 800217e:	d006      	beq.n	800218e <HAL_GPIO_Init+0x226>
 8002180:	4b2d      	ldr	r3, [pc, #180]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 8002182:	681a      	ldr	r2, [r3, #0]
 8002184:	492c      	ldr	r1, [pc, #176]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 8002186:	69bb      	ldr	r3, [r7, #24]
 8002188:	4313      	orrs	r3, r2
 800218a:	600b      	str	r3, [r1, #0]
 800218c:	e006      	b.n	800219c <HAL_GPIO_Init+0x234>
 800218e:	4b2a      	ldr	r3, [pc, #168]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 8002190:	681a      	ldr	r2, [r3, #0]
 8002192:	69bb      	ldr	r3, [r7, #24]
 8002194:	43db      	mvns	r3, r3
 8002196:	4928      	ldr	r1, [pc, #160]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 8002198:	4013      	ands	r3, r2
 800219a:	600b      	str	r3, [r1, #0]
 800219c:	683b      	ldr	r3, [r7, #0]
 800219e:	685b      	ldr	r3, [r3, #4]
 80021a0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d006      	beq.n	80021b6 <HAL_GPIO_Init+0x24e>
 80021a8:	4b23      	ldr	r3, [pc, #140]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021aa:	685a      	ldr	r2, [r3, #4]
 80021ac:	4922      	ldr	r1, [pc, #136]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021ae:	69bb      	ldr	r3, [r7, #24]
 80021b0:	4313      	orrs	r3, r2
 80021b2:	604b      	str	r3, [r1, #4]
 80021b4:	e006      	b.n	80021c4 <HAL_GPIO_Init+0x25c>
 80021b6:	4b20      	ldr	r3, [pc, #128]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021b8:	685a      	ldr	r2, [r3, #4]
 80021ba:	69bb      	ldr	r3, [r7, #24]
 80021bc:	43db      	mvns	r3, r3
 80021be:	491e      	ldr	r1, [pc, #120]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021c0:	4013      	ands	r3, r2
 80021c2:	604b      	str	r3, [r1, #4]
 80021c4:	683b      	ldr	r3, [r7, #0]
 80021c6:	685b      	ldr	r3, [r3, #4]
 80021c8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d006      	beq.n	80021de <HAL_GPIO_Init+0x276>
 80021d0:	4b19      	ldr	r3, [pc, #100]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021d2:	689a      	ldr	r2, [r3, #8]
 80021d4:	4918      	ldr	r1, [pc, #96]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021d6:	69bb      	ldr	r3, [r7, #24]
 80021d8:	4313      	orrs	r3, r2
 80021da:	608b      	str	r3, [r1, #8]
 80021dc:	e006      	b.n	80021ec <HAL_GPIO_Init+0x284>
 80021de:	4b16      	ldr	r3, [pc, #88]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021e0:	689a      	ldr	r2, [r3, #8]
 80021e2:	69bb      	ldr	r3, [r7, #24]
 80021e4:	43db      	mvns	r3, r3
 80021e6:	4914      	ldr	r1, [pc, #80]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021e8:	4013      	ands	r3, r2
 80021ea:	608b      	str	r3, [r1, #8]
 80021ec:	683b      	ldr	r3, [r7, #0]
 80021ee:	685b      	ldr	r3, [r3, #4]
 80021f0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d021      	beq.n	800223c <HAL_GPIO_Init+0x2d4>
 80021f8:	4b0f      	ldr	r3, [pc, #60]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021fa:	68da      	ldr	r2, [r3, #12]
 80021fc:	490e      	ldr	r1, [pc, #56]	; (8002238 <HAL_GPIO_Init+0x2d0>)
 80021fe:	69bb      	ldr	r3, [r7, #24]
 8002200:	4313      	orrs	r3, r2
 8002202:	60cb      	str	r3, [r1, #12]
 8002204:	e021      	b.n	800224a <HAL_GPIO_Init+0x2e2>
 8002206:	bf00      	nop
 8002208:	10320000 	.word	0x10320000
 800220c:	10310000 	.word	0x10310000
 8002210:	10220000 	.word	0x10220000
 8002214:	10210000 	.word	0x10210000
 8002218:	10120000 	.word	0x10120000
 800221c:	10110000 	.word	0x10110000
 8002220:	40021000 	.word	0x40021000
 8002224:	40010000 	.word	0x40010000
 8002228:	40010800 	.word	0x40010800
 800222c:	40010c00 	.word	0x40010c00
 8002230:	40011000 	.word	0x40011000
 8002234:	40011400 	.word	0x40011400
 8002238:	40010400 	.word	0x40010400
 800223c:	4b0b      	ldr	r3, [pc, #44]	; (800226c <HAL_GPIO_Init+0x304>)
 800223e:	68da      	ldr	r2, [r3, #12]
 8002240:	69bb      	ldr	r3, [r7, #24]
 8002242:	43db      	mvns	r3, r3
 8002244:	4909      	ldr	r1, [pc, #36]	; (800226c <HAL_GPIO_Init+0x304>)
 8002246:	4013      	ands	r3, r2
 8002248:	60cb      	str	r3, [r1, #12]
 800224a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800224c:	3301      	adds	r3, #1
 800224e:	627b      	str	r3, [r7, #36]	; 0x24
 8002250:	683b      	ldr	r3, [r7, #0]
 8002252:	681a      	ldr	r2, [r3, #0]
 8002254:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002256:	fa22 f303 	lsr.w	r3, r2, r3
 800225a:	2b00      	cmp	r3, #0
 800225c:	f47f ae8e 	bne.w	8001f7c <HAL_GPIO_Init+0x14>
 8002260:	bf00      	nop
 8002262:	bf00      	nop
 8002264:	372c      	adds	r7, #44	; 0x2c
 8002266:	46bd      	mov	sp, r7
 8002268:	bc80      	pop	{r7}
 800226a:	4770      	bx	lr
 800226c:	40010400 	.word	0x40010400

08002270 <HAL_GPIO_ReadPin>:
 8002270:	b480      	push	{r7}
 8002272:	b085      	sub	sp, #20
 8002274:	af00      	add	r7, sp, #0
 8002276:	6078      	str	r0, [r7, #4]
 8002278:	460b      	mov	r3, r1
 800227a:	807b      	strh	r3, [r7, #2]
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	689a      	ldr	r2, [r3, #8]
 8002280:	887b      	ldrh	r3, [r7, #2]
 8002282:	4013      	ands	r3, r2
 8002284:	2b00      	cmp	r3, #0
 8002286:	d002      	beq.n	800228e <HAL_GPIO_ReadPin+0x1e>
 8002288:	2301      	movs	r3, #1
 800228a:	73fb      	strb	r3, [r7, #15]
 800228c:	e001      	b.n	8002292 <HAL_GPIO_ReadPin+0x22>
 800228e:	2300      	movs	r3, #0
 8002290:	73fb      	strb	r3, [r7, #15]
 8002292:	7bfb      	ldrb	r3, [r7, #15]
 8002294:	4618      	mov	r0, r3
 8002296:	3714      	adds	r7, #20
 8002298:	46bd      	mov	sp, r7
 800229a:	bc80      	pop	{r7}
 800229c:	4770      	bx	lr

0800229e <HAL_GPIO_WritePin>:
 800229e:	b480      	push	{r7}
 80022a0:	b083      	sub	sp, #12
 80022a2:	af00      	add	r7, sp, #0
 80022a4:	6078      	str	r0, [r7, #4]
 80022a6:	460b      	mov	r3, r1
 80022a8:	807b      	strh	r3, [r7, #2]
 80022aa:	4613      	mov	r3, r2
 80022ac:	707b      	strb	r3, [r7, #1]
 80022ae:	787b      	ldrb	r3, [r7, #1]
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d003      	beq.n	80022bc <HAL_GPIO_WritePin+0x1e>
 80022b4:	887a      	ldrh	r2, [r7, #2]
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	611a      	str	r2, [r3, #16]
 80022ba:	e003      	b.n	80022c4 <HAL_GPIO_WritePin+0x26>
 80022bc:	887b      	ldrh	r3, [r7, #2]
 80022be:	041a      	lsls	r2, r3, #16
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	611a      	str	r2, [r3, #16]
 80022c4:	bf00      	nop
 80022c6:	370c      	adds	r7, #12
 80022c8:	46bd      	mov	sp, r7
 80022ca:	bc80      	pop	{r7}
 80022cc:	4770      	bx	lr
	...

080022d0 <HAL_GPIO_EXTI_IRQHandler>:
 80022d0:	b580      	push	{r7, lr}
 80022d2:	b082      	sub	sp, #8
 80022d4:	af00      	add	r7, sp, #0
 80022d6:	4603      	mov	r3, r0
 80022d8:	80fb      	strh	r3, [r7, #6]
 80022da:	4b08      	ldr	r3, [pc, #32]	; (80022fc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80022dc:	695a      	ldr	r2, [r3, #20]
 80022de:	88fb      	ldrh	r3, [r7, #6]
 80022e0:	4013      	ands	r3, r2
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d006      	beq.n	80022f4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80022e6:	4a05      	ldr	r2, [pc, #20]	; (80022fc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80022e8:	88fb      	ldrh	r3, [r7, #6]
 80022ea:	6153      	str	r3, [r2, #20]
 80022ec:	88fb      	ldrh	r3, [r7, #6]
 80022ee:	4618      	mov	r0, r3
 80022f0:	f000 f806 	bl	8002300 <HAL_GPIO_EXTI_Callback>
 80022f4:	bf00      	nop
 80022f6:	3708      	adds	r7, #8
 80022f8:	46bd      	mov	sp, r7
 80022fa:	bd80      	pop	{r7, pc}
 80022fc:	40010400 	.word	0x40010400

08002300 <HAL_GPIO_EXTI_Callback>:
 8002300:	b480      	push	{r7}
 8002302:	b083      	sub	sp, #12
 8002304:	af00      	add	r7, sp, #0
 8002306:	4603      	mov	r3, r0
 8002308:	80fb      	strh	r3, [r7, #6]
 800230a:	bf00      	nop
 800230c:	370c      	adds	r7, #12
 800230e:	46bd      	mov	sp, r7
 8002310:	bc80      	pop	{r7}
 8002312:	4770      	bx	lr

08002314 <HAL_RCC_OscConfig>:
 8002314:	b580      	push	{r7, lr}
 8002316:	b086      	sub	sp, #24
 8002318:	af00      	add	r7, sp, #0
 800231a:	6078      	str	r0, [r7, #4]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	2b00      	cmp	r3, #0
 8002320:	d101      	bne.n	8002326 <HAL_RCC_OscConfig+0x12>
 8002322:	2301      	movs	r3, #1
 8002324:	e26c      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	f003 0301 	and.w	r3, r3, #1
 800232e:	2b00      	cmp	r3, #0
 8002330:	f000 8087 	beq.w	8002442 <HAL_RCC_OscConfig+0x12e>
 8002334:	4b92      	ldr	r3, [pc, #584]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002336:	685b      	ldr	r3, [r3, #4]
 8002338:	f003 030c 	and.w	r3, r3, #12
 800233c:	2b04      	cmp	r3, #4
 800233e:	d00c      	beq.n	800235a <HAL_RCC_OscConfig+0x46>
 8002340:	4b8f      	ldr	r3, [pc, #572]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002342:	685b      	ldr	r3, [r3, #4]
 8002344:	f003 030c 	and.w	r3, r3, #12
 8002348:	2b08      	cmp	r3, #8
 800234a:	d112      	bne.n	8002372 <HAL_RCC_OscConfig+0x5e>
 800234c:	4b8c      	ldr	r3, [pc, #560]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800234e:	685b      	ldr	r3, [r3, #4]
 8002350:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002354:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002358:	d10b      	bne.n	8002372 <HAL_RCC_OscConfig+0x5e>
 800235a:	4b89      	ldr	r3, [pc, #548]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002362:	2b00      	cmp	r3, #0
 8002364:	d06c      	beq.n	8002440 <HAL_RCC_OscConfig+0x12c>
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	685b      	ldr	r3, [r3, #4]
 800236a:	2b00      	cmp	r3, #0
 800236c:	d168      	bne.n	8002440 <HAL_RCC_OscConfig+0x12c>
 800236e:	2301      	movs	r3, #1
 8002370:	e246      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	685b      	ldr	r3, [r3, #4]
 8002376:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800237a:	d106      	bne.n	800238a <HAL_RCC_OscConfig+0x76>
 800237c:	4b80      	ldr	r3, [pc, #512]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	4a7f      	ldr	r2, [pc, #508]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002382:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002386:	6013      	str	r3, [r2, #0]
 8002388:	e02e      	b.n	80023e8 <HAL_RCC_OscConfig+0xd4>
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	685b      	ldr	r3, [r3, #4]
 800238e:	2b00      	cmp	r3, #0
 8002390:	d10c      	bne.n	80023ac <HAL_RCC_OscConfig+0x98>
 8002392:	4b7b      	ldr	r3, [pc, #492]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	4a7a      	ldr	r2, [pc, #488]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002398:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800239c:	6013      	str	r3, [r2, #0]
 800239e:	4b78      	ldr	r3, [pc, #480]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	4a77      	ldr	r2, [pc, #476]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023a4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80023a8:	6013      	str	r3, [r2, #0]
 80023aa:	e01d      	b.n	80023e8 <HAL_RCC_OscConfig+0xd4>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	685b      	ldr	r3, [r3, #4]
 80023b0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80023b4:	d10c      	bne.n	80023d0 <HAL_RCC_OscConfig+0xbc>
 80023b6:	4b72      	ldr	r3, [pc, #456]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	4a71      	ldr	r2, [pc, #452]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023bc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80023c0:	6013      	str	r3, [r2, #0]
 80023c2:	4b6f      	ldr	r3, [pc, #444]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	4a6e      	ldr	r2, [pc, #440]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80023cc:	6013      	str	r3, [r2, #0]
 80023ce:	e00b      	b.n	80023e8 <HAL_RCC_OscConfig+0xd4>
 80023d0:	4b6b      	ldr	r3, [pc, #428]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	4a6a      	ldr	r2, [pc, #424]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023d6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80023da:	6013      	str	r3, [r2, #0]
 80023dc:	4b68      	ldr	r3, [pc, #416]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	4a67      	ldr	r2, [pc, #412]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80023e2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80023e6:	6013      	str	r3, [r2, #0]
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	685b      	ldr	r3, [r3, #4]
 80023ec:	2b00      	cmp	r3, #0
 80023ee:	d013      	beq.n	8002418 <HAL_RCC_OscConfig+0x104>
 80023f0:	f7ff fbf2 	bl	8001bd8 <HAL_GetTick>
 80023f4:	6138      	str	r0, [r7, #16]
 80023f6:	e008      	b.n	800240a <HAL_RCC_OscConfig+0xf6>
 80023f8:	f7ff fbee 	bl	8001bd8 <HAL_GetTick>
 80023fc:	4602      	mov	r2, r0
 80023fe:	693b      	ldr	r3, [r7, #16]
 8002400:	1ad3      	subs	r3, r2, r3
 8002402:	2b64      	cmp	r3, #100	; 0x64
 8002404:	d901      	bls.n	800240a <HAL_RCC_OscConfig+0xf6>
 8002406:	2303      	movs	r3, #3
 8002408:	e1fa      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 800240a:	4b5d      	ldr	r3, [pc, #372]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002412:	2b00      	cmp	r3, #0
 8002414:	d0f0      	beq.n	80023f8 <HAL_RCC_OscConfig+0xe4>
 8002416:	e014      	b.n	8002442 <HAL_RCC_OscConfig+0x12e>
 8002418:	f7ff fbde 	bl	8001bd8 <HAL_GetTick>
 800241c:	6138      	str	r0, [r7, #16]
 800241e:	e008      	b.n	8002432 <HAL_RCC_OscConfig+0x11e>
 8002420:	f7ff fbda 	bl	8001bd8 <HAL_GetTick>
 8002424:	4602      	mov	r2, r0
 8002426:	693b      	ldr	r3, [r7, #16]
 8002428:	1ad3      	subs	r3, r2, r3
 800242a:	2b64      	cmp	r3, #100	; 0x64
 800242c:	d901      	bls.n	8002432 <HAL_RCC_OscConfig+0x11e>
 800242e:	2303      	movs	r3, #3
 8002430:	e1e6      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 8002432:	4b53      	ldr	r3, [pc, #332]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800243a:	2b00      	cmp	r3, #0
 800243c:	d1f0      	bne.n	8002420 <HAL_RCC_OscConfig+0x10c>
 800243e:	e000      	b.n	8002442 <HAL_RCC_OscConfig+0x12e>
 8002440:	bf00      	nop
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	f003 0302 	and.w	r3, r3, #2
 800244a:	2b00      	cmp	r3, #0
 800244c:	d063      	beq.n	8002516 <HAL_RCC_OscConfig+0x202>
 800244e:	4b4c      	ldr	r3, [pc, #304]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002450:	685b      	ldr	r3, [r3, #4]
 8002452:	f003 030c 	and.w	r3, r3, #12
 8002456:	2b00      	cmp	r3, #0
 8002458:	d00b      	beq.n	8002472 <HAL_RCC_OscConfig+0x15e>
 800245a:	4b49      	ldr	r3, [pc, #292]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800245c:	685b      	ldr	r3, [r3, #4]
 800245e:	f003 030c 	and.w	r3, r3, #12
 8002462:	2b08      	cmp	r3, #8
 8002464:	d11c      	bne.n	80024a0 <HAL_RCC_OscConfig+0x18c>
 8002466:	4b46      	ldr	r3, [pc, #280]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800246e:	2b00      	cmp	r3, #0
 8002470:	d116      	bne.n	80024a0 <HAL_RCC_OscConfig+0x18c>
 8002472:	4b43      	ldr	r3, [pc, #268]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	f003 0302 	and.w	r3, r3, #2
 800247a:	2b00      	cmp	r3, #0
 800247c:	d005      	beq.n	800248a <HAL_RCC_OscConfig+0x176>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	691b      	ldr	r3, [r3, #16]
 8002482:	2b01      	cmp	r3, #1
 8002484:	d001      	beq.n	800248a <HAL_RCC_OscConfig+0x176>
 8002486:	2301      	movs	r3, #1
 8002488:	e1ba      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 800248a:	4b3d      	ldr	r3, [pc, #244]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	695b      	ldr	r3, [r3, #20]
 8002496:	00db      	lsls	r3, r3, #3
 8002498:	4939      	ldr	r1, [pc, #228]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800249a:	4313      	orrs	r3, r2
 800249c:	600b      	str	r3, [r1, #0]
 800249e:	e03a      	b.n	8002516 <HAL_RCC_OscConfig+0x202>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	691b      	ldr	r3, [r3, #16]
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	d020      	beq.n	80024ea <HAL_RCC_OscConfig+0x1d6>
 80024a8:	4b36      	ldr	r3, [pc, #216]	; (8002584 <HAL_RCC_OscConfig+0x270>)
 80024aa:	2201      	movs	r2, #1
 80024ac:	601a      	str	r2, [r3, #0]
 80024ae:	f7ff fb93 	bl	8001bd8 <HAL_GetTick>
 80024b2:	6138      	str	r0, [r7, #16]
 80024b4:	e008      	b.n	80024c8 <HAL_RCC_OscConfig+0x1b4>
 80024b6:	f7ff fb8f 	bl	8001bd8 <HAL_GetTick>
 80024ba:	4602      	mov	r2, r0
 80024bc:	693b      	ldr	r3, [r7, #16]
 80024be:	1ad3      	subs	r3, r2, r3
 80024c0:	2b02      	cmp	r3, #2
 80024c2:	d901      	bls.n	80024c8 <HAL_RCC_OscConfig+0x1b4>
 80024c4:	2303      	movs	r3, #3
 80024c6:	e19b      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 80024c8:	4b2d      	ldr	r3, [pc, #180]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	f003 0302 	and.w	r3, r3, #2
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d0f0      	beq.n	80024b6 <HAL_RCC_OscConfig+0x1a2>
 80024d4:	4b2a      	ldr	r3, [pc, #168]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	695b      	ldr	r3, [r3, #20]
 80024e0:	00db      	lsls	r3, r3, #3
 80024e2:	4927      	ldr	r1, [pc, #156]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 80024e4:	4313      	orrs	r3, r2
 80024e6:	600b      	str	r3, [r1, #0]
 80024e8:	e015      	b.n	8002516 <HAL_RCC_OscConfig+0x202>
 80024ea:	4b26      	ldr	r3, [pc, #152]	; (8002584 <HAL_RCC_OscConfig+0x270>)
 80024ec:	2200      	movs	r2, #0
 80024ee:	601a      	str	r2, [r3, #0]
 80024f0:	f7ff fb72 	bl	8001bd8 <HAL_GetTick>
 80024f4:	6138      	str	r0, [r7, #16]
 80024f6:	e008      	b.n	800250a <HAL_RCC_OscConfig+0x1f6>
 80024f8:	f7ff fb6e 	bl	8001bd8 <HAL_GetTick>
 80024fc:	4602      	mov	r2, r0
 80024fe:	693b      	ldr	r3, [r7, #16]
 8002500:	1ad3      	subs	r3, r2, r3
 8002502:	2b02      	cmp	r3, #2
 8002504:	d901      	bls.n	800250a <HAL_RCC_OscConfig+0x1f6>
 8002506:	2303      	movs	r3, #3
 8002508:	e17a      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 800250a:	4b1d      	ldr	r3, [pc, #116]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	f003 0302 	and.w	r3, r3, #2
 8002512:	2b00      	cmp	r3, #0
 8002514:	d1f0      	bne.n	80024f8 <HAL_RCC_OscConfig+0x1e4>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	f003 0308 	and.w	r3, r3, #8
 800251e:	2b00      	cmp	r3, #0
 8002520:	d03a      	beq.n	8002598 <HAL_RCC_OscConfig+0x284>
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	699b      	ldr	r3, [r3, #24]
 8002526:	2b00      	cmp	r3, #0
 8002528:	d019      	beq.n	800255e <HAL_RCC_OscConfig+0x24a>
 800252a:	4b17      	ldr	r3, [pc, #92]	; (8002588 <HAL_RCC_OscConfig+0x274>)
 800252c:	2201      	movs	r2, #1
 800252e:	601a      	str	r2, [r3, #0]
 8002530:	f7ff fb52 	bl	8001bd8 <HAL_GetTick>
 8002534:	6138      	str	r0, [r7, #16]
 8002536:	e008      	b.n	800254a <HAL_RCC_OscConfig+0x236>
 8002538:	f7ff fb4e 	bl	8001bd8 <HAL_GetTick>
 800253c:	4602      	mov	r2, r0
 800253e:	693b      	ldr	r3, [r7, #16]
 8002540:	1ad3      	subs	r3, r2, r3
 8002542:	2b02      	cmp	r3, #2
 8002544:	d901      	bls.n	800254a <HAL_RCC_OscConfig+0x236>
 8002546:	2303      	movs	r3, #3
 8002548:	e15a      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 800254a:	4b0d      	ldr	r3, [pc, #52]	; (8002580 <HAL_RCC_OscConfig+0x26c>)
 800254c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800254e:	f003 0302 	and.w	r3, r3, #2
 8002552:	2b00      	cmp	r3, #0
 8002554:	d0f0      	beq.n	8002538 <HAL_RCC_OscConfig+0x224>
 8002556:	2001      	movs	r0, #1
 8002558:	f000 fad8 	bl	8002b0c <RCC_Delay>
 800255c:	e01c      	b.n	8002598 <HAL_RCC_OscConfig+0x284>
 800255e:	4b0a      	ldr	r3, [pc, #40]	; (8002588 <HAL_RCC_OscConfig+0x274>)
 8002560:	2200      	movs	r2, #0
 8002562:	601a      	str	r2, [r3, #0]
 8002564:	f7ff fb38 	bl	8001bd8 <HAL_GetTick>
 8002568:	6138      	str	r0, [r7, #16]
 800256a:	e00f      	b.n	800258c <HAL_RCC_OscConfig+0x278>
 800256c:	f7ff fb34 	bl	8001bd8 <HAL_GetTick>
 8002570:	4602      	mov	r2, r0
 8002572:	693b      	ldr	r3, [r7, #16]
 8002574:	1ad3      	subs	r3, r2, r3
 8002576:	2b02      	cmp	r3, #2
 8002578:	d908      	bls.n	800258c <HAL_RCC_OscConfig+0x278>
 800257a:	2303      	movs	r3, #3
 800257c:	e140      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 800257e:	bf00      	nop
 8002580:	40021000 	.word	0x40021000
 8002584:	42420000 	.word	0x42420000
 8002588:	42420480 	.word	0x42420480
 800258c:	4b9e      	ldr	r3, [pc, #632]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800258e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002590:	f003 0302 	and.w	r3, r3, #2
 8002594:	2b00      	cmp	r3, #0
 8002596:	d1e9      	bne.n	800256c <HAL_RCC_OscConfig+0x258>
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	f003 0304 	and.w	r3, r3, #4
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	f000 80a6 	beq.w	80026f2 <HAL_RCC_OscConfig+0x3de>
 80025a6:	2300      	movs	r3, #0
 80025a8:	75fb      	strb	r3, [r7, #23]
 80025aa:	4b97      	ldr	r3, [pc, #604]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80025ac:	69db      	ldr	r3, [r3, #28]
 80025ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025b2:	2b00      	cmp	r3, #0
 80025b4:	d10d      	bne.n	80025d2 <HAL_RCC_OscConfig+0x2be>
 80025b6:	4b94      	ldr	r3, [pc, #592]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80025b8:	69db      	ldr	r3, [r3, #28]
 80025ba:	4a93      	ldr	r2, [pc, #588]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80025bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80025c0:	61d3      	str	r3, [r2, #28]
 80025c2:	4b91      	ldr	r3, [pc, #580]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80025c4:	69db      	ldr	r3, [r3, #28]
 80025c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025ca:	60bb      	str	r3, [r7, #8]
 80025cc:	68bb      	ldr	r3, [r7, #8]
 80025ce:	2301      	movs	r3, #1
 80025d0:	75fb      	strb	r3, [r7, #23]
 80025d2:	4b8e      	ldr	r3, [pc, #568]	; (800280c <HAL_RCC_OscConfig+0x4f8>)
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025da:	2b00      	cmp	r3, #0
 80025dc:	d118      	bne.n	8002610 <HAL_RCC_OscConfig+0x2fc>
 80025de:	4b8b      	ldr	r3, [pc, #556]	; (800280c <HAL_RCC_OscConfig+0x4f8>)
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	4a8a      	ldr	r2, [pc, #552]	; (800280c <HAL_RCC_OscConfig+0x4f8>)
 80025e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025e8:	6013      	str	r3, [r2, #0]
 80025ea:	f7ff faf5 	bl	8001bd8 <HAL_GetTick>
 80025ee:	6138      	str	r0, [r7, #16]
 80025f0:	e008      	b.n	8002604 <HAL_RCC_OscConfig+0x2f0>
 80025f2:	f7ff faf1 	bl	8001bd8 <HAL_GetTick>
 80025f6:	4602      	mov	r2, r0
 80025f8:	693b      	ldr	r3, [r7, #16]
 80025fa:	1ad3      	subs	r3, r2, r3
 80025fc:	2b64      	cmp	r3, #100	; 0x64
 80025fe:	d901      	bls.n	8002604 <HAL_RCC_OscConfig+0x2f0>
 8002600:	2303      	movs	r3, #3
 8002602:	e0fd      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 8002604:	4b81      	ldr	r3, [pc, #516]	; (800280c <HAL_RCC_OscConfig+0x4f8>)
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800260c:	2b00      	cmp	r3, #0
 800260e:	d0f0      	beq.n	80025f2 <HAL_RCC_OscConfig+0x2de>
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	68db      	ldr	r3, [r3, #12]
 8002614:	2b01      	cmp	r3, #1
 8002616:	d106      	bne.n	8002626 <HAL_RCC_OscConfig+0x312>
 8002618:	4b7b      	ldr	r3, [pc, #492]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800261a:	6a1b      	ldr	r3, [r3, #32]
 800261c:	4a7a      	ldr	r2, [pc, #488]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800261e:	f043 0301 	orr.w	r3, r3, #1
 8002622:	6213      	str	r3, [r2, #32]
 8002624:	e02d      	b.n	8002682 <HAL_RCC_OscConfig+0x36e>
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	68db      	ldr	r3, [r3, #12]
 800262a:	2b00      	cmp	r3, #0
 800262c:	d10c      	bne.n	8002648 <HAL_RCC_OscConfig+0x334>
 800262e:	4b76      	ldr	r3, [pc, #472]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002630:	6a1b      	ldr	r3, [r3, #32]
 8002632:	4a75      	ldr	r2, [pc, #468]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002634:	f023 0301 	bic.w	r3, r3, #1
 8002638:	6213      	str	r3, [r2, #32]
 800263a:	4b73      	ldr	r3, [pc, #460]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800263c:	6a1b      	ldr	r3, [r3, #32]
 800263e:	4a72      	ldr	r2, [pc, #456]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002640:	f023 0304 	bic.w	r3, r3, #4
 8002644:	6213      	str	r3, [r2, #32]
 8002646:	e01c      	b.n	8002682 <HAL_RCC_OscConfig+0x36e>
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	68db      	ldr	r3, [r3, #12]
 800264c:	2b05      	cmp	r3, #5
 800264e:	d10c      	bne.n	800266a <HAL_RCC_OscConfig+0x356>
 8002650:	4b6d      	ldr	r3, [pc, #436]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002652:	6a1b      	ldr	r3, [r3, #32]
 8002654:	4a6c      	ldr	r2, [pc, #432]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002656:	f043 0304 	orr.w	r3, r3, #4
 800265a:	6213      	str	r3, [r2, #32]
 800265c:	4b6a      	ldr	r3, [pc, #424]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800265e:	6a1b      	ldr	r3, [r3, #32]
 8002660:	4a69      	ldr	r2, [pc, #420]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002662:	f043 0301 	orr.w	r3, r3, #1
 8002666:	6213      	str	r3, [r2, #32]
 8002668:	e00b      	b.n	8002682 <HAL_RCC_OscConfig+0x36e>
 800266a:	4b67      	ldr	r3, [pc, #412]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800266c:	6a1b      	ldr	r3, [r3, #32]
 800266e:	4a66      	ldr	r2, [pc, #408]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002670:	f023 0301 	bic.w	r3, r3, #1
 8002674:	6213      	str	r3, [r2, #32]
 8002676:	4b64      	ldr	r3, [pc, #400]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002678:	6a1b      	ldr	r3, [r3, #32]
 800267a:	4a63      	ldr	r2, [pc, #396]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800267c:	f023 0304 	bic.w	r3, r3, #4
 8002680:	6213      	str	r3, [r2, #32]
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	68db      	ldr	r3, [r3, #12]
 8002686:	2b00      	cmp	r3, #0
 8002688:	d015      	beq.n	80026b6 <HAL_RCC_OscConfig+0x3a2>
 800268a:	f7ff faa5 	bl	8001bd8 <HAL_GetTick>
 800268e:	6138      	str	r0, [r7, #16]
 8002690:	e00a      	b.n	80026a8 <HAL_RCC_OscConfig+0x394>
 8002692:	f7ff faa1 	bl	8001bd8 <HAL_GetTick>
 8002696:	4602      	mov	r2, r0
 8002698:	693b      	ldr	r3, [r7, #16]
 800269a:	1ad3      	subs	r3, r2, r3
 800269c:	f241 3288 	movw	r2, #5000	; 0x1388
 80026a0:	4293      	cmp	r3, r2
 80026a2:	d901      	bls.n	80026a8 <HAL_RCC_OscConfig+0x394>
 80026a4:	2303      	movs	r3, #3
 80026a6:	e0ab      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 80026a8:	4b57      	ldr	r3, [pc, #348]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80026aa:	6a1b      	ldr	r3, [r3, #32]
 80026ac:	f003 0302 	and.w	r3, r3, #2
 80026b0:	2b00      	cmp	r3, #0
 80026b2:	d0ee      	beq.n	8002692 <HAL_RCC_OscConfig+0x37e>
 80026b4:	e014      	b.n	80026e0 <HAL_RCC_OscConfig+0x3cc>
 80026b6:	f7ff fa8f 	bl	8001bd8 <HAL_GetTick>
 80026ba:	6138      	str	r0, [r7, #16]
 80026bc:	e00a      	b.n	80026d4 <HAL_RCC_OscConfig+0x3c0>
 80026be:	f7ff fa8b 	bl	8001bd8 <HAL_GetTick>
 80026c2:	4602      	mov	r2, r0
 80026c4:	693b      	ldr	r3, [r7, #16]
 80026c6:	1ad3      	subs	r3, r2, r3
 80026c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80026cc:	4293      	cmp	r3, r2
 80026ce:	d901      	bls.n	80026d4 <HAL_RCC_OscConfig+0x3c0>
 80026d0:	2303      	movs	r3, #3
 80026d2:	e095      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 80026d4:	4b4c      	ldr	r3, [pc, #304]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80026d6:	6a1b      	ldr	r3, [r3, #32]
 80026d8:	f003 0302 	and.w	r3, r3, #2
 80026dc:	2b00      	cmp	r3, #0
 80026de:	d1ee      	bne.n	80026be <HAL_RCC_OscConfig+0x3aa>
 80026e0:	7dfb      	ldrb	r3, [r7, #23]
 80026e2:	2b01      	cmp	r3, #1
 80026e4:	d105      	bne.n	80026f2 <HAL_RCC_OscConfig+0x3de>
 80026e6:	4b48      	ldr	r3, [pc, #288]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80026e8:	69db      	ldr	r3, [r3, #28]
 80026ea:	4a47      	ldr	r2, [pc, #284]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80026ec:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80026f0:	61d3      	str	r3, [r2, #28]
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	69db      	ldr	r3, [r3, #28]
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	f000 8081 	beq.w	80027fe <HAL_RCC_OscConfig+0x4ea>
 80026fc:	4b42      	ldr	r3, [pc, #264]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80026fe:	685b      	ldr	r3, [r3, #4]
 8002700:	f003 030c 	and.w	r3, r3, #12
 8002704:	2b08      	cmp	r3, #8
 8002706:	d061      	beq.n	80027cc <HAL_RCC_OscConfig+0x4b8>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	69db      	ldr	r3, [r3, #28]
 800270c:	2b02      	cmp	r3, #2
 800270e:	d146      	bne.n	800279e <HAL_RCC_OscConfig+0x48a>
 8002710:	4b3f      	ldr	r3, [pc, #252]	; (8002810 <HAL_RCC_OscConfig+0x4fc>)
 8002712:	2200      	movs	r2, #0
 8002714:	601a      	str	r2, [r3, #0]
 8002716:	f7ff fa5f 	bl	8001bd8 <HAL_GetTick>
 800271a:	6138      	str	r0, [r7, #16]
 800271c:	e008      	b.n	8002730 <HAL_RCC_OscConfig+0x41c>
 800271e:	f7ff fa5b 	bl	8001bd8 <HAL_GetTick>
 8002722:	4602      	mov	r2, r0
 8002724:	693b      	ldr	r3, [r7, #16]
 8002726:	1ad3      	subs	r3, r2, r3
 8002728:	2b02      	cmp	r3, #2
 800272a:	d901      	bls.n	8002730 <HAL_RCC_OscConfig+0x41c>
 800272c:	2303      	movs	r3, #3
 800272e:	e067      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 8002730:	4b35      	ldr	r3, [pc, #212]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002738:	2b00      	cmp	r3, #0
 800273a:	d1f0      	bne.n	800271e <HAL_RCC_OscConfig+0x40a>
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	6a1b      	ldr	r3, [r3, #32]
 8002740:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002744:	d108      	bne.n	8002758 <HAL_RCC_OscConfig+0x444>
 8002746:	4b30      	ldr	r3, [pc, #192]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002748:	685b      	ldr	r3, [r3, #4]
 800274a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	689b      	ldr	r3, [r3, #8]
 8002752:	492d      	ldr	r1, [pc, #180]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002754:	4313      	orrs	r3, r2
 8002756:	604b      	str	r3, [r1, #4]
 8002758:	4b2b      	ldr	r3, [pc, #172]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800275a:	685b      	ldr	r3, [r3, #4]
 800275c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	6a19      	ldr	r1, [r3, #32]
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002768:	430b      	orrs	r3, r1
 800276a:	4927      	ldr	r1, [pc, #156]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 800276c:	4313      	orrs	r3, r2
 800276e:	604b      	str	r3, [r1, #4]
 8002770:	4b27      	ldr	r3, [pc, #156]	; (8002810 <HAL_RCC_OscConfig+0x4fc>)
 8002772:	2201      	movs	r2, #1
 8002774:	601a      	str	r2, [r3, #0]
 8002776:	f7ff fa2f 	bl	8001bd8 <HAL_GetTick>
 800277a:	6138      	str	r0, [r7, #16]
 800277c:	e008      	b.n	8002790 <HAL_RCC_OscConfig+0x47c>
 800277e:	f7ff fa2b 	bl	8001bd8 <HAL_GetTick>
 8002782:	4602      	mov	r2, r0
 8002784:	693b      	ldr	r3, [r7, #16]
 8002786:	1ad3      	subs	r3, r2, r3
 8002788:	2b02      	cmp	r3, #2
 800278a:	d901      	bls.n	8002790 <HAL_RCC_OscConfig+0x47c>
 800278c:	2303      	movs	r3, #3
 800278e:	e037      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 8002790:	4b1d      	ldr	r3, [pc, #116]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002798:	2b00      	cmp	r3, #0
 800279a:	d0f0      	beq.n	800277e <HAL_RCC_OscConfig+0x46a>
 800279c:	e02f      	b.n	80027fe <HAL_RCC_OscConfig+0x4ea>
 800279e:	4b1c      	ldr	r3, [pc, #112]	; (8002810 <HAL_RCC_OscConfig+0x4fc>)
 80027a0:	2200      	movs	r2, #0
 80027a2:	601a      	str	r2, [r3, #0]
 80027a4:	f7ff fa18 	bl	8001bd8 <HAL_GetTick>
 80027a8:	6138      	str	r0, [r7, #16]
 80027aa:	e008      	b.n	80027be <HAL_RCC_OscConfig+0x4aa>
 80027ac:	f7ff fa14 	bl	8001bd8 <HAL_GetTick>
 80027b0:	4602      	mov	r2, r0
 80027b2:	693b      	ldr	r3, [r7, #16]
 80027b4:	1ad3      	subs	r3, r2, r3
 80027b6:	2b02      	cmp	r3, #2
 80027b8:	d901      	bls.n	80027be <HAL_RCC_OscConfig+0x4aa>
 80027ba:	2303      	movs	r3, #3
 80027bc:	e020      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 80027be:	4b12      	ldr	r3, [pc, #72]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d1f0      	bne.n	80027ac <HAL_RCC_OscConfig+0x498>
 80027ca:	e018      	b.n	80027fe <HAL_RCC_OscConfig+0x4ea>
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	69db      	ldr	r3, [r3, #28]
 80027d0:	2b01      	cmp	r3, #1
 80027d2:	d101      	bne.n	80027d8 <HAL_RCC_OscConfig+0x4c4>
 80027d4:	2301      	movs	r3, #1
 80027d6:	e013      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 80027d8:	4b0b      	ldr	r3, [pc, #44]	; (8002808 <HAL_RCC_OscConfig+0x4f4>)
 80027da:	685b      	ldr	r3, [r3, #4]
 80027dc:	60fb      	str	r3, [r7, #12]
 80027de:	68fb      	ldr	r3, [r7, #12]
 80027e0:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	6a1b      	ldr	r3, [r3, #32]
 80027e8:	429a      	cmp	r2, r3
 80027ea:	d106      	bne.n	80027fa <HAL_RCC_OscConfig+0x4e6>
 80027ec:	68fb      	ldr	r3, [r7, #12]
 80027ee:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027f6:	429a      	cmp	r2, r3
 80027f8:	d001      	beq.n	80027fe <HAL_RCC_OscConfig+0x4ea>
 80027fa:	2301      	movs	r3, #1
 80027fc:	e000      	b.n	8002800 <HAL_RCC_OscConfig+0x4ec>
 80027fe:	2300      	movs	r3, #0
 8002800:	4618      	mov	r0, r3
 8002802:	3718      	adds	r7, #24
 8002804:	46bd      	mov	sp, r7
 8002806:	bd80      	pop	{r7, pc}
 8002808:	40021000 	.word	0x40021000
 800280c:	40007000 	.word	0x40007000
 8002810:	42420060 	.word	0x42420060

08002814 <HAL_RCC_ClockConfig>:
 8002814:	b580      	push	{r7, lr}
 8002816:	b084      	sub	sp, #16
 8002818:	af00      	add	r7, sp, #0
 800281a:	6078      	str	r0, [r7, #4]
 800281c:	6039      	str	r1, [r7, #0]
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	2b00      	cmp	r3, #0
 8002822:	d101      	bne.n	8002828 <HAL_RCC_ClockConfig+0x14>
 8002824:	2301      	movs	r3, #1
 8002826:	e0d0      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 8002828:	4b6a      	ldr	r3, [pc, #424]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	f003 0307 	and.w	r3, r3, #7
 8002830:	683a      	ldr	r2, [r7, #0]
 8002832:	429a      	cmp	r2, r3
 8002834:	d910      	bls.n	8002858 <HAL_RCC_ClockConfig+0x44>
 8002836:	4b67      	ldr	r3, [pc, #412]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	f023 0207 	bic.w	r2, r3, #7
 800283e:	4965      	ldr	r1, [pc, #404]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 8002840:	683b      	ldr	r3, [r7, #0]
 8002842:	4313      	orrs	r3, r2
 8002844:	600b      	str	r3, [r1, #0]
 8002846:	4b63      	ldr	r3, [pc, #396]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	f003 0307 	and.w	r3, r3, #7
 800284e:	683a      	ldr	r2, [r7, #0]
 8002850:	429a      	cmp	r2, r3
 8002852:	d001      	beq.n	8002858 <HAL_RCC_ClockConfig+0x44>
 8002854:	2301      	movs	r3, #1
 8002856:	e0b8      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	f003 0302 	and.w	r3, r3, #2
 8002860:	2b00      	cmp	r3, #0
 8002862:	d020      	beq.n	80028a6 <HAL_RCC_ClockConfig+0x92>
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	f003 0304 	and.w	r3, r3, #4
 800286c:	2b00      	cmp	r3, #0
 800286e:	d005      	beq.n	800287c <HAL_RCC_ClockConfig+0x68>
 8002870:	4b59      	ldr	r3, [pc, #356]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002872:	685b      	ldr	r3, [r3, #4]
 8002874:	4a58      	ldr	r2, [pc, #352]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002876:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800287a:	6053      	str	r3, [r2, #4]
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	f003 0308 	and.w	r3, r3, #8
 8002884:	2b00      	cmp	r3, #0
 8002886:	d005      	beq.n	8002894 <HAL_RCC_ClockConfig+0x80>
 8002888:	4b53      	ldr	r3, [pc, #332]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 800288a:	685b      	ldr	r3, [r3, #4]
 800288c:	4a52      	ldr	r2, [pc, #328]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 800288e:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002892:	6053      	str	r3, [r2, #4]
 8002894:	4b50      	ldr	r3, [pc, #320]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002896:	685b      	ldr	r3, [r3, #4]
 8002898:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	689b      	ldr	r3, [r3, #8]
 80028a0:	494d      	ldr	r1, [pc, #308]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 80028a2:	4313      	orrs	r3, r2
 80028a4:	604b      	str	r3, [r1, #4]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	f003 0301 	and.w	r3, r3, #1
 80028ae:	2b00      	cmp	r3, #0
 80028b0:	d040      	beq.n	8002934 <HAL_RCC_ClockConfig+0x120>
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	685b      	ldr	r3, [r3, #4]
 80028b6:	2b01      	cmp	r3, #1
 80028b8:	d107      	bne.n	80028ca <HAL_RCC_ClockConfig+0xb6>
 80028ba:	4b47      	ldr	r3, [pc, #284]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 80028bc:	681b      	ldr	r3, [r3, #0]
 80028be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d115      	bne.n	80028f2 <HAL_RCC_ClockConfig+0xde>
 80028c6:	2301      	movs	r3, #1
 80028c8:	e07f      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	685b      	ldr	r3, [r3, #4]
 80028ce:	2b02      	cmp	r3, #2
 80028d0:	d107      	bne.n	80028e2 <HAL_RCC_ClockConfig+0xce>
 80028d2:	4b41      	ldr	r3, [pc, #260]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d109      	bne.n	80028f2 <HAL_RCC_ClockConfig+0xde>
 80028de:	2301      	movs	r3, #1
 80028e0:	e073      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 80028e2:	4b3d      	ldr	r3, [pc, #244]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	f003 0302 	and.w	r3, r3, #2
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d101      	bne.n	80028f2 <HAL_RCC_ClockConfig+0xde>
 80028ee:	2301      	movs	r3, #1
 80028f0:	e06b      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 80028f2:	4b39      	ldr	r3, [pc, #228]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 80028f4:	685b      	ldr	r3, [r3, #4]
 80028f6:	f023 0203 	bic.w	r2, r3, #3
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	685b      	ldr	r3, [r3, #4]
 80028fe:	4936      	ldr	r1, [pc, #216]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002900:	4313      	orrs	r3, r2
 8002902:	604b      	str	r3, [r1, #4]
 8002904:	f7ff f968 	bl	8001bd8 <HAL_GetTick>
 8002908:	60f8      	str	r0, [r7, #12]
 800290a:	e00a      	b.n	8002922 <HAL_RCC_ClockConfig+0x10e>
 800290c:	f7ff f964 	bl	8001bd8 <HAL_GetTick>
 8002910:	4602      	mov	r2, r0
 8002912:	68fb      	ldr	r3, [r7, #12]
 8002914:	1ad3      	subs	r3, r2, r3
 8002916:	f241 3288 	movw	r2, #5000	; 0x1388
 800291a:	4293      	cmp	r3, r2
 800291c:	d901      	bls.n	8002922 <HAL_RCC_ClockConfig+0x10e>
 800291e:	2303      	movs	r3, #3
 8002920:	e053      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 8002922:	4b2d      	ldr	r3, [pc, #180]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002924:	685b      	ldr	r3, [r3, #4]
 8002926:	f003 020c 	and.w	r2, r3, #12
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	685b      	ldr	r3, [r3, #4]
 800292e:	009b      	lsls	r3, r3, #2
 8002930:	429a      	cmp	r2, r3
 8002932:	d1eb      	bne.n	800290c <HAL_RCC_ClockConfig+0xf8>
 8002934:	4b27      	ldr	r3, [pc, #156]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	f003 0307 	and.w	r3, r3, #7
 800293c:	683a      	ldr	r2, [r7, #0]
 800293e:	429a      	cmp	r2, r3
 8002940:	d210      	bcs.n	8002964 <HAL_RCC_ClockConfig+0x150>
 8002942:	4b24      	ldr	r3, [pc, #144]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	f023 0207 	bic.w	r2, r3, #7
 800294a:	4922      	ldr	r1, [pc, #136]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 800294c:	683b      	ldr	r3, [r7, #0]
 800294e:	4313      	orrs	r3, r2
 8002950:	600b      	str	r3, [r1, #0]
 8002952:	4b20      	ldr	r3, [pc, #128]	; (80029d4 <HAL_RCC_ClockConfig+0x1c0>)
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	f003 0307 	and.w	r3, r3, #7
 800295a:	683a      	ldr	r2, [r7, #0]
 800295c:	429a      	cmp	r2, r3
 800295e:	d001      	beq.n	8002964 <HAL_RCC_ClockConfig+0x150>
 8002960:	2301      	movs	r3, #1
 8002962:	e032      	b.n	80029ca <HAL_RCC_ClockConfig+0x1b6>
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	681b      	ldr	r3, [r3, #0]
 8002968:	f003 0304 	and.w	r3, r3, #4
 800296c:	2b00      	cmp	r3, #0
 800296e:	d008      	beq.n	8002982 <HAL_RCC_ClockConfig+0x16e>
 8002970:	4b19      	ldr	r3, [pc, #100]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002972:	685b      	ldr	r3, [r3, #4]
 8002974:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	68db      	ldr	r3, [r3, #12]
 800297c:	4916      	ldr	r1, [pc, #88]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 800297e:	4313      	orrs	r3, r2
 8002980:	604b      	str	r3, [r1, #4]
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	f003 0308 	and.w	r3, r3, #8
 800298a:	2b00      	cmp	r3, #0
 800298c:	d009      	beq.n	80029a2 <HAL_RCC_ClockConfig+0x18e>
 800298e:	4b12      	ldr	r3, [pc, #72]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 8002990:	685b      	ldr	r3, [r3, #4]
 8002992:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	691b      	ldr	r3, [r3, #16]
 800299a:	00db      	lsls	r3, r3, #3
 800299c:	490e      	ldr	r1, [pc, #56]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 800299e:	4313      	orrs	r3, r2
 80029a0:	604b      	str	r3, [r1, #4]
 80029a2:	f000 f821 	bl	80029e8 <HAL_RCC_GetSysClockFreq>
 80029a6:	4602      	mov	r2, r0
 80029a8:	4b0b      	ldr	r3, [pc, #44]	; (80029d8 <HAL_RCC_ClockConfig+0x1c4>)
 80029aa:	685b      	ldr	r3, [r3, #4]
 80029ac:	091b      	lsrs	r3, r3, #4
 80029ae:	f003 030f 	and.w	r3, r3, #15
 80029b2:	490a      	ldr	r1, [pc, #40]	; (80029dc <HAL_RCC_ClockConfig+0x1c8>)
 80029b4:	5ccb      	ldrb	r3, [r1, r3]
 80029b6:	fa22 f303 	lsr.w	r3, r2, r3
 80029ba:	4a09      	ldr	r2, [pc, #36]	; (80029e0 <HAL_RCC_ClockConfig+0x1cc>)
 80029bc:	6013      	str	r3, [r2, #0]
 80029be:	4b09      	ldr	r3, [pc, #36]	; (80029e4 <HAL_RCC_ClockConfig+0x1d0>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	4618      	mov	r0, r3
 80029c4:	f7ff f8c6 	bl	8001b54 <HAL_InitTick>
 80029c8:	2300      	movs	r3, #0
 80029ca:	4618      	mov	r0, r3
 80029cc:	3710      	adds	r7, #16
 80029ce:	46bd      	mov	sp, r7
 80029d0:	bd80      	pop	{r7, pc}
 80029d2:	bf00      	nop
 80029d4:	40022000 	.word	0x40022000
 80029d8:	40021000 	.word	0x40021000
 80029dc:	08004d5c 	.word	0x08004d5c
 80029e0:	20000024 	.word	0x20000024
 80029e4:	20000028 	.word	0x20000028

080029e8 <HAL_RCC_GetSysClockFreq>:
 80029e8:	b490      	push	{r4, r7}
 80029ea:	b08a      	sub	sp, #40	; 0x28
 80029ec:	af00      	add	r7, sp, #0
 80029ee:	4b2a      	ldr	r3, [pc, #168]	; (8002a98 <HAL_RCC_GetSysClockFreq+0xb0>)
 80029f0:	1d3c      	adds	r4, r7, #4
 80029f2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80029f4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80029f8:	f240 2301 	movw	r3, #513	; 0x201
 80029fc:	803b      	strh	r3, [r7, #0]
 80029fe:	2300      	movs	r3, #0
 8002a00:	61fb      	str	r3, [r7, #28]
 8002a02:	2300      	movs	r3, #0
 8002a04:	61bb      	str	r3, [r7, #24]
 8002a06:	2300      	movs	r3, #0
 8002a08:	627b      	str	r3, [r7, #36]	; 0x24
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	617b      	str	r3, [r7, #20]
 8002a0e:	2300      	movs	r3, #0
 8002a10:	623b      	str	r3, [r7, #32]
 8002a12:	4b22      	ldr	r3, [pc, #136]	; (8002a9c <HAL_RCC_GetSysClockFreq+0xb4>)
 8002a14:	685b      	ldr	r3, [r3, #4]
 8002a16:	61fb      	str	r3, [r7, #28]
 8002a18:	69fb      	ldr	r3, [r7, #28]
 8002a1a:	f003 030c 	and.w	r3, r3, #12
 8002a1e:	2b04      	cmp	r3, #4
 8002a20:	d002      	beq.n	8002a28 <HAL_RCC_GetSysClockFreq+0x40>
 8002a22:	2b08      	cmp	r3, #8
 8002a24:	d003      	beq.n	8002a2e <HAL_RCC_GetSysClockFreq+0x46>
 8002a26:	e02d      	b.n	8002a84 <HAL_RCC_GetSysClockFreq+0x9c>
 8002a28:	4b1d      	ldr	r3, [pc, #116]	; (8002aa0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002a2a:	623b      	str	r3, [r7, #32]
 8002a2c:	e02d      	b.n	8002a8a <HAL_RCC_GetSysClockFreq+0xa2>
 8002a2e:	69fb      	ldr	r3, [r7, #28]
 8002a30:	0c9b      	lsrs	r3, r3, #18
 8002a32:	f003 030f 	and.w	r3, r3, #15
 8002a36:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002a3a:	4413      	add	r3, r2
 8002a3c:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002a40:	617b      	str	r3, [r7, #20]
 8002a42:	69fb      	ldr	r3, [r7, #28]
 8002a44:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d013      	beq.n	8002a74 <HAL_RCC_GetSysClockFreq+0x8c>
 8002a4c:	4b13      	ldr	r3, [pc, #76]	; (8002a9c <HAL_RCC_GetSysClockFreq+0xb4>)
 8002a4e:	685b      	ldr	r3, [r3, #4]
 8002a50:	0c5b      	lsrs	r3, r3, #17
 8002a52:	f003 0301 	and.w	r3, r3, #1
 8002a56:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002a5a:	4413      	add	r3, r2
 8002a5c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002a60:	61bb      	str	r3, [r7, #24]
 8002a62:	697b      	ldr	r3, [r7, #20]
 8002a64:	4a0e      	ldr	r2, [pc, #56]	; (8002aa0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002a66:	fb02 f203 	mul.w	r2, r2, r3
 8002a6a:	69bb      	ldr	r3, [r7, #24]
 8002a6c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a70:	627b      	str	r3, [r7, #36]	; 0x24
 8002a72:	e004      	b.n	8002a7e <HAL_RCC_GetSysClockFreq+0x96>
 8002a74:	697b      	ldr	r3, [r7, #20]
 8002a76:	4a0b      	ldr	r2, [pc, #44]	; (8002aa4 <HAL_RCC_GetSysClockFreq+0xbc>)
 8002a78:	fb02 f303 	mul.w	r3, r2, r3
 8002a7c:	627b      	str	r3, [r7, #36]	; 0x24
 8002a7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002a80:	623b      	str	r3, [r7, #32]
 8002a82:	e002      	b.n	8002a8a <HAL_RCC_GetSysClockFreq+0xa2>
 8002a84:	4b06      	ldr	r3, [pc, #24]	; (8002aa0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002a86:	623b      	str	r3, [r7, #32]
 8002a88:	bf00      	nop
 8002a8a:	6a3b      	ldr	r3, [r7, #32]
 8002a8c:	4618      	mov	r0, r3
 8002a8e:	3728      	adds	r7, #40	; 0x28
 8002a90:	46bd      	mov	sp, r7
 8002a92:	bc90      	pop	{r4, r7}
 8002a94:	4770      	bx	lr
 8002a96:	bf00      	nop
 8002a98:	08004d4c 	.word	0x08004d4c
 8002a9c:	40021000 	.word	0x40021000
 8002aa0:	007a1200 	.word	0x007a1200
 8002aa4:	003d0900 	.word	0x003d0900

08002aa8 <HAL_RCC_GetHCLKFreq>:
 8002aa8:	b480      	push	{r7}
 8002aaa:	af00      	add	r7, sp, #0
 8002aac:	4b02      	ldr	r3, [pc, #8]	; (8002ab8 <HAL_RCC_GetHCLKFreq+0x10>)
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	4618      	mov	r0, r3
 8002ab2:	46bd      	mov	sp, r7
 8002ab4:	bc80      	pop	{r7}
 8002ab6:	4770      	bx	lr
 8002ab8:	20000024 	.word	0x20000024

08002abc <HAL_RCC_GetPCLK1Freq>:
 8002abc:	b580      	push	{r7, lr}
 8002abe:	af00      	add	r7, sp, #0
 8002ac0:	f7ff fff2 	bl	8002aa8 <HAL_RCC_GetHCLKFreq>
 8002ac4:	4602      	mov	r2, r0
 8002ac6:	4b05      	ldr	r3, [pc, #20]	; (8002adc <HAL_RCC_GetPCLK1Freq+0x20>)
 8002ac8:	685b      	ldr	r3, [r3, #4]
 8002aca:	0a1b      	lsrs	r3, r3, #8
 8002acc:	f003 0307 	and.w	r3, r3, #7
 8002ad0:	4903      	ldr	r1, [pc, #12]	; (8002ae0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002ad2:	5ccb      	ldrb	r3, [r1, r3]
 8002ad4:	fa22 f303 	lsr.w	r3, r2, r3
 8002ad8:	4618      	mov	r0, r3
 8002ada:	bd80      	pop	{r7, pc}
 8002adc:	40021000 	.word	0x40021000
 8002ae0:	08004d6c 	.word	0x08004d6c

08002ae4 <HAL_RCC_GetPCLK2Freq>:
 8002ae4:	b580      	push	{r7, lr}
 8002ae6:	af00      	add	r7, sp, #0
 8002ae8:	f7ff ffde 	bl	8002aa8 <HAL_RCC_GetHCLKFreq>
 8002aec:	4602      	mov	r2, r0
 8002aee:	4b05      	ldr	r3, [pc, #20]	; (8002b04 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002af0:	685b      	ldr	r3, [r3, #4]
 8002af2:	0adb      	lsrs	r3, r3, #11
 8002af4:	f003 0307 	and.w	r3, r3, #7
 8002af8:	4903      	ldr	r1, [pc, #12]	; (8002b08 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002afa:	5ccb      	ldrb	r3, [r1, r3]
 8002afc:	fa22 f303 	lsr.w	r3, r2, r3
 8002b00:	4618      	mov	r0, r3
 8002b02:	bd80      	pop	{r7, pc}
 8002b04:	40021000 	.word	0x40021000
 8002b08:	08004d6c 	.word	0x08004d6c

08002b0c <RCC_Delay>:
 8002b0c:	b480      	push	{r7}
 8002b0e:	b085      	sub	sp, #20
 8002b10:	af00      	add	r7, sp, #0
 8002b12:	6078      	str	r0, [r7, #4]
 8002b14:	4b0a      	ldr	r3, [pc, #40]	; (8002b40 <RCC_Delay+0x34>)
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	4a0a      	ldr	r2, [pc, #40]	; (8002b44 <RCC_Delay+0x38>)
 8002b1a:	fba2 2303 	umull	r2, r3, r2, r3
 8002b1e:	0a5b      	lsrs	r3, r3, #9
 8002b20:	687a      	ldr	r2, [r7, #4]
 8002b22:	fb02 f303 	mul.w	r3, r2, r3
 8002b26:	60fb      	str	r3, [r7, #12]
 8002b28:	bf00      	nop
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	1e5a      	subs	r2, r3, #1
 8002b2e:	60fa      	str	r2, [r7, #12]
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d1f9      	bne.n	8002b28 <RCC_Delay+0x1c>
 8002b34:	bf00      	nop
 8002b36:	bf00      	nop
 8002b38:	3714      	adds	r7, #20
 8002b3a:	46bd      	mov	sp, r7
 8002b3c:	bc80      	pop	{r7}
 8002b3e:	4770      	bx	lr
 8002b40:	20000024 	.word	0x20000024
 8002b44:	10624dd3 	.word	0x10624dd3

08002b48 <HAL_TIM_Base_Init>:
 8002b48:	b580      	push	{r7, lr}
 8002b4a:	b082      	sub	sp, #8
 8002b4c:	af00      	add	r7, sp, #0
 8002b4e:	6078      	str	r0, [r7, #4]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d101      	bne.n	8002b5a <HAL_TIM_Base_Init+0x12>
 8002b56:	2301      	movs	r3, #1
 8002b58:	e041      	b.n	8002bde <HAL_TIM_Base_Init+0x96>
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b60:	b2db      	uxtb	r3, r3
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d106      	bne.n	8002b74 <HAL_TIM_Base_Init+0x2c>
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	2200      	movs	r2, #0
 8002b6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b6e:	6878      	ldr	r0, [r7, #4]
 8002b70:	f7fe fc12 	bl	8001398 <HAL_TIM_Base_MspInit>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	2202      	movs	r2, #2
 8002b78:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681a      	ldr	r2, [r3, #0]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	3304      	adds	r3, #4
 8002b84:	4619      	mov	r1, r3
 8002b86:	4610      	mov	r0, r2
 8002b88:	f000 fc28 	bl	80033dc <TIM_Base_SetConfig>
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	2201      	movs	r2, #1
 8002b90:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	2201      	movs	r2, #1
 8002b98:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	2201      	movs	r2, #1
 8002ba0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	2201      	movs	r2, #1
 8002ba8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	2201      	movs	r2, #1
 8002bb0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	2201      	movs	r2, #1
 8002bb8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	2201      	movs	r2, #1
 8002bc0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	2201      	movs	r2, #1
 8002bc8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	2201      	movs	r2, #1
 8002bd0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	2201      	movs	r2, #1
 8002bd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bdc:	2300      	movs	r3, #0
 8002bde:	4618      	mov	r0, r3
 8002be0:	3708      	adds	r7, #8
 8002be2:	46bd      	mov	sp, r7
 8002be4:	bd80      	pop	{r7, pc}
	...

08002be8 <HAL_TIM_Base_Start_IT>:
 8002be8:	b480      	push	{r7}
 8002bea:	b085      	sub	sp, #20
 8002bec:	af00      	add	r7, sp, #0
 8002bee:	6078      	str	r0, [r7, #4]
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002bf6:	b2db      	uxtb	r3, r3
 8002bf8:	2b01      	cmp	r3, #1
 8002bfa:	d001      	beq.n	8002c00 <HAL_TIM_Base_Start_IT+0x18>
 8002bfc:	2301      	movs	r3, #1
 8002bfe:	e03a      	b.n	8002c76 <HAL_TIM_Base_Start_IT+0x8e>
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	2202      	movs	r2, #2
 8002c04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	68da      	ldr	r2, [r3, #12]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	f042 0201 	orr.w	r2, r2, #1
 8002c16:	60da      	str	r2, [r3, #12]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4a18      	ldr	r2, [pc, #96]	; (8002c80 <HAL_TIM_Base_Start_IT+0x98>)
 8002c1e:	4293      	cmp	r3, r2
 8002c20:	d00e      	beq.n	8002c40 <HAL_TIM_Base_Start_IT+0x58>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c2a:	d009      	beq.n	8002c40 <HAL_TIM_Base_Start_IT+0x58>
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	4a14      	ldr	r2, [pc, #80]	; (8002c84 <HAL_TIM_Base_Start_IT+0x9c>)
 8002c32:	4293      	cmp	r3, r2
 8002c34:	d004      	beq.n	8002c40 <HAL_TIM_Base_Start_IT+0x58>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	4a13      	ldr	r2, [pc, #76]	; (8002c88 <HAL_TIM_Base_Start_IT+0xa0>)
 8002c3c:	4293      	cmp	r3, r2
 8002c3e:	d111      	bne.n	8002c64 <HAL_TIM_Base_Start_IT+0x7c>
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	689b      	ldr	r3, [r3, #8]
 8002c46:	f003 0307 	and.w	r3, r3, #7
 8002c4a:	60fb      	str	r3, [r7, #12]
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	2b06      	cmp	r3, #6
 8002c50:	d010      	beq.n	8002c74 <HAL_TIM_Base_Start_IT+0x8c>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	681a      	ldr	r2, [r3, #0]
 8002c58:	687b      	ldr	r3, [r7, #4]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	f042 0201 	orr.w	r2, r2, #1
 8002c60:	601a      	str	r2, [r3, #0]
 8002c62:	e007      	b.n	8002c74 <HAL_TIM_Base_Start_IT+0x8c>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	681a      	ldr	r2, [r3, #0]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	f042 0201 	orr.w	r2, r2, #1
 8002c72:	601a      	str	r2, [r3, #0]
 8002c74:	2300      	movs	r3, #0
 8002c76:	4618      	mov	r0, r3
 8002c78:	3714      	adds	r7, #20
 8002c7a:	46bd      	mov	sp, r7
 8002c7c:	bc80      	pop	{r7}
 8002c7e:	4770      	bx	lr
 8002c80:	40012c00 	.word	0x40012c00
 8002c84:	40000400 	.word	0x40000400
 8002c88:	40000800 	.word	0x40000800

08002c8c <HAL_TIM_PWM_Init>:
 8002c8c:	b580      	push	{r7, lr}
 8002c8e:	b082      	sub	sp, #8
 8002c90:	af00      	add	r7, sp, #0
 8002c92:	6078      	str	r0, [r7, #4]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	2b00      	cmp	r3, #0
 8002c98:	d101      	bne.n	8002c9e <HAL_TIM_PWM_Init+0x12>
 8002c9a:	2301      	movs	r3, #1
 8002c9c:	e041      	b.n	8002d22 <HAL_TIM_PWM_Init+0x96>
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002ca4:	b2db      	uxtb	r3, r3
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d106      	bne.n	8002cb8 <HAL_TIM_PWM_Init+0x2c>
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	2200      	movs	r2, #0
 8002cae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002cb2:	6878      	ldr	r0, [r7, #4]
 8002cb4:	f000 f839 	bl	8002d2a <HAL_TIM_PWM_MspInit>
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2202      	movs	r2, #2
 8002cbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	681a      	ldr	r2, [r3, #0]
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	3304      	adds	r3, #4
 8002cc8:	4619      	mov	r1, r3
 8002cca:	4610      	mov	r0, r2
 8002ccc:	f000 fb86 	bl	80033dc <TIM_Base_SetConfig>
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	2201      	movs	r2, #1
 8002cd4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	2201      	movs	r2, #1
 8002cdc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	2201      	movs	r2, #1
 8002ce4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	2201      	movs	r2, #1
 8002cec:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	2201      	movs	r2, #1
 8002cf4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	2201      	movs	r2, #1
 8002cfc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	2201      	movs	r2, #1
 8002d04:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	2201      	movs	r2, #1
 8002d0c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	2201      	movs	r2, #1
 8002d14:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	2201      	movs	r2, #1
 8002d1c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d20:	2300      	movs	r3, #0
 8002d22:	4618      	mov	r0, r3
 8002d24:	3708      	adds	r7, #8
 8002d26:	46bd      	mov	sp, r7
 8002d28:	bd80      	pop	{r7, pc}

08002d2a <HAL_TIM_PWM_MspInit>:
 8002d2a:	b480      	push	{r7}
 8002d2c:	b083      	sub	sp, #12
 8002d2e:	af00      	add	r7, sp, #0
 8002d30:	6078      	str	r0, [r7, #4]
 8002d32:	bf00      	nop
 8002d34:	370c      	adds	r7, #12
 8002d36:	46bd      	mov	sp, r7
 8002d38:	bc80      	pop	{r7}
 8002d3a:	4770      	bx	lr

08002d3c <HAL_TIM_PWM_Start>:
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	b084      	sub	sp, #16
 8002d40:	af00      	add	r7, sp, #0
 8002d42:	6078      	str	r0, [r7, #4]
 8002d44:	6039      	str	r1, [r7, #0]
 8002d46:	683b      	ldr	r3, [r7, #0]
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d109      	bne.n	8002d60 <HAL_TIM_PWM_Start+0x24>
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8002d52:	b2db      	uxtb	r3, r3
 8002d54:	2b01      	cmp	r3, #1
 8002d56:	bf14      	ite	ne
 8002d58:	2301      	movne	r3, #1
 8002d5a:	2300      	moveq	r3, #0
 8002d5c:	b2db      	uxtb	r3, r3
 8002d5e:	e022      	b.n	8002da6 <HAL_TIM_PWM_Start+0x6a>
 8002d60:	683b      	ldr	r3, [r7, #0]
 8002d62:	2b04      	cmp	r3, #4
 8002d64:	d109      	bne.n	8002d7a <HAL_TIM_PWM_Start+0x3e>
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8002d6c:	b2db      	uxtb	r3, r3
 8002d6e:	2b01      	cmp	r3, #1
 8002d70:	bf14      	ite	ne
 8002d72:	2301      	movne	r3, #1
 8002d74:	2300      	moveq	r3, #0
 8002d76:	b2db      	uxtb	r3, r3
 8002d78:	e015      	b.n	8002da6 <HAL_TIM_PWM_Start+0x6a>
 8002d7a:	683b      	ldr	r3, [r7, #0]
 8002d7c:	2b08      	cmp	r3, #8
 8002d7e:	d109      	bne.n	8002d94 <HAL_TIM_PWM_Start+0x58>
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002d86:	b2db      	uxtb	r3, r3
 8002d88:	2b01      	cmp	r3, #1
 8002d8a:	bf14      	ite	ne
 8002d8c:	2301      	movne	r3, #1
 8002d8e:	2300      	moveq	r3, #0
 8002d90:	b2db      	uxtb	r3, r3
 8002d92:	e008      	b.n	8002da6 <HAL_TIM_PWM_Start+0x6a>
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002d9a:	b2db      	uxtb	r3, r3
 8002d9c:	2b01      	cmp	r3, #1
 8002d9e:	bf14      	ite	ne
 8002da0:	2301      	movne	r3, #1
 8002da2:	2300      	moveq	r3, #0
 8002da4:	b2db      	uxtb	r3, r3
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d001      	beq.n	8002dae <HAL_TIM_PWM_Start+0x72>
 8002daa:	2301      	movs	r3, #1
 8002dac:	e05e      	b.n	8002e6c <HAL_TIM_PWM_Start+0x130>
 8002dae:	683b      	ldr	r3, [r7, #0]
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d104      	bne.n	8002dbe <HAL_TIM_PWM_Start+0x82>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	2202      	movs	r2, #2
 8002db8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002dbc:	e013      	b.n	8002de6 <HAL_TIM_PWM_Start+0xaa>
 8002dbe:	683b      	ldr	r3, [r7, #0]
 8002dc0:	2b04      	cmp	r3, #4
 8002dc2:	d104      	bne.n	8002dce <HAL_TIM_PWM_Start+0x92>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	2202      	movs	r2, #2
 8002dc8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002dcc:	e00b      	b.n	8002de6 <HAL_TIM_PWM_Start+0xaa>
 8002dce:	683b      	ldr	r3, [r7, #0]
 8002dd0:	2b08      	cmp	r3, #8
 8002dd2:	d104      	bne.n	8002dde <HAL_TIM_PWM_Start+0xa2>
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	2202      	movs	r2, #2
 8002dd8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002ddc:	e003      	b.n	8002de6 <HAL_TIM_PWM_Start+0xaa>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	2202      	movs	r2, #2
 8002de2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	2201      	movs	r2, #1
 8002dec:	6839      	ldr	r1, [r7, #0]
 8002dee:	4618      	mov	r0, r3
 8002df0:	f000 fd74 	bl	80038dc <TIM_CCxChannelCmd>
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	4a1e      	ldr	r2, [pc, #120]	; (8002e74 <HAL_TIM_PWM_Start+0x138>)
 8002dfa:	4293      	cmp	r3, r2
 8002dfc:	d107      	bne.n	8002e0e <HAL_TIM_PWM_Start+0xd2>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002e0c:	645a      	str	r2, [r3, #68]	; 0x44
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	4a18      	ldr	r2, [pc, #96]	; (8002e74 <HAL_TIM_PWM_Start+0x138>)
 8002e14:	4293      	cmp	r3, r2
 8002e16:	d00e      	beq.n	8002e36 <HAL_TIM_PWM_Start+0xfa>
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002e20:	d009      	beq.n	8002e36 <HAL_TIM_PWM_Start+0xfa>
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	4a14      	ldr	r2, [pc, #80]	; (8002e78 <HAL_TIM_PWM_Start+0x13c>)
 8002e28:	4293      	cmp	r3, r2
 8002e2a:	d004      	beq.n	8002e36 <HAL_TIM_PWM_Start+0xfa>
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	4a12      	ldr	r2, [pc, #72]	; (8002e7c <HAL_TIM_PWM_Start+0x140>)
 8002e32:	4293      	cmp	r3, r2
 8002e34:	d111      	bne.n	8002e5a <HAL_TIM_PWM_Start+0x11e>
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	689b      	ldr	r3, [r3, #8]
 8002e3c:	f003 0307 	and.w	r3, r3, #7
 8002e40:	60fb      	str	r3, [r7, #12]
 8002e42:	68fb      	ldr	r3, [r7, #12]
 8002e44:	2b06      	cmp	r3, #6
 8002e46:	d010      	beq.n	8002e6a <HAL_TIM_PWM_Start+0x12e>
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	681a      	ldr	r2, [r3, #0]
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	f042 0201 	orr.w	r2, r2, #1
 8002e56:	601a      	str	r2, [r3, #0]
 8002e58:	e007      	b.n	8002e6a <HAL_TIM_PWM_Start+0x12e>
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	681a      	ldr	r2, [r3, #0]
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	f042 0201 	orr.w	r2, r2, #1
 8002e68:	601a      	str	r2, [r3, #0]
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	4618      	mov	r0, r3
 8002e6e:	3710      	adds	r7, #16
 8002e70:	46bd      	mov	sp, r7
 8002e72:	bd80      	pop	{r7, pc}
 8002e74:	40012c00 	.word	0x40012c00
 8002e78:	40000400 	.word	0x40000400
 8002e7c:	40000800 	.word	0x40000800

08002e80 <HAL_TIM_IRQHandler>:
 8002e80:	b580      	push	{r7, lr}
 8002e82:	b082      	sub	sp, #8
 8002e84:	af00      	add	r7, sp, #0
 8002e86:	6078      	str	r0, [r7, #4]
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	691b      	ldr	r3, [r3, #16]
 8002e8e:	f003 0302 	and.w	r3, r3, #2
 8002e92:	2b02      	cmp	r3, #2
 8002e94:	d122      	bne.n	8002edc <HAL_TIM_IRQHandler+0x5c>
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	68db      	ldr	r3, [r3, #12]
 8002e9c:	f003 0302 	and.w	r3, r3, #2
 8002ea0:	2b02      	cmp	r3, #2
 8002ea2:	d11b      	bne.n	8002edc <HAL_TIM_IRQHandler+0x5c>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	f06f 0202 	mvn.w	r2, #2
 8002eac:	611a      	str	r2, [r3, #16]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	2201      	movs	r2, #1
 8002eb2:	771a      	strb	r2, [r3, #28]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	699b      	ldr	r3, [r3, #24]
 8002eba:	f003 0303 	and.w	r3, r3, #3
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d003      	beq.n	8002eca <HAL_TIM_IRQHandler+0x4a>
 8002ec2:	6878      	ldr	r0, [r7, #4]
 8002ec4:	f000 fa6f 	bl	80033a6 <HAL_TIM_IC_CaptureCallback>
 8002ec8:	e005      	b.n	8002ed6 <HAL_TIM_IRQHandler+0x56>
 8002eca:	6878      	ldr	r0, [r7, #4]
 8002ecc:	f000 fa62 	bl	8003394 <HAL_TIM_OC_DelayElapsedCallback>
 8002ed0:	6878      	ldr	r0, [r7, #4]
 8002ed2:	f000 fa71 	bl	80033b8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	2200      	movs	r2, #0
 8002eda:	771a      	strb	r2, [r3, #28]
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	691b      	ldr	r3, [r3, #16]
 8002ee2:	f003 0304 	and.w	r3, r3, #4
 8002ee6:	2b04      	cmp	r3, #4
 8002ee8:	d122      	bne.n	8002f30 <HAL_TIM_IRQHandler+0xb0>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	68db      	ldr	r3, [r3, #12]
 8002ef0:	f003 0304 	and.w	r3, r3, #4
 8002ef4:	2b04      	cmp	r3, #4
 8002ef6:	d11b      	bne.n	8002f30 <HAL_TIM_IRQHandler+0xb0>
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	f06f 0204 	mvn.w	r2, #4
 8002f00:	611a      	str	r2, [r3, #16]
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	2202      	movs	r2, #2
 8002f06:	771a      	strb	r2, [r3, #28]
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	699b      	ldr	r3, [r3, #24]
 8002f0e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d003      	beq.n	8002f1e <HAL_TIM_IRQHandler+0x9e>
 8002f16:	6878      	ldr	r0, [r7, #4]
 8002f18:	f000 fa45 	bl	80033a6 <HAL_TIM_IC_CaptureCallback>
 8002f1c:	e005      	b.n	8002f2a <HAL_TIM_IRQHandler+0xaa>
 8002f1e:	6878      	ldr	r0, [r7, #4]
 8002f20:	f000 fa38 	bl	8003394 <HAL_TIM_OC_DelayElapsedCallback>
 8002f24:	6878      	ldr	r0, [r7, #4]
 8002f26:	f000 fa47 	bl	80033b8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	2200      	movs	r2, #0
 8002f2e:	771a      	strb	r2, [r3, #28]
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	691b      	ldr	r3, [r3, #16]
 8002f36:	f003 0308 	and.w	r3, r3, #8
 8002f3a:	2b08      	cmp	r3, #8
 8002f3c:	d122      	bne.n	8002f84 <HAL_TIM_IRQHandler+0x104>
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	68db      	ldr	r3, [r3, #12]
 8002f44:	f003 0308 	and.w	r3, r3, #8
 8002f48:	2b08      	cmp	r3, #8
 8002f4a:	d11b      	bne.n	8002f84 <HAL_TIM_IRQHandler+0x104>
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	681b      	ldr	r3, [r3, #0]
 8002f50:	f06f 0208 	mvn.w	r2, #8
 8002f54:	611a      	str	r2, [r3, #16]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	2204      	movs	r2, #4
 8002f5a:	771a      	strb	r2, [r3, #28]
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	69db      	ldr	r3, [r3, #28]
 8002f62:	f003 0303 	and.w	r3, r3, #3
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d003      	beq.n	8002f72 <HAL_TIM_IRQHandler+0xf2>
 8002f6a:	6878      	ldr	r0, [r7, #4]
 8002f6c:	f000 fa1b 	bl	80033a6 <HAL_TIM_IC_CaptureCallback>
 8002f70:	e005      	b.n	8002f7e <HAL_TIM_IRQHandler+0xfe>
 8002f72:	6878      	ldr	r0, [r7, #4]
 8002f74:	f000 fa0e 	bl	8003394 <HAL_TIM_OC_DelayElapsedCallback>
 8002f78:	6878      	ldr	r0, [r7, #4]
 8002f7a:	f000 fa1d 	bl	80033b8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	2200      	movs	r2, #0
 8002f82:	771a      	strb	r2, [r3, #28]
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	691b      	ldr	r3, [r3, #16]
 8002f8a:	f003 0310 	and.w	r3, r3, #16
 8002f8e:	2b10      	cmp	r3, #16
 8002f90:	d122      	bne.n	8002fd8 <HAL_TIM_IRQHandler+0x158>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	68db      	ldr	r3, [r3, #12]
 8002f98:	f003 0310 	and.w	r3, r3, #16
 8002f9c:	2b10      	cmp	r3, #16
 8002f9e:	d11b      	bne.n	8002fd8 <HAL_TIM_IRQHandler+0x158>
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	f06f 0210 	mvn.w	r2, #16
 8002fa8:	611a      	str	r2, [r3, #16]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	2208      	movs	r2, #8
 8002fae:	771a      	strb	r2, [r3, #28]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	69db      	ldr	r3, [r3, #28]
 8002fb6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d003      	beq.n	8002fc6 <HAL_TIM_IRQHandler+0x146>
 8002fbe:	6878      	ldr	r0, [r7, #4]
 8002fc0:	f000 f9f1 	bl	80033a6 <HAL_TIM_IC_CaptureCallback>
 8002fc4:	e005      	b.n	8002fd2 <HAL_TIM_IRQHandler+0x152>
 8002fc6:	6878      	ldr	r0, [r7, #4]
 8002fc8:	f000 f9e4 	bl	8003394 <HAL_TIM_OC_DelayElapsedCallback>
 8002fcc:	6878      	ldr	r0, [r7, #4]
 8002fce:	f000 f9f3 	bl	80033b8 <HAL_TIM_PWM_PulseFinishedCallback>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	771a      	strb	r2, [r3, #28]
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	691b      	ldr	r3, [r3, #16]
 8002fde:	f003 0301 	and.w	r3, r3, #1
 8002fe2:	2b01      	cmp	r3, #1
 8002fe4:	d10e      	bne.n	8003004 <HAL_TIM_IRQHandler+0x184>
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	68db      	ldr	r3, [r3, #12]
 8002fec:	f003 0301 	and.w	r3, r3, #1
 8002ff0:	2b01      	cmp	r3, #1
 8002ff2:	d107      	bne.n	8003004 <HAL_TIM_IRQHandler+0x184>
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	f06f 0201 	mvn.w	r2, #1
 8002ffc:	611a      	str	r2, [r3, #16]
 8002ffe:	6878      	ldr	r0, [r7, #4]
 8003000:	f7fe f986 	bl	8001310 <HAL_TIM_PeriodElapsedCallback>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	691b      	ldr	r3, [r3, #16]
 800300a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800300e:	2b80      	cmp	r3, #128	; 0x80
 8003010:	d10e      	bne.n	8003030 <HAL_TIM_IRQHandler+0x1b0>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	68db      	ldr	r3, [r3, #12]
 8003018:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800301c:	2b80      	cmp	r3, #128	; 0x80
 800301e:	d107      	bne.n	8003030 <HAL_TIM_IRQHandler+0x1b0>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	681b      	ldr	r3, [r3, #0]
 8003024:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003028:	611a      	str	r2, [r3, #16]
 800302a:	6878      	ldr	r0, [r7, #4]
 800302c:	f000 fce1 	bl	80039f2 <HAL_TIMEx_BreakCallback>
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	691b      	ldr	r3, [r3, #16]
 8003036:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800303a:	2b40      	cmp	r3, #64	; 0x40
 800303c:	d10e      	bne.n	800305c <HAL_TIM_IRQHandler+0x1dc>
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	68db      	ldr	r3, [r3, #12]
 8003044:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003048:	2b40      	cmp	r3, #64	; 0x40
 800304a:	d107      	bne.n	800305c <HAL_TIM_IRQHandler+0x1dc>
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003054:	611a      	str	r2, [r3, #16]
 8003056:	6878      	ldr	r0, [r7, #4]
 8003058:	f000 f9b7 	bl	80033ca <HAL_TIM_TriggerCallback>
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	691b      	ldr	r3, [r3, #16]
 8003062:	f003 0320 	and.w	r3, r3, #32
 8003066:	2b20      	cmp	r3, #32
 8003068:	d10e      	bne.n	8003088 <HAL_TIM_IRQHandler+0x208>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	68db      	ldr	r3, [r3, #12]
 8003070:	f003 0320 	and.w	r3, r3, #32
 8003074:	2b20      	cmp	r3, #32
 8003076:	d107      	bne.n	8003088 <HAL_TIM_IRQHandler+0x208>
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	f06f 0220 	mvn.w	r2, #32
 8003080:	611a      	str	r2, [r3, #16]
 8003082:	6878      	ldr	r0, [r7, #4]
 8003084:	f000 fcac 	bl	80039e0 <HAL_TIMEx_CommutCallback>
 8003088:	bf00      	nop
 800308a:	3708      	adds	r7, #8
 800308c:	46bd      	mov	sp, r7
 800308e:	bd80      	pop	{r7, pc}

08003090 <HAL_TIM_PWM_ConfigChannel>:
 8003090:	b580      	push	{r7, lr}
 8003092:	b084      	sub	sp, #16
 8003094:	af00      	add	r7, sp, #0
 8003096:	60f8      	str	r0, [r7, #12]
 8003098:	60b9      	str	r1, [r7, #8]
 800309a:	607a      	str	r2, [r7, #4]
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80030a2:	2b01      	cmp	r3, #1
 80030a4:	d101      	bne.n	80030aa <HAL_TIM_PWM_ConfigChannel+0x1a>
 80030a6:	2302      	movs	r3, #2
 80030a8:	e0ac      	b.n	8003204 <HAL_TIM_PWM_ConfigChannel+0x174>
 80030aa:	68fb      	ldr	r3, [r7, #12]
 80030ac:	2201      	movs	r2, #1
 80030ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	2b0c      	cmp	r3, #12
 80030b6:	f200 809f 	bhi.w	80031f8 <HAL_TIM_PWM_ConfigChannel+0x168>
 80030ba:	a201      	add	r2, pc, #4	; (adr r2, 80030c0 <HAL_TIM_PWM_ConfigChannel+0x30>)
 80030bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80030c0:	080030f5 	.word	0x080030f5
 80030c4:	080031f9 	.word	0x080031f9
 80030c8:	080031f9 	.word	0x080031f9
 80030cc:	080031f9 	.word	0x080031f9
 80030d0:	08003135 	.word	0x08003135
 80030d4:	080031f9 	.word	0x080031f9
 80030d8:	080031f9 	.word	0x080031f9
 80030dc:	080031f9 	.word	0x080031f9
 80030e0:	08003177 	.word	0x08003177
 80030e4:	080031f9 	.word	0x080031f9
 80030e8:	080031f9 	.word	0x080031f9
 80030ec:	080031f9 	.word	0x080031f9
 80030f0:	080031b7 	.word	0x080031b7
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	68b9      	ldr	r1, [r7, #8]
 80030fa:	4618      	mov	r0, r3
 80030fc:	f000 f9d0 	bl	80034a0 <TIM_OC1_SetConfig>
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	699a      	ldr	r2, [r3, #24]
 8003106:	68fb      	ldr	r3, [r7, #12]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	f042 0208 	orr.w	r2, r2, #8
 800310e:	619a      	str	r2, [r3, #24]
 8003110:	68fb      	ldr	r3, [r7, #12]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	699a      	ldr	r2, [r3, #24]
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	f022 0204 	bic.w	r2, r2, #4
 800311e:	619a      	str	r2, [r3, #24]
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	6999      	ldr	r1, [r3, #24]
 8003126:	68bb      	ldr	r3, [r7, #8]
 8003128:	691a      	ldr	r2, [r3, #16]
 800312a:	68fb      	ldr	r3, [r7, #12]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	430a      	orrs	r2, r1
 8003130:	619a      	str	r2, [r3, #24]
 8003132:	e062      	b.n	80031fa <HAL_TIM_PWM_ConfigChannel+0x16a>
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	68b9      	ldr	r1, [r7, #8]
 800313a:	4618      	mov	r0, r3
 800313c:	f000 fa16 	bl	800356c <TIM_OC2_SetConfig>
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	699a      	ldr	r2, [r3, #24]
 8003146:	68fb      	ldr	r3, [r7, #12]
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800314e:	619a      	str	r2, [r3, #24]
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	699a      	ldr	r2, [r3, #24]
 8003156:	68fb      	ldr	r3, [r7, #12]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800315e:	619a      	str	r2, [r3, #24]
 8003160:	68fb      	ldr	r3, [r7, #12]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	6999      	ldr	r1, [r3, #24]
 8003166:	68bb      	ldr	r3, [r7, #8]
 8003168:	691b      	ldr	r3, [r3, #16]
 800316a:	021a      	lsls	r2, r3, #8
 800316c:	68fb      	ldr	r3, [r7, #12]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	430a      	orrs	r2, r1
 8003172:	619a      	str	r2, [r3, #24]
 8003174:	e041      	b.n	80031fa <HAL_TIM_PWM_ConfigChannel+0x16a>
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	68b9      	ldr	r1, [r7, #8]
 800317c:	4618      	mov	r0, r3
 800317e:	f000 fa5f 	bl	8003640 <TIM_OC3_SetConfig>
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	69da      	ldr	r2, [r3, #28]
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	f042 0208 	orr.w	r2, r2, #8
 8003190:	61da      	str	r2, [r3, #28]
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	69da      	ldr	r2, [r3, #28]
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	f022 0204 	bic.w	r2, r2, #4
 80031a0:	61da      	str	r2, [r3, #28]
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	69d9      	ldr	r1, [r3, #28]
 80031a8:	68bb      	ldr	r3, [r7, #8]
 80031aa:	691a      	ldr	r2, [r3, #16]
 80031ac:	68fb      	ldr	r3, [r7, #12]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	430a      	orrs	r2, r1
 80031b2:	61da      	str	r2, [r3, #28]
 80031b4:	e021      	b.n	80031fa <HAL_TIM_PWM_ConfigChannel+0x16a>
 80031b6:	68fb      	ldr	r3, [r7, #12]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	68b9      	ldr	r1, [r7, #8]
 80031bc:	4618      	mov	r0, r3
 80031be:	f000 faa9 	bl	8003714 <TIM_OC4_SetConfig>
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	69da      	ldr	r2, [r3, #28]
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80031d0:	61da      	str	r2, [r3, #28]
 80031d2:	68fb      	ldr	r3, [r7, #12]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	69da      	ldr	r2, [r3, #28]
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80031e0:	61da      	str	r2, [r3, #28]
 80031e2:	68fb      	ldr	r3, [r7, #12]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	69d9      	ldr	r1, [r3, #28]
 80031e8:	68bb      	ldr	r3, [r7, #8]
 80031ea:	691b      	ldr	r3, [r3, #16]
 80031ec:	021a      	lsls	r2, r3, #8
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	430a      	orrs	r2, r1
 80031f4:	61da      	str	r2, [r3, #28]
 80031f6:	e000      	b.n	80031fa <HAL_TIM_PWM_ConfigChannel+0x16a>
 80031f8:	bf00      	nop
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	2200      	movs	r2, #0
 80031fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003202:	2300      	movs	r3, #0
 8003204:	4618      	mov	r0, r3
 8003206:	3710      	adds	r7, #16
 8003208:	46bd      	mov	sp, r7
 800320a:	bd80      	pop	{r7, pc}

0800320c <HAL_TIM_ConfigClockSource>:
 800320c:	b580      	push	{r7, lr}
 800320e:	b084      	sub	sp, #16
 8003210:	af00      	add	r7, sp, #0
 8003212:	6078      	str	r0, [r7, #4]
 8003214:	6039      	str	r1, [r7, #0]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800321c:	2b01      	cmp	r3, #1
 800321e:	d101      	bne.n	8003224 <HAL_TIM_ConfigClockSource+0x18>
 8003220:	2302      	movs	r3, #2
 8003222:	e0b3      	b.n	800338c <HAL_TIM_ConfigClockSource+0x180>
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	2201      	movs	r2, #1
 8003228:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	2202      	movs	r2, #2
 8003230:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	689b      	ldr	r3, [r3, #8]
 800323a:	60fb      	str	r3, [r7, #12]
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003242:	60fb      	str	r3, [r7, #12]
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800324a:	60fb      	str	r3, [r7, #12]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	68fa      	ldr	r2, [r7, #12]
 8003252:	609a      	str	r2, [r3, #8]
 8003254:	683b      	ldr	r3, [r7, #0]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800325c:	d03e      	beq.n	80032dc <HAL_TIM_ConfigClockSource+0xd0>
 800325e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003262:	f200 8087 	bhi.w	8003374 <HAL_TIM_ConfigClockSource+0x168>
 8003266:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800326a:	f000 8085 	beq.w	8003378 <HAL_TIM_ConfigClockSource+0x16c>
 800326e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003272:	d87f      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 8003274:	2b70      	cmp	r3, #112	; 0x70
 8003276:	d01a      	beq.n	80032ae <HAL_TIM_ConfigClockSource+0xa2>
 8003278:	2b70      	cmp	r3, #112	; 0x70
 800327a:	d87b      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 800327c:	2b60      	cmp	r3, #96	; 0x60
 800327e:	d050      	beq.n	8003322 <HAL_TIM_ConfigClockSource+0x116>
 8003280:	2b60      	cmp	r3, #96	; 0x60
 8003282:	d877      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 8003284:	2b50      	cmp	r3, #80	; 0x50
 8003286:	d03c      	beq.n	8003302 <HAL_TIM_ConfigClockSource+0xf6>
 8003288:	2b50      	cmp	r3, #80	; 0x50
 800328a:	d873      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 800328c:	2b40      	cmp	r3, #64	; 0x40
 800328e:	d058      	beq.n	8003342 <HAL_TIM_ConfigClockSource+0x136>
 8003290:	2b40      	cmp	r3, #64	; 0x40
 8003292:	d86f      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 8003294:	2b30      	cmp	r3, #48	; 0x30
 8003296:	d064      	beq.n	8003362 <HAL_TIM_ConfigClockSource+0x156>
 8003298:	2b30      	cmp	r3, #48	; 0x30
 800329a:	d86b      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 800329c:	2b20      	cmp	r3, #32
 800329e:	d060      	beq.n	8003362 <HAL_TIM_ConfigClockSource+0x156>
 80032a0:	2b20      	cmp	r3, #32
 80032a2:	d867      	bhi.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d05c      	beq.n	8003362 <HAL_TIM_ConfigClockSource+0x156>
 80032a8:	2b10      	cmp	r3, #16
 80032aa:	d05a      	beq.n	8003362 <HAL_TIM_ConfigClockSource+0x156>
 80032ac:	e062      	b.n	8003374 <HAL_TIM_ConfigClockSource+0x168>
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	6818      	ldr	r0, [r3, #0]
 80032b2:	683b      	ldr	r3, [r7, #0]
 80032b4:	6899      	ldr	r1, [r3, #8]
 80032b6:	683b      	ldr	r3, [r7, #0]
 80032b8:	685a      	ldr	r2, [r3, #4]
 80032ba:	683b      	ldr	r3, [r7, #0]
 80032bc:	68db      	ldr	r3, [r3, #12]
 80032be:	f000 faee 	bl	800389e <TIM_ETR_SetConfig>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	689b      	ldr	r3, [r3, #8]
 80032c8:	60fb      	str	r3, [r7, #12]
 80032ca:	68fb      	ldr	r3, [r7, #12]
 80032cc:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80032d0:	60fb      	str	r3, [r7, #12]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	68fa      	ldr	r2, [r7, #12]
 80032d8:	609a      	str	r2, [r3, #8]
 80032da:	e04e      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	6818      	ldr	r0, [r3, #0]
 80032e0:	683b      	ldr	r3, [r7, #0]
 80032e2:	6899      	ldr	r1, [r3, #8]
 80032e4:	683b      	ldr	r3, [r7, #0]
 80032e6:	685a      	ldr	r2, [r3, #4]
 80032e8:	683b      	ldr	r3, [r7, #0]
 80032ea:	68db      	ldr	r3, [r3, #12]
 80032ec:	f000 fad7 	bl	800389e <TIM_ETR_SetConfig>
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	689a      	ldr	r2, [r3, #8]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80032fe:	609a      	str	r2, [r3, #8]
 8003300:	e03b      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	6818      	ldr	r0, [r3, #0]
 8003306:	683b      	ldr	r3, [r7, #0]
 8003308:	6859      	ldr	r1, [r3, #4]
 800330a:	683b      	ldr	r3, [r7, #0]
 800330c:	68db      	ldr	r3, [r3, #12]
 800330e:	461a      	mov	r2, r3
 8003310:	f000 fa4e 	bl	80037b0 <TIM_TI1_ConfigInputStage>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	2150      	movs	r1, #80	; 0x50
 800331a:	4618      	mov	r0, r3
 800331c:	f000 faa5 	bl	800386a <TIM_ITRx_SetConfig>
 8003320:	e02b      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	6818      	ldr	r0, [r3, #0]
 8003326:	683b      	ldr	r3, [r7, #0]
 8003328:	6859      	ldr	r1, [r3, #4]
 800332a:	683b      	ldr	r3, [r7, #0]
 800332c:	68db      	ldr	r3, [r3, #12]
 800332e:	461a      	mov	r2, r3
 8003330:	f000 fa6c 	bl	800380c <TIM_TI2_ConfigInputStage>
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	2160      	movs	r1, #96	; 0x60
 800333a:	4618      	mov	r0, r3
 800333c:	f000 fa95 	bl	800386a <TIM_ITRx_SetConfig>
 8003340:	e01b      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	6818      	ldr	r0, [r3, #0]
 8003346:	683b      	ldr	r3, [r7, #0]
 8003348:	6859      	ldr	r1, [r3, #4]
 800334a:	683b      	ldr	r3, [r7, #0]
 800334c:	68db      	ldr	r3, [r3, #12]
 800334e:	461a      	mov	r2, r3
 8003350:	f000 fa2e 	bl	80037b0 <TIM_TI1_ConfigInputStage>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	2140      	movs	r1, #64	; 0x40
 800335a:	4618      	mov	r0, r3
 800335c:	f000 fa85 	bl	800386a <TIM_ITRx_SetConfig>
 8003360:	e00b      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	681a      	ldr	r2, [r3, #0]
 8003366:	683b      	ldr	r3, [r7, #0]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	4619      	mov	r1, r3
 800336c:	4610      	mov	r0, r2
 800336e:	f000 fa7c 	bl	800386a <TIM_ITRx_SetConfig>
 8003372:	e002      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 8003374:	bf00      	nop
 8003376:	e000      	b.n	800337a <HAL_TIM_ConfigClockSource+0x16e>
 8003378:	bf00      	nop
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	2201      	movs	r2, #1
 800337e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	2200      	movs	r2, #0
 8003386:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800338a:	2300      	movs	r3, #0
 800338c:	4618      	mov	r0, r3
 800338e:	3710      	adds	r7, #16
 8003390:	46bd      	mov	sp, r7
 8003392:	bd80      	pop	{r7, pc}

08003394 <HAL_TIM_OC_DelayElapsedCallback>:
 8003394:	b480      	push	{r7}
 8003396:	b083      	sub	sp, #12
 8003398:	af00      	add	r7, sp, #0
 800339a:	6078      	str	r0, [r7, #4]
 800339c:	bf00      	nop
 800339e:	370c      	adds	r7, #12
 80033a0:	46bd      	mov	sp, r7
 80033a2:	bc80      	pop	{r7}
 80033a4:	4770      	bx	lr

080033a6 <HAL_TIM_IC_CaptureCallback>:
 80033a6:	b480      	push	{r7}
 80033a8:	b083      	sub	sp, #12
 80033aa:	af00      	add	r7, sp, #0
 80033ac:	6078      	str	r0, [r7, #4]
 80033ae:	bf00      	nop
 80033b0:	370c      	adds	r7, #12
 80033b2:	46bd      	mov	sp, r7
 80033b4:	bc80      	pop	{r7}
 80033b6:	4770      	bx	lr

080033b8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80033b8:	b480      	push	{r7}
 80033ba:	b083      	sub	sp, #12
 80033bc:	af00      	add	r7, sp, #0
 80033be:	6078      	str	r0, [r7, #4]
 80033c0:	bf00      	nop
 80033c2:	370c      	adds	r7, #12
 80033c4:	46bd      	mov	sp, r7
 80033c6:	bc80      	pop	{r7}
 80033c8:	4770      	bx	lr

080033ca <HAL_TIM_TriggerCallback>:
 80033ca:	b480      	push	{r7}
 80033cc:	b083      	sub	sp, #12
 80033ce:	af00      	add	r7, sp, #0
 80033d0:	6078      	str	r0, [r7, #4]
 80033d2:	bf00      	nop
 80033d4:	370c      	adds	r7, #12
 80033d6:	46bd      	mov	sp, r7
 80033d8:	bc80      	pop	{r7}
 80033da:	4770      	bx	lr

080033dc <TIM_Base_SetConfig>:
 80033dc:	b480      	push	{r7}
 80033de:	b085      	sub	sp, #20
 80033e0:	af00      	add	r7, sp, #0
 80033e2:	6078      	str	r0, [r7, #4]
 80033e4:	6039      	str	r1, [r7, #0]
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	60fb      	str	r3, [r7, #12]
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	4a29      	ldr	r2, [pc, #164]	; (8003494 <TIM_Base_SetConfig+0xb8>)
 80033f0:	4293      	cmp	r3, r2
 80033f2:	d00b      	beq.n	800340c <TIM_Base_SetConfig+0x30>
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80033fa:	d007      	beq.n	800340c <TIM_Base_SetConfig+0x30>
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	4a26      	ldr	r2, [pc, #152]	; (8003498 <TIM_Base_SetConfig+0xbc>)
 8003400:	4293      	cmp	r3, r2
 8003402:	d003      	beq.n	800340c <TIM_Base_SetConfig+0x30>
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	4a25      	ldr	r2, [pc, #148]	; (800349c <TIM_Base_SetConfig+0xc0>)
 8003408:	4293      	cmp	r3, r2
 800340a:	d108      	bne.n	800341e <TIM_Base_SetConfig+0x42>
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003412:	60fb      	str	r3, [r7, #12]
 8003414:	683b      	ldr	r3, [r7, #0]
 8003416:	685b      	ldr	r3, [r3, #4]
 8003418:	68fa      	ldr	r2, [r7, #12]
 800341a:	4313      	orrs	r3, r2
 800341c:	60fb      	str	r3, [r7, #12]
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	4a1c      	ldr	r2, [pc, #112]	; (8003494 <TIM_Base_SetConfig+0xb8>)
 8003422:	4293      	cmp	r3, r2
 8003424:	d00b      	beq.n	800343e <TIM_Base_SetConfig+0x62>
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800342c:	d007      	beq.n	800343e <TIM_Base_SetConfig+0x62>
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	4a19      	ldr	r2, [pc, #100]	; (8003498 <TIM_Base_SetConfig+0xbc>)
 8003432:	4293      	cmp	r3, r2
 8003434:	d003      	beq.n	800343e <TIM_Base_SetConfig+0x62>
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	4a18      	ldr	r2, [pc, #96]	; (800349c <TIM_Base_SetConfig+0xc0>)
 800343a:	4293      	cmp	r3, r2
 800343c:	d108      	bne.n	8003450 <TIM_Base_SetConfig+0x74>
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003444:	60fb      	str	r3, [r7, #12]
 8003446:	683b      	ldr	r3, [r7, #0]
 8003448:	68db      	ldr	r3, [r3, #12]
 800344a:	68fa      	ldr	r2, [r7, #12]
 800344c:	4313      	orrs	r3, r2
 800344e:	60fb      	str	r3, [r7, #12]
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003456:	683b      	ldr	r3, [r7, #0]
 8003458:	695b      	ldr	r3, [r3, #20]
 800345a:	4313      	orrs	r3, r2
 800345c:	60fb      	str	r3, [r7, #12]
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	68fa      	ldr	r2, [r7, #12]
 8003462:	601a      	str	r2, [r3, #0]
 8003464:	683b      	ldr	r3, [r7, #0]
 8003466:	689a      	ldr	r2, [r3, #8]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	62da      	str	r2, [r3, #44]	; 0x2c
 800346c:	683b      	ldr	r3, [r7, #0]
 800346e:	681a      	ldr	r2, [r3, #0]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	629a      	str	r2, [r3, #40]	; 0x28
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	4a07      	ldr	r2, [pc, #28]	; (8003494 <TIM_Base_SetConfig+0xb8>)
 8003478:	4293      	cmp	r3, r2
 800347a:	d103      	bne.n	8003484 <TIM_Base_SetConfig+0xa8>
 800347c:	683b      	ldr	r3, [r7, #0]
 800347e:	691a      	ldr	r2, [r3, #16]
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	631a      	str	r2, [r3, #48]	; 0x30
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	2201      	movs	r2, #1
 8003488:	615a      	str	r2, [r3, #20]
 800348a:	bf00      	nop
 800348c:	3714      	adds	r7, #20
 800348e:	46bd      	mov	sp, r7
 8003490:	bc80      	pop	{r7}
 8003492:	4770      	bx	lr
 8003494:	40012c00 	.word	0x40012c00
 8003498:	40000400 	.word	0x40000400
 800349c:	40000800 	.word	0x40000800

080034a0 <TIM_OC1_SetConfig>:
 80034a0:	b480      	push	{r7}
 80034a2:	b087      	sub	sp, #28
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
 80034a8:	6039      	str	r1, [r7, #0]
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	6a1b      	ldr	r3, [r3, #32]
 80034ae:	f023 0201 	bic.w	r2, r3, #1
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	621a      	str	r2, [r3, #32]
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	6a1b      	ldr	r3, [r3, #32]
 80034ba:	617b      	str	r3, [r7, #20]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	685b      	ldr	r3, [r3, #4]
 80034c0:	613b      	str	r3, [r7, #16]
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	699b      	ldr	r3, [r3, #24]
 80034c6:	60fb      	str	r3, [r7, #12]
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80034ce:	60fb      	str	r3, [r7, #12]
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	f023 0303 	bic.w	r3, r3, #3
 80034d6:	60fb      	str	r3, [r7, #12]
 80034d8:	683b      	ldr	r3, [r7, #0]
 80034da:	681b      	ldr	r3, [r3, #0]
 80034dc:	68fa      	ldr	r2, [r7, #12]
 80034de:	4313      	orrs	r3, r2
 80034e0:	60fb      	str	r3, [r7, #12]
 80034e2:	697b      	ldr	r3, [r7, #20]
 80034e4:	f023 0302 	bic.w	r3, r3, #2
 80034e8:	617b      	str	r3, [r7, #20]
 80034ea:	683b      	ldr	r3, [r7, #0]
 80034ec:	689b      	ldr	r3, [r3, #8]
 80034ee:	697a      	ldr	r2, [r7, #20]
 80034f0:	4313      	orrs	r3, r2
 80034f2:	617b      	str	r3, [r7, #20]
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	4a1c      	ldr	r2, [pc, #112]	; (8003568 <TIM_OC1_SetConfig+0xc8>)
 80034f8:	4293      	cmp	r3, r2
 80034fa:	d10c      	bne.n	8003516 <TIM_OC1_SetConfig+0x76>
 80034fc:	697b      	ldr	r3, [r7, #20]
 80034fe:	f023 0308 	bic.w	r3, r3, #8
 8003502:	617b      	str	r3, [r7, #20]
 8003504:	683b      	ldr	r3, [r7, #0]
 8003506:	68db      	ldr	r3, [r3, #12]
 8003508:	697a      	ldr	r2, [r7, #20]
 800350a:	4313      	orrs	r3, r2
 800350c:	617b      	str	r3, [r7, #20]
 800350e:	697b      	ldr	r3, [r7, #20]
 8003510:	f023 0304 	bic.w	r3, r3, #4
 8003514:	617b      	str	r3, [r7, #20]
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	4a13      	ldr	r2, [pc, #76]	; (8003568 <TIM_OC1_SetConfig+0xc8>)
 800351a:	4293      	cmp	r3, r2
 800351c:	d111      	bne.n	8003542 <TIM_OC1_SetConfig+0xa2>
 800351e:	693b      	ldr	r3, [r7, #16]
 8003520:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003524:	613b      	str	r3, [r7, #16]
 8003526:	693b      	ldr	r3, [r7, #16]
 8003528:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800352c:	613b      	str	r3, [r7, #16]
 800352e:	683b      	ldr	r3, [r7, #0]
 8003530:	695b      	ldr	r3, [r3, #20]
 8003532:	693a      	ldr	r2, [r7, #16]
 8003534:	4313      	orrs	r3, r2
 8003536:	613b      	str	r3, [r7, #16]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	699b      	ldr	r3, [r3, #24]
 800353c:	693a      	ldr	r2, [r7, #16]
 800353e:	4313      	orrs	r3, r2
 8003540:	613b      	str	r3, [r7, #16]
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	693a      	ldr	r2, [r7, #16]
 8003546:	605a      	str	r2, [r3, #4]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	68fa      	ldr	r2, [r7, #12]
 800354c:	619a      	str	r2, [r3, #24]
 800354e:	683b      	ldr	r3, [r7, #0]
 8003550:	685a      	ldr	r2, [r3, #4]
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	635a      	str	r2, [r3, #52]	; 0x34
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	697a      	ldr	r2, [r7, #20]
 800355a:	621a      	str	r2, [r3, #32]
 800355c:	bf00      	nop
 800355e:	371c      	adds	r7, #28
 8003560:	46bd      	mov	sp, r7
 8003562:	bc80      	pop	{r7}
 8003564:	4770      	bx	lr
 8003566:	bf00      	nop
 8003568:	40012c00 	.word	0x40012c00

0800356c <TIM_OC2_SetConfig>:
 800356c:	b480      	push	{r7}
 800356e:	b087      	sub	sp, #28
 8003570:	af00      	add	r7, sp, #0
 8003572:	6078      	str	r0, [r7, #4]
 8003574:	6039      	str	r1, [r7, #0]
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	6a1b      	ldr	r3, [r3, #32]
 800357a:	f023 0210 	bic.w	r2, r3, #16
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	621a      	str	r2, [r3, #32]
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	6a1b      	ldr	r3, [r3, #32]
 8003586:	617b      	str	r3, [r7, #20]
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	685b      	ldr	r3, [r3, #4]
 800358c:	613b      	str	r3, [r7, #16]
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	699b      	ldr	r3, [r3, #24]
 8003592:	60fb      	str	r3, [r7, #12]
 8003594:	68fb      	ldr	r3, [r7, #12]
 8003596:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800359a:	60fb      	str	r3, [r7, #12]
 800359c:	68fb      	ldr	r3, [r7, #12]
 800359e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80035a2:	60fb      	str	r3, [r7, #12]
 80035a4:	683b      	ldr	r3, [r7, #0]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	021b      	lsls	r3, r3, #8
 80035aa:	68fa      	ldr	r2, [r7, #12]
 80035ac:	4313      	orrs	r3, r2
 80035ae:	60fb      	str	r3, [r7, #12]
 80035b0:	697b      	ldr	r3, [r7, #20]
 80035b2:	f023 0320 	bic.w	r3, r3, #32
 80035b6:	617b      	str	r3, [r7, #20]
 80035b8:	683b      	ldr	r3, [r7, #0]
 80035ba:	689b      	ldr	r3, [r3, #8]
 80035bc:	011b      	lsls	r3, r3, #4
 80035be:	697a      	ldr	r2, [r7, #20]
 80035c0:	4313      	orrs	r3, r2
 80035c2:	617b      	str	r3, [r7, #20]
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	4a1d      	ldr	r2, [pc, #116]	; (800363c <TIM_OC2_SetConfig+0xd0>)
 80035c8:	4293      	cmp	r3, r2
 80035ca:	d10d      	bne.n	80035e8 <TIM_OC2_SetConfig+0x7c>
 80035cc:	697b      	ldr	r3, [r7, #20]
 80035ce:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80035d2:	617b      	str	r3, [r7, #20]
 80035d4:	683b      	ldr	r3, [r7, #0]
 80035d6:	68db      	ldr	r3, [r3, #12]
 80035d8:	011b      	lsls	r3, r3, #4
 80035da:	697a      	ldr	r2, [r7, #20]
 80035dc:	4313      	orrs	r3, r2
 80035de:	617b      	str	r3, [r7, #20]
 80035e0:	697b      	ldr	r3, [r7, #20]
 80035e2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80035e6:	617b      	str	r3, [r7, #20]
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	4a14      	ldr	r2, [pc, #80]	; (800363c <TIM_OC2_SetConfig+0xd0>)
 80035ec:	4293      	cmp	r3, r2
 80035ee:	d113      	bne.n	8003618 <TIM_OC2_SetConfig+0xac>
 80035f0:	693b      	ldr	r3, [r7, #16]
 80035f2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80035f6:	613b      	str	r3, [r7, #16]
 80035f8:	693b      	ldr	r3, [r7, #16]
 80035fa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80035fe:	613b      	str	r3, [r7, #16]
 8003600:	683b      	ldr	r3, [r7, #0]
 8003602:	695b      	ldr	r3, [r3, #20]
 8003604:	009b      	lsls	r3, r3, #2
 8003606:	693a      	ldr	r2, [r7, #16]
 8003608:	4313      	orrs	r3, r2
 800360a:	613b      	str	r3, [r7, #16]
 800360c:	683b      	ldr	r3, [r7, #0]
 800360e:	699b      	ldr	r3, [r3, #24]
 8003610:	009b      	lsls	r3, r3, #2
 8003612:	693a      	ldr	r2, [r7, #16]
 8003614:	4313      	orrs	r3, r2
 8003616:	613b      	str	r3, [r7, #16]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	693a      	ldr	r2, [r7, #16]
 800361c:	605a      	str	r2, [r3, #4]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	68fa      	ldr	r2, [r7, #12]
 8003622:	619a      	str	r2, [r3, #24]
 8003624:	683b      	ldr	r3, [r7, #0]
 8003626:	685a      	ldr	r2, [r3, #4]
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	639a      	str	r2, [r3, #56]	; 0x38
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	697a      	ldr	r2, [r7, #20]
 8003630:	621a      	str	r2, [r3, #32]
 8003632:	bf00      	nop
 8003634:	371c      	adds	r7, #28
 8003636:	46bd      	mov	sp, r7
 8003638:	bc80      	pop	{r7}
 800363a:	4770      	bx	lr
 800363c:	40012c00 	.word	0x40012c00

08003640 <TIM_OC3_SetConfig>:
 8003640:	b480      	push	{r7}
 8003642:	b087      	sub	sp, #28
 8003644:	af00      	add	r7, sp, #0
 8003646:	6078      	str	r0, [r7, #4]
 8003648:	6039      	str	r1, [r7, #0]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	6a1b      	ldr	r3, [r3, #32]
 800364e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	621a      	str	r2, [r3, #32]
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	6a1b      	ldr	r3, [r3, #32]
 800365a:	617b      	str	r3, [r7, #20]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	685b      	ldr	r3, [r3, #4]
 8003660:	613b      	str	r3, [r7, #16]
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	69db      	ldr	r3, [r3, #28]
 8003666:	60fb      	str	r3, [r7, #12]
 8003668:	68fb      	ldr	r3, [r7, #12]
 800366a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800366e:	60fb      	str	r3, [r7, #12]
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	f023 0303 	bic.w	r3, r3, #3
 8003676:	60fb      	str	r3, [r7, #12]
 8003678:	683b      	ldr	r3, [r7, #0]
 800367a:	681b      	ldr	r3, [r3, #0]
 800367c:	68fa      	ldr	r2, [r7, #12]
 800367e:	4313      	orrs	r3, r2
 8003680:	60fb      	str	r3, [r7, #12]
 8003682:	697b      	ldr	r3, [r7, #20]
 8003684:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003688:	617b      	str	r3, [r7, #20]
 800368a:	683b      	ldr	r3, [r7, #0]
 800368c:	689b      	ldr	r3, [r3, #8]
 800368e:	021b      	lsls	r3, r3, #8
 8003690:	697a      	ldr	r2, [r7, #20]
 8003692:	4313      	orrs	r3, r2
 8003694:	617b      	str	r3, [r7, #20]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	4a1d      	ldr	r2, [pc, #116]	; (8003710 <TIM_OC3_SetConfig+0xd0>)
 800369a:	4293      	cmp	r3, r2
 800369c:	d10d      	bne.n	80036ba <TIM_OC3_SetConfig+0x7a>
 800369e:	697b      	ldr	r3, [r7, #20]
 80036a0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80036a4:	617b      	str	r3, [r7, #20]
 80036a6:	683b      	ldr	r3, [r7, #0]
 80036a8:	68db      	ldr	r3, [r3, #12]
 80036aa:	021b      	lsls	r3, r3, #8
 80036ac:	697a      	ldr	r2, [r7, #20]
 80036ae:	4313      	orrs	r3, r2
 80036b0:	617b      	str	r3, [r7, #20]
 80036b2:	697b      	ldr	r3, [r7, #20]
 80036b4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80036b8:	617b      	str	r3, [r7, #20]
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	4a14      	ldr	r2, [pc, #80]	; (8003710 <TIM_OC3_SetConfig+0xd0>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d113      	bne.n	80036ea <TIM_OC3_SetConfig+0xaa>
 80036c2:	693b      	ldr	r3, [r7, #16]
 80036c4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80036c8:	613b      	str	r3, [r7, #16]
 80036ca:	693b      	ldr	r3, [r7, #16]
 80036cc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80036d0:	613b      	str	r3, [r7, #16]
 80036d2:	683b      	ldr	r3, [r7, #0]
 80036d4:	695b      	ldr	r3, [r3, #20]
 80036d6:	011b      	lsls	r3, r3, #4
 80036d8:	693a      	ldr	r2, [r7, #16]
 80036da:	4313      	orrs	r3, r2
 80036dc:	613b      	str	r3, [r7, #16]
 80036de:	683b      	ldr	r3, [r7, #0]
 80036e0:	699b      	ldr	r3, [r3, #24]
 80036e2:	011b      	lsls	r3, r3, #4
 80036e4:	693a      	ldr	r2, [r7, #16]
 80036e6:	4313      	orrs	r3, r2
 80036e8:	613b      	str	r3, [r7, #16]
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	693a      	ldr	r2, [r7, #16]
 80036ee:	605a      	str	r2, [r3, #4]
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	68fa      	ldr	r2, [r7, #12]
 80036f4:	61da      	str	r2, [r3, #28]
 80036f6:	683b      	ldr	r3, [r7, #0]
 80036f8:	685a      	ldr	r2, [r3, #4]
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	63da      	str	r2, [r3, #60]	; 0x3c
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	697a      	ldr	r2, [r7, #20]
 8003702:	621a      	str	r2, [r3, #32]
 8003704:	bf00      	nop
 8003706:	371c      	adds	r7, #28
 8003708:	46bd      	mov	sp, r7
 800370a:	bc80      	pop	{r7}
 800370c:	4770      	bx	lr
 800370e:	bf00      	nop
 8003710:	40012c00 	.word	0x40012c00

08003714 <TIM_OC4_SetConfig>:
 8003714:	b480      	push	{r7}
 8003716:	b087      	sub	sp, #28
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
 800371c:	6039      	str	r1, [r7, #0]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	6a1b      	ldr	r3, [r3, #32]
 8003722:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	621a      	str	r2, [r3, #32]
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	6a1b      	ldr	r3, [r3, #32]
 800372e:	613b      	str	r3, [r7, #16]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	685b      	ldr	r3, [r3, #4]
 8003734:	617b      	str	r3, [r7, #20]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	69db      	ldr	r3, [r3, #28]
 800373a:	60fb      	str	r3, [r7, #12]
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003742:	60fb      	str	r3, [r7, #12]
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800374a:	60fb      	str	r3, [r7, #12]
 800374c:	683b      	ldr	r3, [r7, #0]
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	021b      	lsls	r3, r3, #8
 8003752:	68fa      	ldr	r2, [r7, #12]
 8003754:	4313      	orrs	r3, r2
 8003756:	60fb      	str	r3, [r7, #12]
 8003758:	693b      	ldr	r3, [r7, #16]
 800375a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800375e:	613b      	str	r3, [r7, #16]
 8003760:	683b      	ldr	r3, [r7, #0]
 8003762:	689b      	ldr	r3, [r3, #8]
 8003764:	031b      	lsls	r3, r3, #12
 8003766:	693a      	ldr	r2, [r7, #16]
 8003768:	4313      	orrs	r3, r2
 800376a:	613b      	str	r3, [r7, #16]
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	4a0f      	ldr	r2, [pc, #60]	; (80037ac <TIM_OC4_SetConfig+0x98>)
 8003770:	4293      	cmp	r3, r2
 8003772:	d109      	bne.n	8003788 <TIM_OC4_SetConfig+0x74>
 8003774:	697b      	ldr	r3, [r7, #20]
 8003776:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800377a:	617b      	str	r3, [r7, #20]
 800377c:	683b      	ldr	r3, [r7, #0]
 800377e:	695b      	ldr	r3, [r3, #20]
 8003780:	019b      	lsls	r3, r3, #6
 8003782:	697a      	ldr	r2, [r7, #20]
 8003784:	4313      	orrs	r3, r2
 8003786:	617b      	str	r3, [r7, #20]
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	697a      	ldr	r2, [r7, #20]
 800378c:	605a      	str	r2, [r3, #4]
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	68fa      	ldr	r2, [r7, #12]
 8003792:	61da      	str	r2, [r3, #28]
 8003794:	683b      	ldr	r3, [r7, #0]
 8003796:	685a      	ldr	r2, [r3, #4]
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	641a      	str	r2, [r3, #64]	; 0x40
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	693a      	ldr	r2, [r7, #16]
 80037a0:	621a      	str	r2, [r3, #32]
 80037a2:	bf00      	nop
 80037a4:	371c      	adds	r7, #28
 80037a6:	46bd      	mov	sp, r7
 80037a8:	bc80      	pop	{r7}
 80037aa:	4770      	bx	lr
 80037ac:	40012c00 	.word	0x40012c00

080037b0 <TIM_TI1_ConfigInputStage>:
 80037b0:	b480      	push	{r7}
 80037b2:	b087      	sub	sp, #28
 80037b4:	af00      	add	r7, sp, #0
 80037b6:	60f8      	str	r0, [r7, #12]
 80037b8:	60b9      	str	r1, [r7, #8]
 80037ba:	607a      	str	r2, [r7, #4]
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	6a1b      	ldr	r3, [r3, #32]
 80037c0:	617b      	str	r3, [r7, #20]
 80037c2:	68fb      	ldr	r3, [r7, #12]
 80037c4:	6a1b      	ldr	r3, [r3, #32]
 80037c6:	f023 0201 	bic.w	r2, r3, #1
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	621a      	str	r2, [r3, #32]
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	699b      	ldr	r3, [r3, #24]
 80037d2:	613b      	str	r3, [r7, #16]
 80037d4:	693b      	ldr	r3, [r7, #16]
 80037d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80037da:	613b      	str	r3, [r7, #16]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	011b      	lsls	r3, r3, #4
 80037e0:	693a      	ldr	r2, [r7, #16]
 80037e2:	4313      	orrs	r3, r2
 80037e4:	613b      	str	r3, [r7, #16]
 80037e6:	697b      	ldr	r3, [r7, #20]
 80037e8:	f023 030a 	bic.w	r3, r3, #10
 80037ec:	617b      	str	r3, [r7, #20]
 80037ee:	697a      	ldr	r2, [r7, #20]
 80037f0:	68bb      	ldr	r3, [r7, #8]
 80037f2:	4313      	orrs	r3, r2
 80037f4:	617b      	str	r3, [r7, #20]
 80037f6:	68fb      	ldr	r3, [r7, #12]
 80037f8:	693a      	ldr	r2, [r7, #16]
 80037fa:	619a      	str	r2, [r3, #24]
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	697a      	ldr	r2, [r7, #20]
 8003800:	621a      	str	r2, [r3, #32]
 8003802:	bf00      	nop
 8003804:	371c      	adds	r7, #28
 8003806:	46bd      	mov	sp, r7
 8003808:	bc80      	pop	{r7}
 800380a:	4770      	bx	lr

0800380c <TIM_TI2_ConfigInputStage>:
 800380c:	b480      	push	{r7}
 800380e:	b087      	sub	sp, #28
 8003810:	af00      	add	r7, sp, #0
 8003812:	60f8      	str	r0, [r7, #12]
 8003814:	60b9      	str	r1, [r7, #8]
 8003816:	607a      	str	r2, [r7, #4]
 8003818:	68fb      	ldr	r3, [r7, #12]
 800381a:	6a1b      	ldr	r3, [r3, #32]
 800381c:	f023 0210 	bic.w	r2, r3, #16
 8003820:	68fb      	ldr	r3, [r7, #12]
 8003822:	621a      	str	r2, [r3, #32]
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	699b      	ldr	r3, [r3, #24]
 8003828:	617b      	str	r3, [r7, #20]
 800382a:	68fb      	ldr	r3, [r7, #12]
 800382c:	6a1b      	ldr	r3, [r3, #32]
 800382e:	613b      	str	r3, [r7, #16]
 8003830:	697b      	ldr	r3, [r7, #20]
 8003832:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003836:	617b      	str	r3, [r7, #20]
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	031b      	lsls	r3, r3, #12
 800383c:	697a      	ldr	r2, [r7, #20]
 800383e:	4313      	orrs	r3, r2
 8003840:	617b      	str	r3, [r7, #20]
 8003842:	693b      	ldr	r3, [r7, #16]
 8003844:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003848:	613b      	str	r3, [r7, #16]
 800384a:	68bb      	ldr	r3, [r7, #8]
 800384c:	011b      	lsls	r3, r3, #4
 800384e:	693a      	ldr	r2, [r7, #16]
 8003850:	4313      	orrs	r3, r2
 8003852:	613b      	str	r3, [r7, #16]
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	697a      	ldr	r2, [r7, #20]
 8003858:	619a      	str	r2, [r3, #24]
 800385a:	68fb      	ldr	r3, [r7, #12]
 800385c:	693a      	ldr	r2, [r7, #16]
 800385e:	621a      	str	r2, [r3, #32]
 8003860:	bf00      	nop
 8003862:	371c      	adds	r7, #28
 8003864:	46bd      	mov	sp, r7
 8003866:	bc80      	pop	{r7}
 8003868:	4770      	bx	lr

0800386a <TIM_ITRx_SetConfig>:
 800386a:	b480      	push	{r7}
 800386c:	b085      	sub	sp, #20
 800386e:	af00      	add	r7, sp, #0
 8003870:	6078      	str	r0, [r7, #4]
 8003872:	6039      	str	r1, [r7, #0]
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	689b      	ldr	r3, [r3, #8]
 8003878:	60fb      	str	r3, [r7, #12]
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003880:	60fb      	str	r3, [r7, #12]
 8003882:	683a      	ldr	r2, [r7, #0]
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	4313      	orrs	r3, r2
 8003888:	f043 0307 	orr.w	r3, r3, #7
 800388c:	60fb      	str	r3, [r7, #12]
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	68fa      	ldr	r2, [r7, #12]
 8003892:	609a      	str	r2, [r3, #8]
 8003894:	bf00      	nop
 8003896:	3714      	adds	r7, #20
 8003898:	46bd      	mov	sp, r7
 800389a:	bc80      	pop	{r7}
 800389c:	4770      	bx	lr

0800389e <TIM_ETR_SetConfig>:
 800389e:	b480      	push	{r7}
 80038a0:	b087      	sub	sp, #28
 80038a2:	af00      	add	r7, sp, #0
 80038a4:	60f8      	str	r0, [r7, #12]
 80038a6:	60b9      	str	r1, [r7, #8]
 80038a8:	607a      	str	r2, [r7, #4]
 80038aa:	603b      	str	r3, [r7, #0]
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	689b      	ldr	r3, [r3, #8]
 80038b0:	617b      	str	r3, [r7, #20]
 80038b2:	697b      	ldr	r3, [r7, #20]
 80038b4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80038b8:	617b      	str	r3, [r7, #20]
 80038ba:	683b      	ldr	r3, [r7, #0]
 80038bc:	021a      	lsls	r2, r3, #8
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	431a      	orrs	r2, r3
 80038c2:	68bb      	ldr	r3, [r7, #8]
 80038c4:	4313      	orrs	r3, r2
 80038c6:	697a      	ldr	r2, [r7, #20]
 80038c8:	4313      	orrs	r3, r2
 80038ca:	617b      	str	r3, [r7, #20]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	697a      	ldr	r2, [r7, #20]
 80038d0:	609a      	str	r2, [r3, #8]
 80038d2:	bf00      	nop
 80038d4:	371c      	adds	r7, #28
 80038d6:	46bd      	mov	sp, r7
 80038d8:	bc80      	pop	{r7}
 80038da:	4770      	bx	lr

080038dc <TIM_CCxChannelCmd>:
 80038dc:	b480      	push	{r7}
 80038de:	b087      	sub	sp, #28
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	60f8      	str	r0, [r7, #12]
 80038e4:	60b9      	str	r1, [r7, #8]
 80038e6:	607a      	str	r2, [r7, #4]
 80038e8:	68bb      	ldr	r3, [r7, #8]
 80038ea:	f003 031f 	and.w	r3, r3, #31
 80038ee:	2201      	movs	r2, #1
 80038f0:	fa02 f303 	lsl.w	r3, r2, r3
 80038f4:	617b      	str	r3, [r7, #20]
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	6a1a      	ldr	r2, [r3, #32]
 80038fa:	697b      	ldr	r3, [r7, #20]
 80038fc:	43db      	mvns	r3, r3
 80038fe:	401a      	ands	r2, r3
 8003900:	68fb      	ldr	r3, [r7, #12]
 8003902:	621a      	str	r2, [r3, #32]
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	6a1a      	ldr	r2, [r3, #32]
 8003908:	68bb      	ldr	r3, [r7, #8]
 800390a:	f003 031f 	and.w	r3, r3, #31
 800390e:	6879      	ldr	r1, [r7, #4]
 8003910:	fa01 f303 	lsl.w	r3, r1, r3
 8003914:	431a      	orrs	r2, r3
 8003916:	68fb      	ldr	r3, [r7, #12]
 8003918:	621a      	str	r2, [r3, #32]
 800391a:	bf00      	nop
 800391c:	371c      	adds	r7, #28
 800391e:	46bd      	mov	sp, r7
 8003920:	bc80      	pop	{r7}
 8003922:	4770      	bx	lr

08003924 <HAL_TIMEx_MasterConfigSynchronization>:
 8003924:	b480      	push	{r7}
 8003926:	b085      	sub	sp, #20
 8003928:	af00      	add	r7, sp, #0
 800392a:	6078      	str	r0, [r7, #4]
 800392c:	6039      	str	r1, [r7, #0]
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003934:	2b01      	cmp	r3, #1
 8003936:	d101      	bne.n	800393c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003938:	2302      	movs	r3, #2
 800393a:	e046      	b.n	80039ca <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	2201      	movs	r2, #1
 8003940:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	2202      	movs	r2, #2
 8003948:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	685b      	ldr	r3, [r3, #4]
 8003952:	60fb      	str	r3, [r7, #12]
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	689b      	ldr	r3, [r3, #8]
 800395a:	60bb      	str	r3, [r7, #8]
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003962:	60fb      	str	r3, [r7, #12]
 8003964:	683b      	ldr	r3, [r7, #0]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	68fa      	ldr	r2, [r7, #12]
 800396a:	4313      	orrs	r3, r2
 800396c:	60fb      	str	r3, [r7, #12]
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	68fa      	ldr	r2, [r7, #12]
 8003974:	605a      	str	r2, [r3, #4]
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	4a16      	ldr	r2, [pc, #88]	; (80039d4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 800397c:	4293      	cmp	r3, r2
 800397e:	d00e      	beq.n	800399e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003988:	d009      	beq.n	800399e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	4a12      	ldr	r2, [pc, #72]	; (80039d8 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003990:	4293      	cmp	r3, r2
 8003992:	d004      	beq.n	800399e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	681b      	ldr	r3, [r3, #0]
 8003998:	4a10      	ldr	r2, [pc, #64]	; (80039dc <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800399a:	4293      	cmp	r3, r2
 800399c:	d10c      	bne.n	80039b8 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800399e:	68bb      	ldr	r3, [r7, #8]
 80039a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80039a4:	60bb      	str	r3, [r7, #8]
 80039a6:	683b      	ldr	r3, [r7, #0]
 80039a8:	685b      	ldr	r3, [r3, #4]
 80039aa:	68ba      	ldr	r2, [r7, #8]
 80039ac:	4313      	orrs	r3, r2
 80039ae:	60bb      	str	r3, [r7, #8]
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	68ba      	ldr	r2, [r7, #8]
 80039b6:	609a      	str	r2, [r3, #8]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	2201      	movs	r2, #1
 80039bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	2200      	movs	r2, #0
 80039c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039c8:	2300      	movs	r3, #0
 80039ca:	4618      	mov	r0, r3
 80039cc:	3714      	adds	r7, #20
 80039ce:	46bd      	mov	sp, r7
 80039d0:	bc80      	pop	{r7}
 80039d2:	4770      	bx	lr
 80039d4:	40012c00 	.word	0x40012c00
 80039d8:	40000400 	.word	0x40000400
 80039dc:	40000800 	.word	0x40000800

080039e0 <HAL_TIMEx_CommutCallback>:
 80039e0:	b480      	push	{r7}
 80039e2:	b083      	sub	sp, #12
 80039e4:	af00      	add	r7, sp, #0
 80039e6:	6078      	str	r0, [r7, #4]
 80039e8:	bf00      	nop
 80039ea:	370c      	adds	r7, #12
 80039ec:	46bd      	mov	sp, r7
 80039ee:	bc80      	pop	{r7}
 80039f0:	4770      	bx	lr

080039f2 <HAL_TIMEx_BreakCallback>:
 80039f2:	b480      	push	{r7}
 80039f4:	b083      	sub	sp, #12
 80039f6:	af00      	add	r7, sp, #0
 80039f8:	6078      	str	r0, [r7, #4]
 80039fa:	bf00      	nop
 80039fc:	370c      	adds	r7, #12
 80039fe:	46bd      	mov	sp, r7
 8003a00:	bc80      	pop	{r7}
 8003a02:	4770      	bx	lr

08003a04 <HAL_UART_Init>:
 8003a04:	b580      	push	{r7, lr}
 8003a06:	b082      	sub	sp, #8
 8003a08:	af00      	add	r7, sp, #0
 8003a0a:	6078      	str	r0, [r7, #4]
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d101      	bne.n	8003a16 <HAL_UART_Init+0x12>
 8003a12:	2301      	movs	r3, #1
 8003a14:	e03f      	b.n	8003a96 <HAL_UART_Init+0x92>
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003a1c:	b2db      	uxtb	r3, r3
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d106      	bne.n	8003a30 <HAL_UART_Init+0x2c>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	2200      	movs	r2, #0
 8003a26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a2a:	6878      	ldr	r0, [r7, #4]
 8003a2c:	f7fd fd0c 	bl	8001448 <HAL_UART_MspInit>
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	2224      	movs	r2, #36	; 0x24
 8003a34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	68da      	ldr	r2, [r3, #12]
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003a46:	60da      	str	r2, [r3, #12]
 8003a48:	6878      	ldr	r0, [r7, #4]
 8003a4a:	f000 fc25 	bl	8004298 <UART_SetConfig>
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	691a      	ldr	r2, [r3, #16]
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003a5c:	611a      	str	r2, [r3, #16]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	695a      	ldr	r2, [r3, #20]
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003a6c:	615a      	str	r2, [r3, #20]
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	68da      	ldr	r2, [r3, #12]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	681b      	ldr	r3, [r3, #0]
 8003a78:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003a7c:	60da      	str	r2, [r3, #12]
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	2200      	movs	r2, #0
 8003a82:	641a      	str	r2, [r3, #64]	; 0x40
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	2220      	movs	r2, #32
 8003a88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	2220      	movs	r2, #32
 8003a90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003a94:	2300      	movs	r3, #0
 8003a96:	4618      	mov	r0, r3
 8003a98:	3708      	adds	r7, #8
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	bd80      	pop	{r7, pc}

08003a9e <HAL_UART_Transmit>:
 8003a9e:	b580      	push	{r7, lr}
 8003aa0:	b08a      	sub	sp, #40	; 0x28
 8003aa2:	af02      	add	r7, sp, #8
 8003aa4:	60f8      	str	r0, [r7, #12]
 8003aa6:	60b9      	str	r1, [r7, #8]
 8003aa8:	603b      	str	r3, [r7, #0]
 8003aaa:	4613      	mov	r3, r2
 8003aac:	80fb      	strh	r3, [r7, #6]
 8003aae:	2300      	movs	r3, #0
 8003ab0:	617b      	str	r3, [r7, #20]
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003ab8:	b2db      	uxtb	r3, r3
 8003aba:	2b20      	cmp	r3, #32
 8003abc:	d17c      	bne.n	8003bb8 <HAL_UART_Transmit+0x11a>
 8003abe:	68bb      	ldr	r3, [r7, #8]
 8003ac0:	2b00      	cmp	r3, #0
 8003ac2:	d002      	beq.n	8003aca <HAL_UART_Transmit+0x2c>
 8003ac4:	88fb      	ldrh	r3, [r7, #6]
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d101      	bne.n	8003ace <HAL_UART_Transmit+0x30>
 8003aca:	2301      	movs	r3, #1
 8003acc:	e075      	b.n	8003bba <HAL_UART_Transmit+0x11c>
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003ad4:	2b01      	cmp	r3, #1
 8003ad6:	d101      	bne.n	8003adc <HAL_UART_Transmit+0x3e>
 8003ad8:	2302      	movs	r3, #2
 8003ada:	e06e      	b.n	8003bba <HAL_UART_Transmit+0x11c>
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	2201      	movs	r2, #1
 8003ae0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	2200      	movs	r2, #0
 8003ae8:	641a      	str	r2, [r3, #64]	; 0x40
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	2221      	movs	r2, #33	; 0x21
 8003aee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003af2:	f7fe f871 	bl	8001bd8 <HAL_GetTick>
 8003af6:	6178      	str	r0, [r7, #20]
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	88fa      	ldrh	r2, [r7, #6]
 8003afc:	849a      	strh	r2, [r3, #36]	; 0x24
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	88fa      	ldrh	r2, [r7, #6]
 8003b02:	84da      	strh	r2, [r3, #38]	; 0x26
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	689b      	ldr	r3, [r3, #8]
 8003b08:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003b0c:	d108      	bne.n	8003b20 <HAL_UART_Transmit+0x82>
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	691b      	ldr	r3, [r3, #16]
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d104      	bne.n	8003b20 <HAL_UART_Transmit+0x82>
 8003b16:	2300      	movs	r3, #0
 8003b18:	61fb      	str	r3, [r7, #28]
 8003b1a:	68bb      	ldr	r3, [r7, #8]
 8003b1c:	61bb      	str	r3, [r7, #24]
 8003b1e:	e003      	b.n	8003b28 <HAL_UART_Transmit+0x8a>
 8003b20:	68bb      	ldr	r3, [r7, #8]
 8003b22:	61fb      	str	r3, [r7, #28]
 8003b24:	2300      	movs	r3, #0
 8003b26:	61bb      	str	r3, [r7, #24]
 8003b28:	68fb      	ldr	r3, [r7, #12]
 8003b2a:	2200      	movs	r2, #0
 8003b2c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b30:	e02a      	b.n	8003b88 <HAL_UART_Transmit+0xea>
 8003b32:	683b      	ldr	r3, [r7, #0]
 8003b34:	9300      	str	r3, [sp, #0]
 8003b36:	697b      	ldr	r3, [r7, #20]
 8003b38:	2200      	movs	r2, #0
 8003b3a:	2180      	movs	r1, #128	; 0x80
 8003b3c:	68f8      	ldr	r0, [r7, #12]
 8003b3e:	f000 fa11 	bl	8003f64 <UART_WaitOnFlagUntilTimeout>
 8003b42:	4603      	mov	r3, r0
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d001      	beq.n	8003b4c <HAL_UART_Transmit+0xae>
 8003b48:	2303      	movs	r3, #3
 8003b4a:	e036      	b.n	8003bba <HAL_UART_Transmit+0x11c>
 8003b4c:	69fb      	ldr	r3, [r7, #28]
 8003b4e:	2b00      	cmp	r3, #0
 8003b50:	d10b      	bne.n	8003b6a <HAL_UART_Transmit+0xcc>
 8003b52:	69bb      	ldr	r3, [r7, #24]
 8003b54:	881b      	ldrh	r3, [r3, #0]
 8003b56:	461a      	mov	r2, r3
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003b60:	605a      	str	r2, [r3, #4]
 8003b62:	69bb      	ldr	r3, [r7, #24]
 8003b64:	3302      	adds	r3, #2
 8003b66:	61bb      	str	r3, [r7, #24]
 8003b68:	e007      	b.n	8003b7a <HAL_UART_Transmit+0xdc>
 8003b6a:	69fb      	ldr	r3, [r7, #28]
 8003b6c:	781a      	ldrb	r2, [r3, #0]
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	605a      	str	r2, [r3, #4]
 8003b74:	69fb      	ldr	r3, [r7, #28]
 8003b76:	3301      	adds	r3, #1
 8003b78:	61fb      	str	r3, [r7, #28]
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b7e:	b29b      	uxth	r3, r3
 8003b80:	3b01      	subs	r3, #1
 8003b82:	b29a      	uxth	r2, r3
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	84da      	strh	r2, [r3, #38]	; 0x26
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b8c:	b29b      	uxth	r3, r3
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	d1cf      	bne.n	8003b32 <HAL_UART_Transmit+0x94>
 8003b92:	683b      	ldr	r3, [r7, #0]
 8003b94:	9300      	str	r3, [sp, #0]
 8003b96:	697b      	ldr	r3, [r7, #20]
 8003b98:	2200      	movs	r2, #0
 8003b9a:	2140      	movs	r1, #64	; 0x40
 8003b9c:	68f8      	ldr	r0, [r7, #12]
 8003b9e:	f000 f9e1 	bl	8003f64 <UART_WaitOnFlagUntilTimeout>
 8003ba2:	4603      	mov	r3, r0
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	d001      	beq.n	8003bac <HAL_UART_Transmit+0x10e>
 8003ba8:	2303      	movs	r3, #3
 8003baa:	e006      	b.n	8003bba <HAL_UART_Transmit+0x11c>
 8003bac:	68fb      	ldr	r3, [r7, #12]
 8003bae:	2220      	movs	r2, #32
 8003bb0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	e000      	b.n	8003bba <HAL_UART_Transmit+0x11c>
 8003bb8:	2302      	movs	r3, #2
 8003bba:	4618      	mov	r0, r3
 8003bbc:	3720      	adds	r7, #32
 8003bbe:	46bd      	mov	sp, r7
 8003bc0:	bd80      	pop	{r7, pc}
	...

08003bc4 <HAL_UART_IRQHandler>:
 8003bc4:	b580      	push	{r7, lr}
 8003bc6:	b08a      	sub	sp, #40	; 0x28
 8003bc8:	af00      	add	r7, sp, #0
 8003bca:	6078      	str	r0, [r7, #4]
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	627b      	str	r3, [r7, #36]	; 0x24
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	68db      	ldr	r3, [r3, #12]
 8003bda:	623b      	str	r3, [r7, #32]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	695b      	ldr	r3, [r3, #20]
 8003be2:	61fb      	str	r3, [r7, #28]
 8003be4:	2300      	movs	r3, #0
 8003be6:	61bb      	str	r3, [r7, #24]
 8003be8:	2300      	movs	r3, #0
 8003bea:	617b      	str	r3, [r7, #20]
 8003bec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bee:	f003 030f 	and.w	r3, r3, #15
 8003bf2:	61bb      	str	r3, [r7, #24]
 8003bf4:	69bb      	ldr	r3, [r7, #24]
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d10d      	bne.n	8003c16 <HAL_UART_IRQHandler+0x52>
 8003bfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bfc:	f003 0320 	and.w	r3, r3, #32
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d008      	beq.n	8003c16 <HAL_UART_IRQHandler+0x52>
 8003c04:	6a3b      	ldr	r3, [r7, #32]
 8003c06:	f003 0320 	and.w	r3, r3, #32
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d003      	beq.n	8003c16 <HAL_UART_IRQHandler+0x52>
 8003c0e:	6878      	ldr	r0, [r7, #4]
 8003c10:	f000 fa99 	bl	8004146 <UART_Receive_IT>
 8003c14:	e17b      	b.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003c16:	69bb      	ldr	r3, [r7, #24]
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	f000 80b1 	beq.w	8003d80 <HAL_UART_IRQHandler+0x1bc>
 8003c1e:	69fb      	ldr	r3, [r7, #28]
 8003c20:	f003 0301 	and.w	r3, r3, #1
 8003c24:	2b00      	cmp	r3, #0
 8003c26:	d105      	bne.n	8003c34 <HAL_UART_IRQHandler+0x70>
 8003c28:	6a3b      	ldr	r3, [r7, #32]
 8003c2a:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	f000 80a6 	beq.w	8003d80 <HAL_UART_IRQHandler+0x1bc>
 8003c34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c36:	f003 0301 	and.w	r3, r3, #1
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d00a      	beq.n	8003c54 <HAL_UART_IRQHandler+0x90>
 8003c3e:	6a3b      	ldr	r3, [r7, #32]
 8003c40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d005      	beq.n	8003c54 <HAL_UART_IRQHandler+0x90>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c4c:	f043 0201 	orr.w	r2, r3, #1
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	641a      	str	r2, [r3, #64]	; 0x40
 8003c54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c56:	f003 0304 	and.w	r3, r3, #4
 8003c5a:	2b00      	cmp	r3, #0
 8003c5c:	d00a      	beq.n	8003c74 <HAL_UART_IRQHandler+0xb0>
 8003c5e:	69fb      	ldr	r3, [r7, #28]
 8003c60:	f003 0301 	and.w	r3, r3, #1
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d005      	beq.n	8003c74 <HAL_UART_IRQHandler+0xb0>
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c6c:	f043 0202 	orr.w	r2, r3, #2
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	641a      	str	r2, [r3, #64]	; 0x40
 8003c74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c76:	f003 0302 	and.w	r3, r3, #2
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d00a      	beq.n	8003c94 <HAL_UART_IRQHandler+0xd0>
 8003c7e:	69fb      	ldr	r3, [r7, #28]
 8003c80:	f003 0301 	and.w	r3, r3, #1
 8003c84:	2b00      	cmp	r3, #0
 8003c86:	d005      	beq.n	8003c94 <HAL_UART_IRQHandler+0xd0>
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c8c:	f043 0204 	orr.w	r2, r3, #4
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	641a      	str	r2, [r3, #64]	; 0x40
 8003c94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c96:	f003 0308 	and.w	r3, r3, #8
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	d00f      	beq.n	8003cbe <HAL_UART_IRQHandler+0xfa>
 8003c9e:	6a3b      	ldr	r3, [r7, #32]
 8003ca0:	f003 0320 	and.w	r3, r3, #32
 8003ca4:	2b00      	cmp	r3, #0
 8003ca6:	d104      	bne.n	8003cb2 <HAL_UART_IRQHandler+0xee>
 8003ca8:	69fb      	ldr	r3, [r7, #28]
 8003caa:	f003 0301 	and.w	r3, r3, #1
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d005      	beq.n	8003cbe <HAL_UART_IRQHandler+0xfa>
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cb6:	f043 0208 	orr.w	r2, r3, #8
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	641a      	str	r2, [r3, #64]	; 0x40
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	f000 811e 	beq.w	8003f04 <HAL_UART_IRQHandler+0x340>
 8003cc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cca:	f003 0320 	and.w	r3, r3, #32
 8003cce:	2b00      	cmp	r3, #0
 8003cd0:	d007      	beq.n	8003ce2 <HAL_UART_IRQHandler+0x11e>
 8003cd2:	6a3b      	ldr	r3, [r7, #32]
 8003cd4:	f003 0320 	and.w	r3, r3, #32
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d002      	beq.n	8003ce2 <HAL_UART_IRQHandler+0x11e>
 8003cdc:	6878      	ldr	r0, [r7, #4]
 8003cde:	f000 fa32 	bl	8004146 <UART_Receive_IT>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	695b      	ldr	r3, [r3, #20]
 8003ce8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003cec:	2b00      	cmp	r3, #0
 8003cee:	bf14      	ite	ne
 8003cf0:	2301      	movne	r3, #1
 8003cf2:	2300      	moveq	r3, #0
 8003cf4:	b2db      	uxtb	r3, r3
 8003cf6:	617b      	str	r3, [r7, #20]
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cfc:	f003 0308 	and.w	r3, r3, #8
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d102      	bne.n	8003d0a <HAL_UART_IRQHandler+0x146>
 8003d04:	697b      	ldr	r3, [r7, #20]
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d031      	beq.n	8003d6e <HAL_UART_IRQHandler+0x1aa>
 8003d0a:	6878      	ldr	r0, [r7, #4]
 8003d0c:	f000 f974 	bl	8003ff8 <UART_EndRxTransfer>
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	695b      	ldr	r3, [r3, #20]
 8003d16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003d1a:	2b00      	cmp	r3, #0
 8003d1c:	d023      	beq.n	8003d66 <HAL_UART_IRQHandler+0x1a2>
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	695a      	ldr	r2, [r3, #20]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003d2c:	615a      	str	r2, [r3, #20]
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d013      	beq.n	8003d5e <HAL_UART_IRQHandler+0x19a>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d3a:	4a76      	ldr	r2, [pc, #472]	; (8003f14 <HAL_UART_IRQHandler+0x350>)
 8003d3c:	635a      	str	r2, [r3, #52]	; 0x34
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d42:	4618      	mov	r0, r3
 8003d44:	f7fe f89a 	bl	8001e7c <HAL_DMA_Abort_IT>
 8003d48:	4603      	mov	r3, r0
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d016      	beq.n	8003d7c <HAL_UART_IRQHandler+0x1b8>
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003d54:	687a      	ldr	r2, [r7, #4]
 8003d56:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003d58:	4610      	mov	r0, r2
 8003d5a:	4798      	blx	r3
 8003d5c:	e00e      	b.n	8003d7c <HAL_UART_IRQHandler+0x1b8>
 8003d5e:	6878      	ldr	r0, [r7, #4]
 8003d60:	f000 f8ec 	bl	8003f3c <HAL_UART_ErrorCallback>
 8003d64:	e00a      	b.n	8003d7c <HAL_UART_IRQHandler+0x1b8>
 8003d66:	6878      	ldr	r0, [r7, #4]
 8003d68:	f000 f8e8 	bl	8003f3c <HAL_UART_ErrorCallback>
 8003d6c:	e006      	b.n	8003d7c <HAL_UART_IRQHandler+0x1b8>
 8003d6e:	6878      	ldr	r0, [r7, #4]
 8003d70:	f000 f8e4 	bl	8003f3c <HAL_UART_ErrorCallback>
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	2200      	movs	r2, #0
 8003d78:	641a      	str	r2, [r3, #64]	; 0x40
 8003d7a:	e0c3      	b.n	8003f04 <HAL_UART_IRQHandler+0x340>
 8003d7c:	bf00      	nop
 8003d7e:	e0c1      	b.n	8003f04 <HAL_UART_IRQHandler+0x340>
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d84:	2b01      	cmp	r3, #1
 8003d86:	f040 80a1 	bne.w	8003ecc <HAL_UART_IRQHandler+0x308>
 8003d8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d8c:	f003 0310 	and.w	r3, r3, #16
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	f000 809b 	beq.w	8003ecc <HAL_UART_IRQHandler+0x308>
 8003d96:	6a3b      	ldr	r3, [r7, #32]
 8003d98:	f003 0310 	and.w	r3, r3, #16
 8003d9c:	2b00      	cmp	r3, #0
 8003d9e:	f000 8095 	beq.w	8003ecc <HAL_UART_IRQHandler+0x308>
 8003da2:	2300      	movs	r3, #0
 8003da4:	60fb      	str	r3, [r7, #12]
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	60fb      	str	r3, [r7, #12]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	685b      	ldr	r3, [r3, #4]
 8003db4:	60fb      	str	r3, [r7, #12]
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	695b      	ldr	r3, [r3, #20]
 8003dbe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d04e      	beq.n	8003e64 <HAL_UART_IRQHandler+0x2a0>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	685b      	ldr	r3, [r3, #4]
 8003dce:	823b      	strh	r3, [r7, #16]
 8003dd0:	8a3b      	ldrh	r3, [r7, #16]
 8003dd2:	2b00      	cmp	r3, #0
 8003dd4:	f000 8098 	beq.w	8003f08 <HAL_UART_IRQHandler+0x344>
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003ddc:	8a3a      	ldrh	r2, [r7, #16]
 8003dde:	429a      	cmp	r2, r3
 8003de0:	f080 8092 	bcs.w	8003f08 <HAL_UART_IRQHandler+0x344>
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	8a3a      	ldrh	r2, [r7, #16]
 8003de8:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003dee:	699b      	ldr	r3, [r3, #24]
 8003df0:	2b20      	cmp	r3, #32
 8003df2:	d02b      	beq.n	8003e4c <HAL_UART_IRQHandler+0x288>
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	68da      	ldr	r2, [r3, #12]
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003e02:	60da      	str	r2, [r3, #12]
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	695a      	ldr	r2, [r3, #20]
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	f022 0201 	bic.w	r2, r2, #1
 8003e12:	615a      	str	r2, [r3, #20]
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	695a      	ldr	r2, [r3, #20]
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003e22:	615a      	str	r2, [r3, #20]
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	2220      	movs	r2, #32
 8003e28:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	2200      	movs	r2, #0
 8003e30:	631a      	str	r2, [r3, #48]	; 0x30
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	68da      	ldr	r2, [r3, #12]
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	f022 0210 	bic.w	r2, r2, #16
 8003e40:	60da      	str	r2, [r3, #12]
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003e46:	4618      	mov	r0, r3
 8003e48:	f7fd ffdd 	bl	8001e06 <HAL_DMA_Abort>
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003e54:	b29b      	uxth	r3, r3
 8003e56:	1ad3      	subs	r3, r2, r3
 8003e58:	b29b      	uxth	r3, r3
 8003e5a:	4619      	mov	r1, r3
 8003e5c:	6878      	ldr	r0, [r7, #4]
 8003e5e:	f000 f876 	bl	8003f4e <HAL_UARTEx_RxEventCallback>
 8003e62:	e051      	b.n	8003f08 <HAL_UART_IRQHandler+0x344>
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003e6c:	b29b      	uxth	r3, r3
 8003e6e:	1ad3      	subs	r3, r2, r3
 8003e70:	827b      	strh	r3, [r7, #18]
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003e76:	b29b      	uxth	r3, r3
 8003e78:	2b00      	cmp	r3, #0
 8003e7a:	d047      	beq.n	8003f0c <HAL_UART_IRQHandler+0x348>
 8003e7c:	8a7b      	ldrh	r3, [r7, #18]
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	d044      	beq.n	8003f0c <HAL_UART_IRQHandler+0x348>
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	68da      	ldr	r2, [r3, #12]
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003e90:	60da      	str	r2, [r3, #12]
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	695a      	ldr	r2, [r3, #20]
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	f022 0201 	bic.w	r2, r2, #1
 8003ea0:	615a      	str	r2, [r3, #20]
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	2220      	movs	r2, #32
 8003ea6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	2200      	movs	r2, #0
 8003eae:	631a      	str	r2, [r3, #48]	; 0x30
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	68da      	ldr	r2, [r3, #12]
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	f022 0210 	bic.w	r2, r2, #16
 8003ebe:	60da      	str	r2, [r3, #12]
 8003ec0:	8a7b      	ldrh	r3, [r7, #18]
 8003ec2:	4619      	mov	r1, r3
 8003ec4:	6878      	ldr	r0, [r7, #4]
 8003ec6:	f000 f842 	bl	8003f4e <HAL_UARTEx_RxEventCallback>
 8003eca:	e01f      	b.n	8003f0c <HAL_UART_IRQHandler+0x348>
 8003ecc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ece:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d008      	beq.n	8003ee8 <HAL_UART_IRQHandler+0x324>
 8003ed6:	6a3b      	ldr	r3, [r7, #32]
 8003ed8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d003      	beq.n	8003ee8 <HAL_UART_IRQHandler+0x324>
 8003ee0:	6878      	ldr	r0, [r7, #4]
 8003ee2:	f000 f8c9 	bl	8004078 <UART_Transmit_IT>
 8003ee6:	e012      	b.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003ee8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003eea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d00d      	beq.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003ef2:	6a3b      	ldr	r3, [r7, #32]
 8003ef4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d008      	beq.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003efc:	6878      	ldr	r0, [r7, #4]
 8003efe:	f000 f90a 	bl	8004116 <UART_EndTransmit_IT>
 8003f02:	e004      	b.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003f04:	bf00      	nop
 8003f06:	e002      	b.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003f08:	bf00      	nop
 8003f0a:	e000      	b.n	8003f0e <HAL_UART_IRQHandler+0x34a>
 8003f0c:	bf00      	nop
 8003f0e:	3728      	adds	r7, #40	; 0x28
 8003f10:	46bd      	mov	sp, r7
 8003f12:	bd80      	pop	{r7, pc}
 8003f14:	08004051 	.word	0x08004051

08003f18 <HAL_UART_TxCpltCallback>:
 8003f18:	b480      	push	{r7}
 8003f1a:	b083      	sub	sp, #12
 8003f1c:	af00      	add	r7, sp, #0
 8003f1e:	6078      	str	r0, [r7, #4]
 8003f20:	bf00      	nop
 8003f22:	370c      	adds	r7, #12
 8003f24:	46bd      	mov	sp, r7
 8003f26:	bc80      	pop	{r7}
 8003f28:	4770      	bx	lr

08003f2a <HAL_UART_RxCpltCallback>:
 8003f2a:	b480      	push	{r7}
 8003f2c:	b083      	sub	sp, #12
 8003f2e:	af00      	add	r7, sp, #0
 8003f30:	6078      	str	r0, [r7, #4]
 8003f32:	bf00      	nop
 8003f34:	370c      	adds	r7, #12
 8003f36:	46bd      	mov	sp, r7
 8003f38:	bc80      	pop	{r7}
 8003f3a:	4770      	bx	lr

08003f3c <HAL_UART_ErrorCallback>:
 8003f3c:	b480      	push	{r7}
 8003f3e:	b083      	sub	sp, #12
 8003f40:	af00      	add	r7, sp, #0
 8003f42:	6078      	str	r0, [r7, #4]
 8003f44:	bf00      	nop
 8003f46:	370c      	adds	r7, #12
 8003f48:	46bd      	mov	sp, r7
 8003f4a:	bc80      	pop	{r7}
 8003f4c:	4770      	bx	lr

08003f4e <HAL_UARTEx_RxEventCallback>:
 8003f4e:	b480      	push	{r7}
 8003f50:	b083      	sub	sp, #12
 8003f52:	af00      	add	r7, sp, #0
 8003f54:	6078      	str	r0, [r7, #4]
 8003f56:	460b      	mov	r3, r1
 8003f58:	807b      	strh	r3, [r7, #2]
 8003f5a:	bf00      	nop
 8003f5c:	370c      	adds	r7, #12
 8003f5e:	46bd      	mov	sp, r7
 8003f60:	bc80      	pop	{r7}
 8003f62:	4770      	bx	lr

08003f64 <UART_WaitOnFlagUntilTimeout>:
 8003f64:	b580      	push	{r7, lr}
 8003f66:	b084      	sub	sp, #16
 8003f68:	af00      	add	r7, sp, #0
 8003f6a:	60f8      	str	r0, [r7, #12]
 8003f6c:	60b9      	str	r1, [r7, #8]
 8003f6e:	603b      	str	r3, [r7, #0]
 8003f70:	4613      	mov	r3, r2
 8003f72:	71fb      	strb	r3, [r7, #7]
 8003f74:	e02c      	b.n	8003fd0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003f76:	69bb      	ldr	r3, [r7, #24]
 8003f78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f7c:	d028      	beq.n	8003fd0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003f7e:	69bb      	ldr	r3, [r7, #24]
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	d007      	beq.n	8003f94 <UART_WaitOnFlagUntilTimeout+0x30>
 8003f84:	f7fd fe28 	bl	8001bd8 <HAL_GetTick>
 8003f88:	4602      	mov	r2, r0
 8003f8a:	683b      	ldr	r3, [r7, #0]
 8003f8c:	1ad3      	subs	r3, r2, r3
 8003f8e:	69ba      	ldr	r2, [r7, #24]
 8003f90:	429a      	cmp	r2, r3
 8003f92:	d21d      	bcs.n	8003fd0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	68da      	ldr	r2, [r3, #12]
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003fa2:	60da      	str	r2, [r3, #12]
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	695a      	ldr	r2, [r3, #20]
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	f022 0201 	bic.w	r2, r2, #1
 8003fb2:	615a      	str	r2, [r3, #20]
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	2220      	movs	r2, #32
 8003fb8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	2220      	movs	r2, #32
 8003fc0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	2200      	movs	r2, #0
 8003fc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003fcc:	2303      	movs	r3, #3
 8003fce:	e00f      	b.n	8003ff0 <UART_WaitOnFlagUntilTimeout+0x8c>
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	681a      	ldr	r2, [r3, #0]
 8003fd6:	68bb      	ldr	r3, [r7, #8]
 8003fd8:	4013      	ands	r3, r2
 8003fda:	68ba      	ldr	r2, [r7, #8]
 8003fdc:	429a      	cmp	r2, r3
 8003fde:	bf0c      	ite	eq
 8003fe0:	2301      	moveq	r3, #1
 8003fe2:	2300      	movne	r3, #0
 8003fe4:	b2db      	uxtb	r3, r3
 8003fe6:	461a      	mov	r2, r3
 8003fe8:	79fb      	ldrb	r3, [r7, #7]
 8003fea:	429a      	cmp	r2, r3
 8003fec:	d0c3      	beq.n	8003f76 <UART_WaitOnFlagUntilTimeout+0x12>
 8003fee:	2300      	movs	r3, #0
 8003ff0:	4618      	mov	r0, r3
 8003ff2:	3710      	adds	r7, #16
 8003ff4:	46bd      	mov	sp, r7
 8003ff6:	bd80      	pop	{r7, pc}

08003ff8 <UART_EndRxTransfer>:
 8003ff8:	b480      	push	{r7}
 8003ffa:	b083      	sub	sp, #12
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	6078      	str	r0, [r7, #4]
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	68da      	ldr	r2, [r3, #12]
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800400e:	60da      	str	r2, [r3, #12]
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	695a      	ldr	r2, [r3, #20]
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	681b      	ldr	r3, [r3, #0]
 800401a:	f022 0201 	bic.w	r2, r2, #1
 800401e:	615a      	str	r2, [r3, #20]
 8004020:	687b      	ldr	r3, [r7, #4]
 8004022:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004024:	2b01      	cmp	r3, #1
 8004026:	d107      	bne.n	8004038 <UART_EndRxTransfer+0x40>
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	68da      	ldr	r2, [r3, #12]
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	f022 0210 	bic.w	r2, r2, #16
 8004036:	60da      	str	r2, [r3, #12]
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	2220      	movs	r2, #32
 800403c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	2200      	movs	r2, #0
 8004044:	631a      	str	r2, [r3, #48]	; 0x30
 8004046:	bf00      	nop
 8004048:	370c      	adds	r7, #12
 800404a:	46bd      	mov	sp, r7
 800404c:	bc80      	pop	{r7}
 800404e:	4770      	bx	lr

08004050 <UART_DMAAbortOnError>:
 8004050:	b580      	push	{r7, lr}
 8004052:	b084      	sub	sp, #16
 8004054:	af00      	add	r7, sp, #0
 8004056:	6078      	str	r0, [r7, #4]
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800405c:	60fb      	str	r3, [r7, #12]
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	2200      	movs	r2, #0
 8004062:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	2200      	movs	r2, #0
 8004068:	84da      	strh	r2, [r3, #38]	; 0x26
 800406a:	68f8      	ldr	r0, [r7, #12]
 800406c:	f7ff ff66 	bl	8003f3c <HAL_UART_ErrorCallback>
 8004070:	bf00      	nop
 8004072:	3710      	adds	r7, #16
 8004074:	46bd      	mov	sp, r7
 8004076:	bd80      	pop	{r7, pc}

08004078 <UART_Transmit_IT>:
 8004078:	b480      	push	{r7}
 800407a:	b085      	sub	sp, #20
 800407c:	af00      	add	r7, sp, #0
 800407e:	6078      	str	r0, [r7, #4]
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004086:	b2db      	uxtb	r3, r3
 8004088:	2b21      	cmp	r3, #33	; 0x21
 800408a:	d13e      	bne.n	800410a <UART_Transmit_IT+0x92>
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	689b      	ldr	r3, [r3, #8]
 8004090:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004094:	d114      	bne.n	80040c0 <UART_Transmit_IT+0x48>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	691b      	ldr	r3, [r3, #16]
 800409a:	2b00      	cmp	r3, #0
 800409c:	d110      	bne.n	80040c0 <UART_Transmit_IT+0x48>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	6a1b      	ldr	r3, [r3, #32]
 80040a2:	60fb      	str	r3, [r7, #12]
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	881b      	ldrh	r3, [r3, #0]
 80040a8:	461a      	mov	r2, r3
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80040b2:	605a      	str	r2, [r3, #4]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	6a1b      	ldr	r3, [r3, #32]
 80040b8:	1c9a      	adds	r2, r3, #2
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	621a      	str	r2, [r3, #32]
 80040be:	e008      	b.n	80040d2 <UART_Transmit_IT+0x5a>
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	6a1b      	ldr	r3, [r3, #32]
 80040c4:	1c59      	adds	r1, r3, #1
 80040c6:	687a      	ldr	r2, [r7, #4]
 80040c8:	6211      	str	r1, [r2, #32]
 80040ca:	781a      	ldrb	r2, [r3, #0]
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	605a      	str	r2, [r3, #4]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80040d6:	b29b      	uxth	r3, r3
 80040d8:	3b01      	subs	r3, #1
 80040da:	b29b      	uxth	r3, r3
 80040dc:	687a      	ldr	r2, [r7, #4]
 80040de:	4619      	mov	r1, r3
 80040e0:	84d1      	strh	r1, [r2, #38]	; 0x26
 80040e2:	2b00      	cmp	r3, #0
 80040e4:	d10f      	bne.n	8004106 <UART_Transmit_IT+0x8e>
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	68da      	ldr	r2, [r3, #12]
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80040f4:	60da      	str	r2, [r3, #12]
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	68da      	ldr	r2, [r3, #12]
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004104:	60da      	str	r2, [r3, #12]
 8004106:	2300      	movs	r3, #0
 8004108:	e000      	b.n	800410c <UART_Transmit_IT+0x94>
 800410a:	2302      	movs	r3, #2
 800410c:	4618      	mov	r0, r3
 800410e:	3714      	adds	r7, #20
 8004110:	46bd      	mov	sp, r7
 8004112:	bc80      	pop	{r7}
 8004114:	4770      	bx	lr

08004116 <UART_EndTransmit_IT>:
 8004116:	b580      	push	{r7, lr}
 8004118:	b082      	sub	sp, #8
 800411a:	af00      	add	r7, sp, #0
 800411c:	6078      	str	r0, [r7, #4]
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	68da      	ldr	r2, [r3, #12]
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800412c:	60da      	str	r2, [r3, #12]
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	2220      	movs	r2, #32
 8004132:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004136:	6878      	ldr	r0, [r7, #4]
 8004138:	f7ff feee 	bl	8003f18 <HAL_UART_TxCpltCallback>
 800413c:	2300      	movs	r3, #0
 800413e:	4618      	mov	r0, r3
 8004140:	3708      	adds	r7, #8
 8004142:	46bd      	mov	sp, r7
 8004144:	bd80      	pop	{r7, pc}

08004146 <UART_Receive_IT>:
 8004146:	b580      	push	{r7, lr}
 8004148:	b086      	sub	sp, #24
 800414a:	af00      	add	r7, sp, #0
 800414c:	6078      	str	r0, [r7, #4]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004154:	b2db      	uxtb	r3, r3
 8004156:	2b22      	cmp	r3, #34	; 0x22
 8004158:	f040 8099 	bne.w	800428e <UART_Receive_IT+0x148>
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	689b      	ldr	r3, [r3, #8]
 8004160:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004164:	d117      	bne.n	8004196 <UART_Receive_IT+0x50>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	691b      	ldr	r3, [r3, #16]
 800416a:	2b00      	cmp	r3, #0
 800416c:	d113      	bne.n	8004196 <UART_Receive_IT+0x50>
 800416e:	2300      	movs	r3, #0
 8004170:	617b      	str	r3, [r7, #20]
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004176:	613b      	str	r3, [r7, #16]
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	685b      	ldr	r3, [r3, #4]
 800417e:	b29b      	uxth	r3, r3
 8004180:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004184:	b29a      	uxth	r2, r3
 8004186:	693b      	ldr	r3, [r7, #16]
 8004188:	801a      	strh	r2, [r3, #0]
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800418e:	1c9a      	adds	r2, r3, #2
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	629a      	str	r2, [r3, #40]	; 0x28
 8004194:	e026      	b.n	80041e4 <UART_Receive_IT+0x9e>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800419a:	617b      	str	r3, [r7, #20]
 800419c:	2300      	movs	r3, #0
 800419e:	613b      	str	r3, [r7, #16]
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	689b      	ldr	r3, [r3, #8]
 80041a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80041a8:	d007      	beq.n	80041ba <UART_Receive_IT+0x74>
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	689b      	ldr	r3, [r3, #8]
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d10a      	bne.n	80041c8 <UART_Receive_IT+0x82>
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	691b      	ldr	r3, [r3, #16]
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d106      	bne.n	80041c8 <UART_Receive_IT+0x82>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	685b      	ldr	r3, [r3, #4]
 80041c0:	b2da      	uxtb	r2, r3
 80041c2:	697b      	ldr	r3, [r7, #20]
 80041c4:	701a      	strb	r2, [r3, #0]
 80041c6:	e008      	b.n	80041da <UART_Receive_IT+0x94>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	685b      	ldr	r3, [r3, #4]
 80041ce:	b2db      	uxtb	r3, r3
 80041d0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80041d4:	b2da      	uxtb	r2, r3
 80041d6:	697b      	ldr	r3, [r7, #20]
 80041d8:	701a      	strb	r2, [r3, #0]
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80041de:	1c5a      	adds	r2, r3, #1
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	629a      	str	r2, [r3, #40]	; 0x28
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80041e8:	b29b      	uxth	r3, r3
 80041ea:	3b01      	subs	r3, #1
 80041ec:	b29b      	uxth	r3, r3
 80041ee:	687a      	ldr	r2, [r7, #4]
 80041f0:	4619      	mov	r1, r3
 80041f2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d148      	bne.n	800428a <UART_Receive_IT+0x144>
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	68da      	ldr	r2, [r3, #12]
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	f022 0220 	bic.w	r2, r2, #32
 8004206:	60da      	str	r2, [r3, #12]
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	68da      	ldr	r2, [r3, #12]
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004216:	60da      	str	r2, [r3, #12]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	695a      	ldr	r2, [r3, #20]
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	f022 0201 	bic.w	r2, r2, #1
 8004226:	615a      	str	r2, [r3, #20]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	2220      	movs	r2, #32
 800422c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004234:	2b01      	cmp	r3, #1
 8004236:	d123      	bne.n	8004280 <UART_Receive_IT+0x13a>
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	2200      	movs	r2, #0
 800423c:	631a      	str	r2, [r3, #48]	; 0x30
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	68da      	ldr	r2, [r3, #12]
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	f022 0210 	bic.w	r2, r2, #16
 800424c:	60da      	str	r2, [r3, #12]
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	f003 0310 	and.w	r3, r3, #16
 8004258:	2b10      	cmp	r3, #16
 800425a:	d10a      	bne.n	8004272 <UART_Receive_IT+0x12c>
 800425c:	2300      	movs	r3, #0
 800425e:	60fb      	str	r3, [r7, #12]
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	60fb      	str	r3, [r7, #12]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	685b      	ldr	r3, [r3, #4]
 800426e:	60fb      	str	r3, [r7, #12]
 8004270:	68fb      	ldr	r3, [r7, #12]
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004276:	4619      	mov	r1, r3
 8004278:	6878      	ldr	r0, [r7, #4]
 800427a:	f7ff fe68 	bl	8003f4e <HAL_UARTEx_RxEventCallback>
 800427e:	e002      	b.n	8004286 <UART_Receive_IT+0x140>
 8004280:	6878      	ldr	r0, [r7, #4]
 8004282:	f7ff fe52 	bl	8003f2a <HAL_UART_RxCpltCallback>
 8004286:	2300      	movs	r3, #0
 8004288:	e002      	b.n	8004290 <UART_Receive_IT+0x14a>
 800428a:	2300      	movs	r3, #0
 800428c:	e000      	b.n	8004290 <UART_Receive_IT+0x14a>
 800428e:	2302      	movs	r3, #2
 8004290:	4618      	mov	r0, r3
 8004292:	3718      	adds	r7, #24
 8004294:	46bd      	mov	sp, r7
 8004296:	bd80      	pop	{r7, pc}

08004298 <UART_SetConfig>:
 8004298:	b580      	push	{r7, lr}
 800429a:	b084      	sub	sp, #16
 800429c:	af00      	add	r7, sp, #0
 800429e:	6078      	str	r0, [r7, #4]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	691b      	ldr	r3, [r3, #16]
 80042a6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	68da      	ldr	r2, [r3, #12]
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	430a      	orrs	r2, r1
 80042b4:	611a      	str	r2, [r3, #16]
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	689a      	ldr	r2, [r3, #8]
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	691b      	ldr	r3, [r3, #16]
 80042be:	431a      	orrs	r2, r3
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	695b      	ldr	r3, [r3, #20]
 80042c4:	4313      	orrs	r3, r2
 80042c6:	60bb      	str	r3, [r7, #8]
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	68db      	ldr	r3, [r3, #12]
 80042ce:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80042d2:	f023 030c 	bic.w	r3, r3, #12
 80042d6:	687a      	ldr	r2, [r7, #4]
 80042d8:	6812      	ldr	r2, [r2, #0]
 80042da:	68b9      	ldr	r1, [r7, #8]
 80042dc:	430b      	orrs	r3, r1
 80042de:	60d3      	str	r3, [r2, #12]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	695b      	ldr	r3, [r3, #20]
 80042e6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	699a      	ldr	r2, [r3, #24]
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	430a      	orrs	r2, r1
 80042f4:	615a      	str	r2, [r3, #20]
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	4a2c      	ldr	r2, [pc, #176]	; (80043ac <UART_SetConfig+0x114>)
 80042fc:	4293      	cmp	r3, r2
 80042fe:	d103      	bne.n	8004308 <UART_SetConfig+0x70>
 8004300:	f7fe fbf0 	bl	8002ae4 <HAL_RCC_GetPCLK2Freq>
 8004304:	60f8      	str	r0, [r7, #12]
 8004306:	e002      	b.n	800430e <UART_SetConfig+0x76>
 8004308:	f7fe fbd8 	bl	8002abc <HAL_RCC_GetPCLK1Freq>
 800430c:	60f8      	str	r0, [r7, #12]
 800430e:	68fa      	ldr	r2, [r7, #12]
 8004310:	4613      	mov	r3, r2
 8004312:	009b      	lsls	r3, r3, #2
 8004314:	4413      	add	r3, r2
 8004316:	009a      	lsls	r2, r3, #2
 8004318:	441a      	add	r2, r3
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	685b      	ldr	r3, [r3, #4]
 800431e:	009b      	lsls	r3, r3, #2
 8004320:	fbb2 f3f3 	udiv	r3, r2, r3
 8004324:	4a22      	ldr	r2, [pc, #136]	; (80043b0 <UART_SetConfig+0x118>)
 8004326:	fba2 2303 	umull	r2, r3, r2, r3
 800432a:	095b      	lsrs	r3, r3, #5
 800432c:	0119      	lsls	r1, r3, #4
 800432e:	68fa      	ldr	r2, [r7, #12]
 8004330:	4613      	mov	r3, r2
 8004332:	009b      	lsls	r3, r3, #2
 8004334:	4413      	add	r3, r2
 8004336:	009a      	lsls	r2, r3, #2
 8004338:	441a      	add	r2, r3
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	685b      	ldr	r3, [r3, #4]
 800433e:	009b      	lsls	r3, r3, #2
 8004340:	fbb2 f2f3 	udiv	r2, r2, r3
 8004344:	4b1a      	ldr	r3, [pc, #104]	; (80043b0 <UART_SetConfig+0x118>)
 8004346:	fba3 0302 	umull	r0, r3, r3, r2
 800434a:	095b      	lsrs	r3, r3, #5
 800434c:	2064      	movs	r0, #100	; 0x64
 800434e:	fb00 f303 	mul.w	r3, r0, r3
 8004352:	1ad3      	subs	r3, r2, r3
 8004354:	011b      	lsls	r3, r3, #4
 8004356:	3332      	adds	r3, #50	; 0x32
 8004358:	4a15      	ldr	r2, [pc, #84]	; (80043b0 <UART_SetConfig+0x118>)
 800435a:	fba2 2303 	umull	r2, r3, r2, r3
 800435e:	095b      	lsrs	r3, r3, #5
 8004360:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004364:	4419      	add	r1, r3
 8004366:	68fa      	ldr	r2, [r7, #12]
 8004368:	4613      	mov	r3, r2
 800436a:	009b      	lsls	r3, r3, #2
 800436c:	4413      	add	r3, r2
 800436e:	009a      	lsls	r2, r3, #2
 8004370:	441a      	add	r2, r3
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	685b      	ldr	r3, [r3, #4]
 8004376:	009b      	lsls	r3, r3, #2
 8004378:	fbb2 f2f3 	udiv	r2, r2, r3
 800437c:	4b0c      	ldr	r3, [pc, #48]	; (80043b0 <UART_SetConfig+0x118>)
 800437e:	fba3 0302 	umull	r0, r3, r3, r2
 8004382:	095b      	lsrs	r3, r3, #5
 8004384:	2064      	movs	r0, #100	; 0x64
 8004386:	fb00 f303 	mul.w	r3, r0, r3
 800438a:	1ad3      	subs	r3, r2, r3
 800438c:	011b      	lsls	r3, r3, #4
 800438e:	3332      	adds	r3, #50	; 0x32
 8004390:	4a07      	ldr	r2, [pc, #28]	; (80043b0 <UART_SetConfig+0x118>)
 8004392:	fba2 2303 	umull	r2, r3, r2, r3
 8004396:	095b      	lsrs	r3, r3, #5
 8004398:	f003 020f 	and.w	r2, r3, #15
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	440a      	add	r2, r1
 80043a2:	609a      	str	r2, [r3, #8]
 80043a4:	bf00      	nop
 80043a6:	3710      	adds	r7, #16
 80043a8:	46bd      	mov	sp, r7
 80043aa:	bd80      	pop	{r7, pc}
 80043ac:	40013800 	.word	0x40013800
 80043b0:	51eb851f 	.word	0x51eb851f

080043b4 <__errno>:
 80043b4:	4b01      	ldr	r3, [pc, #4]	; (80043bc <__errno+0x8>)
 80043b6:	6818      	ldr	r0, [r3, #0]
 80043b8:	4770      	bx	lr
 80043ba:	bf00      	nop
 80043bc:	20000030 	.word	0x20000030

080043c0 <__libc_init_array>:
 80043c0:	b570      	push	{r4, r5, r6, lr}
 80043c2:	2600      	movs	r6, #0
 80043c4:	4d0c      	ldr	r5, [pc, #48]	; (80043f8 <__libc_init_array+0x38>)
 80043c6:	4c0d      	ldr	r4, [pc, #52]	; (80043fc <__libc_init_array+0x3c>)
 80043c8:	1b64      	subs	r4, r4, r5
 80043ca:	10a4      	asrs	r4, r4, #2
 80043cc:	42a6      	cmp	r6, r4
 80043ce:	d109      	bne.n	80043e4 <__libc_init_array+0x24>
 80043d0:	f000 fc5c 	bl	8004c8c <_init>
 80043d4:	2600      	movs	r6, #0
 80043d6:	4d0a      	ldr	r5, [pc, #40]	; (8004400 <__libc_init_array+0x40>)
 80043d8:	4c0a      	ldr	r4, [pc, #40]	; (8004404 <__libc_init_array+0x44>)
 80043da:	1b64      	subs	r4, r4, r5
 80043dc:	10a4      	asrs	r4, r4, #2
 80043de:	42a6      	cmp	r6, r4
 80043e0:	d105      	bne.n	80043ee <__libc_init_array+0x2e>
 80043e2:	bd70      	pop	{r4, r5, r6, pc}
 80043e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80043e8:	4798      	blx	r3
 80043ea:	3601      	adds	r6, #1
 80043ec:	e7ee      	b.n	80043cc <__libc_init_array+0xc>
 80043ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80043f2:	4798      	blx	r3
 80043f4:	3601      	adds	r6, #1
 80043f6:	e7f2      	b.n	80043de <__libc_init_array+0x1e>
 80043f8:	08004da8 	.word	0x08004da8
 80043fc:	08004da8 	.word	0x08004da8
 8004400:	08004da8 	.word	0x08004da8
 8004404:	08004dac 	.word	0x08004dac

08004408 <memset>:
 8004408:	4603      	mov	r3, r0
 800440a:	4402      	add	r2, r0
 800440c:	4293      	cmp	r3, r2
 800440e:	d100      	bne.n	8004412 <memset+0xa>
 8004410:	4770      	bx	lr
 8004412:	f803 1b01 	strb.w	r1, [r3], #1
 8004416:	e7f9      	b.n	800440c <memset+0x4>

08004418 <siprintf>:
 8004418:	b40e      	push	{r1, r2, r3}
 800441a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800441e:	b500      	push	{lr}
 8004420:	b09c      	sub	sp, #112	; 0x70
 8004422:	ab1d      	add	r3, sp, #116	; 0x74
 8004424:	9002      	str	r0, [sp, #8]
 8004426:	9006      	str	r0, [sp, #24]
 8004428:	9107      	str	r1, [sp, #28]
 800442a:	9104      	str	r1, [sp, #16]
 800442c:	4808      	ldr	r0, [pc, #32]	; (8004450 <siprintf+0x38>)
 800442e:	4909      	ldr	r1, [pc, #36]	; (8004454 <siprintf+0x3c>)
 8004430:	f853 2b04 	ldr.w	r2, [r3], #4
 8004434:	9105      	str	r1, [sp, #20]
 8004436:	6800      	ldr	r0, [r0, #0]
 8004438:	a902      	add	r1, sp, #8
 800443a:	9301      	str	r3, [sp, #4]
 800443c:	f000 f868 	bl	8004510 <_svfiprintf_r>
 8004440:	2200      	movs	r2, #0
 8004442:	9b02      	ldr	r3, [sp, #8]
 8004444:	701a      	strb	r2, [r3, #0]
 8004446:	b01c      	add	sp, #112	; 0x70
 8004448:	f85d eb04 	ldr.w	lr, [sp], #4
 800444c:	b003      	add	sp, #12
 800444e:	4770      	bx	lr
 8004450:	20000030 	.word	0x20000030
 8004454:	ffff0208 	.word	0xffff0208

08004458 <__ssputs_r>:
 8004458:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800445c:	688e      	ldr	r6, [r1, #8]
 800445e:	4682      	mov	sl, r0
 8004460:	429e      	cmp	r6, r3
 8004462:	460c      	mov	r4, r1
 8004464:	4690      	mov	r8, r2
 8004466:	461f      	mov	r7, r3
 8004468:	d838      	bhi.n	80044dc <__ssputs_r+0x84>
 800446a:	898a      	ldrh	r2, [r1, #12]
 800446c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004470:	d032      	beq.n	80044d8 <__ssputs_r+0x80>
 8004472:	6825      	ldr	r5, [r4, #0]
 8004474:	6909      	ldr	r1, [r1, #16]
 8004476:	3301      	adds	r3, #1
 8004478:	eba5 0901 	sub.w	r9, r5, r1
 800447c:	6965      	ldr	r5, [r4, #20]
 800447e:	444b      	add	r3, r9
 8004480:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004484:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004488:	106d      	asrs	r5, r5, #1
 800448a:	429d      	cmp	r5, r3
 800448c:	bf38      	it	cc
 800448e:	461d      	movcc	r5, r3
 8004490:	0553      	lsls	r3, r2, #21
 8004492:	d531      	bpl.n	80044f8 <__ssputs_r+0xa0>
 8004494:	4629      	mov	r1, r5
 8004496:	f000 fb53 	bl	8004b40 <_malloc_r>
 800449a:	4606      	mov	r6, r0
 800449c:	b950      	cbnz	r0, 80044b4 <__ssputs_r+0x5c>
 800449e:	230c      	movs	r3, #12
 80044a0:	f04f 30ff 	mov.w	r0, #4294967295
 80044a4:	f8ca 3000 	str.w	r3, [sl]
 80044a8:	89a3      	ldrh	r3, [r4, #12]
 80044aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044ae:	81a3      	strh	r3, [r4, #12]
 80044b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80044b4:	464a      	mov	r2, r9
 80044b6:	6921      	ldr	r1, [r4, #16]
 80044b8:	f000 face 	bl	8004a58 <memcpy>
 80044bc:	89a3      	ldrh	r3, [r4, #12]
 80044be:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80044c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80044c6:	81a3      	strh	r3, [r4, #12]
 80044c8:	6126      	str	r6, [r4, #16]
 80044ca:	444e      	add	r6, r9
 80044cc:	6026      	str	r6, [r4, #0]
 80044ce:	463e      	mov	r6, r7
 80044d0:	6165      	str	r5, [r4, #20]
 80044d2:	eba5 0509 	sub.w	r5, r5, r9
 80044d6:	60a5      	str	r5, [r4, #8]
 80044d8:	42be      	cmp	r6, r7
 80044da:	d900      	bls.n	80044de <__ssputs_r+0x86>
 80044dc:	463e      	mov	r6, r7
 80044de:	4632      	mov	r2, r6
 80044e0:	4641      	mov	r1, r8
 80044e2:	6820      	ldr	r0, [r4, #0]
 80044e4:	f000 fac6 	bl	8004a74 <memmove>
 80044e8:	68a3      	ldr	r3, [r4, #8]
 80044ea:	6822      	ldr	r2, [r4, #0]
 80044ec:	1b9b      	subs	r3, r3, r6
 80044ee:	4432      	add	r2, r6
 80044f0:	2000      	movs	r0, #0
 80044f2:	60a3      	str	r3, [r4, #8]
 80044f4:	6022      	str	r2, [r4, #0]
 80044f6:	e7db      	b.n	80044b0 <__ssputs_r+0x58>
 80044f8:	462a      	mov	r2, r5
 80044fa:	f000 fb7b 	bl	8004bf4 <_realloc_r>
 80044fe:	4606      	mov	r6, r0
 8004500:	2800      	cmp	r0, #0
 8004502:	d1e1      	bne.n	80044c8 <__ssputs_r+0x70>
 8004504:	4650      	mov	r0, sl
 8004506:	6921      	ldr	r1, [r4, #16]
 8004508:	f000 face 	bl	8004aa8 <_free_r>
 800450c:	e7c7      	b.n	800449e <__ssputs_r+0x46>
	...

08004510 <_svfiprintf_r>:
 8004510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004514:	4698      	mov	r8, r3
 8004516:	898b      	ldrh	r3, [r1, #12]
 8004518:	4607      	mov	r7, r0
 800451a:	061b      	lsls	r3, r3, #24
 800451c:	460d      	mov	r5, r1
 800451e:	4614      	mov	r4, r2
 8004520:	b09d      	sub	sp, #116	; 0x74
 8004522:	d50e      	bpl.n	8004542 <_svfiprintf_r+0x32>
 8004524:	690b      	ldr	r3, [r1, #16]
 8004526:	b963      	cbnz	r3, 8004542 <_svfiprintf_r+0x32>
 8004528:	2140      	movs	r1, #64	; 0x40
 800452a:	f000 fb09 	bl	8004b40 <_malloc_r>
 800452e:	6028      	str	r0, [r5, #0]
 8004530:	6128      	str	r0, [r5, #16]
 8004532:	b920      	cbnz	r0, 800453e <_svfiprintf_r+0x2e>
 8004534:	230c      	movs	r3, #12
 8004536:	603b      	str	r3, [r7, #0]
 8004538:	f04f 30ff 	mov.w	r0, #4294967295
 800453c:	e0d1      	b.n	80046e2 <_svfiprintf_r+0x1d2>
 800453e:	2340      	movs	r3, #64	; 0x40
 8004540:	616b      	str	r3, [r5, #20]
 8004542:	2300      	movs	r3, #0
 8004544:	9309      	str	r3, [sp, #36]	; 0x24
 8004546:	2320      	movs	r3, #32
 8004548:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800454c:	2330      	movs	r3, #48	; 0x30
 800454e:	f04f 0901 	mov.w	r9, #1
 8004552:	f8cd 800c 	str.w	r8, [sp, #12]
 8004556:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80046fc <_svfiprintf_r+0x1ec>
 800455a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800455e:	4623      	mov	r3, r4
 8004560:	469a      	mov	sl, r3
 8004562:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004566:	b10a      	cbz	r2, 800456c <_svfiprintf_r+0x5c>
 8004568:	2a25      	cmp	r2, #37	; 0x25
 800456a:	d1f9      	bne.n	8004560 <_svfiprintf_r+0x50>
 800456c:	ebba 0b04 	subs.w	fp, sl, r4
 8004570:	d00b      	beq.n	800458a <_svfiprintf_r+0x7a>
 8004572:	465b      	mov	r3, fp
 8004574:	4622      	mov	r2, r4
 8004576:	4629      	mov	r1, r5
 8004578:	4638      	mov	r0, r7
 800457a:	f7ff ff6d 	bl	8004458 <__ssputs_r>
 800457e:	3001      	adds	r0, #1
 8004580:	f000 80aa 	beq.w	80046d8 <_svfiprintf_r+0x1c8>
 8004584:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004586:	445a      	add	r2, fp
 8004588:	9209      	str	r2, [sp, #36]	; 0x24
 800458a:	f89a 3000 	ldrb.w	r3, [sl]
 800458e:	2b00      	cmp	r3, #0
 8004590:	f000 80a2 	beq.w	80046d8 <_svfiprintf_r+0x1c8>
 8004594:	2300      	movs	r3, #0
 8004596:	f04f 32ff 	mov.w	r2, #4294967295
 800459a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800459e:	f10a 0a01 	add.w	sl, sl, #1
 80045a2:	9304      	str	r3, [sp, #16]
 80045a4:	9307      	str	r3, [sp, #28]
 80045a6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80045aa:	931a      	str	r3, [sp, #104]	; 0x68
 80045ac:	4654      	mov	r4, sl
 80045ae:	2205      	movs	r2, #5
 80045b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045b4:	4851      	ldr	r0, [pc, #324]	; (80046fc <_svfiprintf_r+0x1ec>)
 80045b6:	f000 fa41 	bl	8004a3c <memchr>
 80045ba:	9a04      	ldr	r2, [sp, #16]
 80045bc:	b9d8      	cbnz	r0, 80045f6 <_svfiprintf_r+0xe6>
 80045be:	06d0      	lsls	r0, r2, #27
 80045c0:	bf44      	itt	mi
 80045c2:	2320      	movmi	r3, #32
 80045c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045c8:	0711      	lsls	r1, r2, #28
 80045ca:	bf44      	itt	mi
 80045cc:	232b      	movmi	r3, #43	; 0x2b
 80045ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80045d2:	f89a 3000 	ldrb.w	r3, [sl]
 80045d6:	2b2a      	cmp	r3, #42	; 0x2a
 80045d8:	d015      	beq.n	8004606 <_svfiprintf_r+0xf6>
 80045da:	4654      	mov	r4, sl
 80045dc:	2000      	movs	r0, #0
 80045de:	f04f 0c0a 	mov.w	ip, #10
 80045e2:	9a07      	ldr	r2, [sp, #28]
 80045e4:	4621      	mov	r1, r4
 80045e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80045ea:	3b30      	subs	r3, #48	; 0x30
 80045ec:	2b09      	cmp	r3, #9
 80045ee:	d94e      	bls.n	800468e <_svfiprintf_r+0x17e>
 80045f0:	b1b0      	cbz	r0, 8004620 <_svfiprintf_r+0x110>
 80045f2:	9207      	str	r2, [sp, #28]
 80045f4:	e014      	b.n	8004620 <_svfiprintf_r+0x110>
 80045f6:	eba0 0308 	sub.w	r3, r0, r8
 80045fa:	fa09 f303 	lsl.w	r3, r9, r3
 80045fe:	4313      	orrs	r3, r2
 8004600:	46a2      	mov	sl, r4
 8004602:	9304      	str	r3, [sp, #16]
 8004604:	e7d2      	b.n	80045ac <_svfiprintf_r+0x9c>
 8004606:	9b03      	ldr	r3, [sp, #12]
 8004608:	1d19      	adds	r1, r3, #4
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	9103      	str	r1, [sp, #12]
 800460e:	2b00      	cmp	r3, #0
 8004610:	bfbb      	ittet	lt
 8004612:	425b      	neglt	r3, r3
 8004614:	f042 0202 	orrlt.w	r2, r2, #2
 8004618:	9307      	strge	r3, [sp, #28]
 800461a:	9307      	strlt	r3, [sp, #28]
 800461c:	bfb8      	it	lt
 800461e:	9204      	strlt	r2, [sp, #16]
 8004620:	7823      	ldrb	r3, [r4, #0]
 8004622:	2b2e      	cmp	r3, #46	; 0x2e
 8004624:	d10c      	bne.n	8004640 <_svfiprintf_r+0x130>
 8004626:	7863      	ldrb	r3, [r4, #1]
 8004628:	2b2a      	cmp	r3, #42	; 0x2a
 800462a:	d135      	bne.n	8004698 <_svfiprintf_r+0x188>
 800462c:	9b03      	ldr	r3, [sp, #12]
 800462e:	3402      	adds	r4, #2
 8004630:	1d1a      	adds	r2, r3, #4
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	9203      	str	r2, [sp, #12]
 8004636:	2b00      	cmp	r3, #0
 8004638:	bfb8      	it	lt
 800463a:	f04f 33ff 	movlt.w	r3, #4294967295
 800463e:	9305      	str	r3, [sp, #20]
 8004640:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800470c <_svfiprintf_r+0x1fc>
 8004644:	2203      	movs	r2, #3
 8004646:	4650      	mov	r0, sl
 8004648:	7821      	ldrb	r1, [r4, #0]
 800464a:	f000 f9f7 	bl	8004a3c <memchr>
 800464e:	b140      	cbz	r0, 8004662 <_svfiprintf_r+0x152>
 8004650:	2340      	movs	r3, #64	; 0x40
 8004652:	eba0 000a 	sub.w	r0, r0, sl
 8004656:	fa03 f000 	lsl.w	r0, r3, r0
 800465a:	9b04      	ldr	r3, [sp, #16]
 800465c:	3401      	adds	r4, #1
 800465e:	4303      	orrs	r3, r0
 8004660:	9304      	str	r3, [sp, #16]
 8004662:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004666:	2206      	movs	r2, #6
 8004668:	4825      	ldr	r0, [pc, #148]	; (8004700 <_svfiprintf_r+0x1f0>)
 800466a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800466e:	f000 f9e5 	bl	8004a3c <memchr>
 8004672:	2800      	cmp	r0, #0
 8004674:	d038      	beq.n	80046e8 <_svfiprintf_r+0x1d8>
 8004676:	4b23      	ldr	r3, [pc, #140]	; (8004704 <_svfiprintf_r+0x1f4>)
 8004678:	bb1b      	cbnz	r3, 80046c2 <_svfiprintf_r+0x1b2>
 800467a:	9b03      	ldr	r3, [sp, #12]
 800467c:	3307      	adds	r3, #7
 800467e:	f023 0307 	bic.w	r3, r3, #7
 8004682:	3308      	adds	r3, #8
 8004684:	9303      	str	r3, [sp, #12]
 8004686:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004688:	4433      	add	r3, r6
 800468a:	9309      	str	r3, [sp, #36]	; 0x24
 800468c:	e767      	b.n	800455e <_svfiprintf_r+0x4e>
 800468e:	460c      	mov	r4, r1
 8004690:	2001      	movs	r0, #1
 8004692:	fb0c 3202 	mla	r2, ip, r2, r3
 8004696:	e7a5      	b.n	80045e4 <_svfiprintf_r+0xd4>
 8004698:	2300      	movs	r3, #0
 800469a:	f04f 0c0a 	mov.w	ip, #10
 800469e:	4619      	mov	r1, r3
 80046a0:	3401      	adds	r4, #1
 80046a2:	9305      	str	r3, [sp, #20]
 80046a4:	4620      	mov	r0, r4
 80046a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80046aa:	3a30      	subs	r2, #48	; 0x30
 80046ac:	2a09      	cmp	r2, #9
 80046ae:	d903      	bls.n	80046b8 <_svfiprintf_r+0x1a8>
 80046b0:	2b00      	cmp	r3, #0
 80046b2:	d0c5      	beq.n	8004640 <_svfiprintf_r+0x130>
 80046b4:	9105      	str	r1, [sp, #20]
 80046b6:	e7c3      	b.n	8004640 <_svfiprintf_r+0x130>
 80046b8:	4604      	mov	r4, r0
 80046ba:	2301      	movs	r3, #1
 80046bc:	fb0c 2101 	mla	r1, ip, r1, r2
 80046c0:	e7f0      	b.n	80046a4 <_svfiprintf_r+0x194>
 80046c2:	ab03      	add	r3, sp, #12
 80046c4:	9300      	str	r3, [sp, #0]
 80046c6:	462a      	mov	r2, r5
 80046c8:	4638      	mov	r0, r7
 80046ca:	4b0f      	ldr	r3, [pc, #60]	; (8004708 <_svfiprintf_r+0x1f8>)
 80046cc:	a904      	add	r1, sp, #16
 80046ce:	f3af 8000 	nop.w
 80046d2:	1c42      	adds	r2, r0, #1
 80046d4:	4606      	mov	r6, r0
 80046d6:	d1d6      	bne.n	8004686 <_svfiprintf_r+0x176>
 80046d8:	89ab      	ldrh	r3, [r5, #12]
 80046da:	065b      	lsls	r3, r3, #25
 80046dc:	f53f af2c 	bmi.w	8004538 <_svfiprintf_r+0x28>
 80046e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80046e2:	b01d      	add	sp, #116	; 0x74
 80046e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80046e8:	ab03      	add	r3, sp, #12
 80046ea:	9300      	str	r3, [sp, #0]
 80046ec:	462a      	mov	r2, r5
 80046ee:	4638      	mov	r0, r7
 80046f0:	4b05      	ldr	r3, [pc, #20]	; (8004708 <_svfiprintf_r+0x1f8>)
 80046f2:	a904      	add	r1, sp, #16
 80046f4:	f000 f87c 	bl	80047f0 <_printf_i>
 80046f8:	e7eb      	b.n	80046d2 <_svfiprintf_r+0x1c2>
 80046fa:	bf00      	nop
 80046fc:	08004d74 	.word	0x08004d74
 8004700:	08004d7e 	.word	0x08004d7e
 8004704:	00000000 	.word	0x00000000
 8004708:	08004459 	.word	0x08004459
 800470c:	08004d7a 	.word	0x08004d7a

08004710 <_printf_common>:
 8004710:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004714:	4616      	mov	r6, r2
 8004716:	4699      	mov	r9, r3
 8004718:	688a      	ldr	r2, [r1, #8]
 800471a:	690b      	ldr	r3, [r1, #16]
 800471c:	4607      	mov	r7, r0
 800471e:	4293      	cmp	r3, r2
 8004720:	bfb8      	it	lt
 8004722:	4613      	movlt	r3, r2
 8004724:	6033      	str	r3, [r6, #0]
 8004726:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800472a:	460c      	mov	r4, r1
 800472c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004730:	b10a      	cbz	r2, 8004736 <_printf_common+0x26>
 8004732:	3301      	adds	r3, #1
 8004734:	6033      	str	r3, [r6, #0]
 8004736:	6823      	ldr	r3, [r4, #0]
 8004738:	0699      	lsls	r1, r3, #26
 800473a:	bf42      	ittt	mi
 800473c:	6833      	ldrmi	r3, [r6, #0]
 800473e:	3302      	addmi	r3, #2
 8004740:	6033      	strmi	r3, [r6, #0]
 8004742:	6825      	ldr	r5, [r4, #0]
 8004744:	f015 0506 	ands.w	r5, r5, #6
 8004748:	d106      	bne.n	8004758 <_printf_common+0x48>
 800474a:	f104 0a19 	add.w	sl, r4, #25
 800474e:	68e3      	ldr	r3, [r4, #12]
 8004750:	6832      	ldr	r2, [r6, #0]
 8004752:	1a9b      	subs	r3, r3, r2
 8004754:	42ab      	cmp	r3, r5
 8004756:	dc28      	bgt.n	80047aa <_printf_common+0x9a>
 8004758:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800475c:	1e13      	subs	r3, r2, #0
 800475e:	6822      	ldr	r2, [r4, #0]
 8004760:	bf18      	it	ne
 8004762:	2301      	movne	r3, #1
 8004764:	0692      	lsls	r2, r2, #26
 8004766:	d42d      	bmi.n	80047c4 <_printf_common+0xb4>
 8004768:	4649      	mov	r1, r9
 800476a:	4638      	mov	r0, r7
 800476c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004770:	47c0      	blx	r8
 8004772:	3001      	adds	r0, #1
 8004774:	d020      	beq.n	80047b8 <_printf_common+0xa8>
 8004776:	6823      	ldr	r3, [r4, #0]
 8004778:	68e5      	ldr	r5, [r4, #12]
 800477a:	f003 0306 	and.w	r3, r3, #6
 800477e:	2b04      	cmp	r3, #4
 8004780:	bf18      	it	ne
 8004782:	2500      	movne	r5, #0
 8004784:	6832      	ldr	r2, [r6, #0]
 8004786:	f04f 0600 	mov.w	r6, #0
 800478a:	68a3      	ldr	r3, [r4, #8]
 800478c:	bf08      	it	eq
 800478e:	1aad      	subeq	r5, r5, r2
 8004790:	6922      	ldr	r2, [r4, #16]
 8004792:	bf08      	it	eq
 8004794:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004798:	4293      	cmp	r3, r2
 800479a:	bfc4      	itt	gt
 800479c:	1a9b      	subgt	r3, r3, r2
 800479e:	18ed      	addgt	r5, r5, r3
 80047a0:	341a      	adds	r4, #26
 80047a2:	42b5      	cmp	r5, r6
 80047a4:	d11a      	bne.n	80047dc <_printf_common+0xcc>
 80047a6:	2000      	movs	r0, #0
 80047a8:	e008      	b.n	80047bc <_printf_common+0xac>
 80047aa:	2301      	movs	r3, #1
 80047ac:	4652      	mov	r2, sl
 80047ae:	4649      	mov	r1, r9
 80047b0:	4638      	mov	r0, r7
 80047b2:	47c0      	blx	r8
 80047b4:	3001      	adds	r0, #1
 80047b6:	d103      	bne.n	80047c0 <_printf_common+0xb0>
 80047b8:	f04f 30ff 	mov.w	r0, #4294967295
 80047bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80047c0:	3501      	adds	r5, #1
 80047c2:	e7c4      	b.n	800474e <_printf_common+0x3e>
 80047c4:	2030      	movs	r0, #48	; 0x30
 80047c6:	18e1      	adds	r1, r4, r3
 80047c8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80047cc:	1c5a      	adds	r2, r3, #1
 80047ce:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80047d2:	4422      	add	r2, r4
 80047d4:	3302      	adds	r3, #2
 80047d6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80047da:	e7c5      	b.n	8004768 <_printf_common+0x58>
 80047dc:	2301      	movs	r3, #1
 80047de:	4622      	mov	r2, r4
 80047e0:	4649      	mov	r1, r9
 80047e2:	4638      	mov	r0, r7
 80047e4:	47c0      	blx	r8
 80047e6:	3001      	adds	r0, #1
 80047e8:	d0e6      	beq.n	80047b8 <_printf_common+0xa8>
 80047ea:	3601      	adds	r6, #1
 80047ec:	e7d9      	b.n	80047a2 <_printf_common+0x92>
	...

080047f0 <_printf_i>:
 80047f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80047f4:	460c      	mov	r4, r1
 80047f6:	7e27      	ldrb	r7, [r4, #24]
 80047f8:	4691      	mov	r9, r2
 80047fa:	2f78      	cmp	r7, #120	; 0x78
 80047fc:	4680      	mov	r8, r0
 80047fe:	469a      	mov	sl, r3
 8004800:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004802:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004806:	d807      	bhi.n	8004818 <_printf_i+0x28>
 8004808:	2f62      	cmp	r7, #98	; 0x62
 800480a:	d80a      	bhi.n	8004822 <_printf_i+0x32>
 800480c:	2f00      	cmp	r7, #0
 800480e:	f000 80d9 	beq.w	80049c4 <_printf_i+0x1d4>
 8004812:	2f58      	cmp	r7, #88	; 0x58
 8004814:	f000 80a4 	beq.w	8004960 <_printf_i+0x170>
 8004818:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800481c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004820:	e03a      	b.n	8004898 <_printf_i+0xa8>
 8004822:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004826:	2b15      	cmp	r3, #21
 8004828:	d8f6      	bhi.n	8004818 <_printf_i+0x28>
 800482a:	a001      	add	r0, pc, #4	; (adr r0, 8004830 <_printf_i+0x40>)
 800482c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004830:	08004889 	.word	0x08004889
 8004834:	0800489d 	.word	0x0800489d
 8004838:	08004819 	.word	0x08004819
 800483c:	08004819 	.word	0x08004819
 8004840:	08004819 	.word	0x08004819
 8004844:	08004819 	.word	0x08004819
 8004848:	0800489d 	.word	0x0800489d
 800484c:	08004819 	.word	0x08004819
 8004850:	08004819 	.word	0x08004819
 8004854:	08004819 	.word	0x08004819
 8004858:	08004819 	.word	0x08004819
 800485c:	080049ab 	.word	0x080049ab
 8004860:	080048cd 	.word	0x080048cd
 8004864:	0800498d 	.word	0x0800498d
 8004868:	08004819 	.word	0x08004819
 800486c:	08004819 	.word	0x08004819
 8004870:	080049cd 	.word	0x080049cd
 8004874:	08004819 	.word	0x08004819
 8004878:	080048cd 	.word	0x080048cd
 800487c:	08004819 	.word	0x08004819
 8004880:	08004819 	.word	0x08004819
 8004884:	08004995 	.word	0x08004995
 8004888:	680b      	ldr	r3, [r1, #0]
 800488a:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800488e:	1d1a      	adds	r2, r3, #4
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	600a      	str	r2, [r1, #0]
 8004894:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004898:	2301      	movs	r3, #1
 800489a:	e0a4      	b.n	80049e6 <_printf_i+0x1f6>
 800489c:	6825      	ldr	r5, [r4, #0]
 800489e:	6808      	ldr	r0, [r1, #0]
 80048a0:	062e      	lsls	r6, r5, #24
 80048a2:	f100 0304 	add.w	r3, r0, #4
 80048a6:	d50a      	bpl.n	80048be <_printf_i+0xce>
 80048a8:	6805      	ldr	r5, [r0, #0]
 80048aa:	600b      	str	r3, [r1, #0]
 80048ac:	2d00      	cmp	r5, #0
 80048ae:	da03      	bge.n	80048b8 <_printf_i+0xc8>
 80048b0:	232d      	movs	r3, #45	; 0x2d
 80048b2:	426d      	negs	r5, r5
 80048b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80048b8:	230a      	movs	r3, #10
 80048ba:	485e      	ldr	r0, [pc, #376]	; (8004a34 <_printf_i+0x244>)
 80048bc:	e019      	b.n	80048f2 <_printf_i+0x102>
 80048be:	f015 0f40 	tst.w	r5, #64	; 0x40
 80048c2:	6805      	ldr	r5, [r0, #0]
 80048c4:	600b      	str	r3, [r1, #0]
 80048c6:	bf18      	it	ne
 80048c8:	b22d      	sxthne	r5, r5
 80048ca:	e7ef      	b.n	80048ac <_printf_i+0xbc>
 80048cc:	680b      	ldr	r3, [r1, #0]
 80048ce:	6825      	ldr	r5, [r4, #0]
 80048d0:	1d18      	adds	r0, r3, #4
 80048d2:	6008      	str	r0, [r1, #0]
 80048d4:	0628      	lsls	r0, r5, #24
 80048d6:	d501      	bpl.n	80048dc <_printf_i+0xec>
 80048d8:	681d      	ldr	r5, [r3, #0]
 80048da:	e002      	b.n	80048e2 <_printf_i+0xf2>
 80048dc:	0669      	lsls	r1, r5, #25
 80048de:	d5fb      	bpl.n	80048d8 <_printf_i+0xe8>
 80048e0:	881d      	ldrh	r5, [r3, #0]
 80048e2:	2f6f      	cmp	r7, #111	; 0x6f
 80048e4:	bf0c      	ite	eq
 80048e6:	2308      	moveq	r3, #8
 80048e8:	230a      	movne	r3, #10
 80048ea:	4852      	ldr	r0, [pc, #328]	; (8004a34 <_printf_i+0x244>)
 80048ec:	2100      	movs	r1, #0
 80048ee:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80048f2:	6866      	ldr	r6, [r4, #4]
 80048f4:	2e00      	cmp	r6, #0
 80048f6:	bfa8      	it	ge
 80048f8:	6821      	ldrge	r1, [r4, #0]
 80048fa:	60a6      	str	r6, [r4, #8]
 80048fc:	bfa4      	itt	ge
 80048fe:	f021 0104 	bicge.w	r1, r1, #4
 8004902:	6021      	strge	r1, [r4, #0]
 8004904:	b90d      	cbnz	r5, 800490a <_printf_i+0x11a>
 8004906:	2e00      	cmp	r6, #0
 8004908:	d04d      	beq.n	80049a6 <_printf_i+0x1b6>
 800490a:	4616      	mov	r6, r2
 800490c:	fbb5 f1f3 	udiv	r1, r5, r3
 8004910:	fb03 5711 	mls	r7, r3, r1, r5
 8004914:	5dc7      	ldrb	r7, [r0, r7]
 8004916:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800491a:	462f      	mov	r7, r5
 800491c:	42bb      	cmp	r3, r7
 800491e:	460d      	mov	r5, r1
 8004920:	d9f4      	bls.n	800490c <_printf_i+0x11c>
 8004922:	2b08      	cmp	r3, #8
 8004924:	d10b      	bne.n	800493e <_printf_i+0x14e>
 8004926:	6823      	ldr	r3, [r4, #0]
 8004928:	07df      	lsls	r7, r3, #31
 800492a:	d508      	bpl.n	800493e <_printf_i+0x14e>
 800492c:	6923      	ldr	r3, [r4, #16]
 800492e:	6861      	ldr	r1, [r4, #4]
 8004930:	4299      	cmp	r1, r3
 8004932:	bfde      	ittt	le
 8004934:	2330      	movle	r3, #48	; 0x30
 8004936:	f806 3c01 	strble.w	r3, [r6, #-1]
 800493a:	f106 36ff 	addle.w	r6, r6, #4294967295
 800493e:	1b92      	subs	r2, r2, r6
 8004940:	6122      	str	r2, [r4, #16]
 8004942:	464b      	mov	r3, r9
 8004944:	4621      	mov	r1, r4
 8004946:	4640      	mov	r0, r8
 8004948:	f8cd a000 	str.w	sl, [sp]
 800494c:	aa03      	add	r2, sp, #12
 800494e:	f7ff fedf 	bl	8004710 <_printf_common>
 8004952:	3001      	adds	r0, #1
 8004954:	d14c      	bne.n	80049f0 <_printf_i+0x200>
 8004956:	f04f 30ff 	mov.w	r0, #4294967295
 800495a:	b004      	add	sp, #16
 800495c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004960:	4834      	ldr	r0, [pc, #208]	; (8004a34 <_printf_i+0x244>)
 8004962:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004966:	680e      	ldr	r6, [r1, #0]
 8004968:	6823      	ldr	r3, [r4, #0]
 800496a:	f856 5b04 	ldr.w	r5, [r6], #4
 800496e:	061f      	lsls	r7, r3, #24
 8004970:	600e      	str	r6, [r1, #0]
 8004972:	d514      	bpl.n	800499e <_printf_i+0x1ae>
 8004974:	07d9      	lsls	r1, r3, #31
 8004976:	bf44      	itt	mi
 8004978:	f043 0320 	orrmi.w	r3, r3, #32
 800497c:	6023      	strmi	r3, [r4, #0]
 800497e:	b91d      	cbnz	r5, 8004988 <_printf_i+0x198>
 8004980:	6823      	ldr	r3, [r4, #0]
 8004982:	f023 0320 	bic.w	r3, r3, #32
 8004986:	6023      	str	r3, [r4, #0]
 8004988:	2310      	movs	r3, #16
 800498a:	e7af      	b.n	80048ec <_printf_i+0xfc>
 800498c:	6823      	ldr	r3, [r4, #0]
 800498e:	f043 0320 	orr.w	r3, r3, #32
 8004992:	6023      	str	r3, [r4, #0]
 8004994:	2378      	movs	r3, #120	; 0x78
 8004996:	4828      	ldr	r0, [pc, #160]	; (8004a38 <_printf_i+0x248>)
 8004998:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800499c:	e7e3      	b.n	8004966 <_printf_i+0x176>
 800499e:	065e      	lsls	r6, r3, #25
 80049a0:	bf48      	it	mi
 80049a2:	b2ad      	uxthmi	r5, r5
 80049a4:	e7e6      	b.n	8004974 <_printf_i+0x184>
 80049a6:	4616      	mov	r6, r2
 80049a8:	e7bb      	b.n	8004922 <_printf_i+0x132>
 80049aa:	680b      	ldr	r3, [r1, #0]
 80049ac:	6826      	ldr	r6, [r4, #0]
 80049ae:	1d1d      	adds	r5, r3, #4
 80049b0:	6960      	ldr	r0, [r4, #20]
 80049b2:	600d      	str	r5, [r1, #0]
 80049b4:	0635      	lsls	r5, r6, #24
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	d501      	bpl.n	80049be <_printf_i+0x1ce>
 80049ba:	6018      	str	r0, [r3, #0]
 80049bc:	e002      	b.n	80049c4 <_printf_i+0x1d4>
 80049be:	0671      	lsls	r1, r6, #25
 80049c0:	d5fb      	bpl.n	80049ba <_printf_i+0x1ca>
 80049c2:	8018      	strh	r0, [r3, #0]
 80049c4:	2300      	movs	r3, #0
 80049c6:	4616      	mov	r6, r2
 80049c8:	6123      	str	r3, [r4, #16]
 80049ca:	e7ba      	b.n	8004942 <_printf_i+0x152>
 80049cc:	680b      	ldr	r3, [r1, #0]
 80049ce:	1d1a      	adds	r2, r3, #4
 80049d0:	600a      	str	r2, [r1, #0]
 80049d2:	681e      	ldr	r6, [r3, #0]
 80049d4:	2100      	movs	r1, #0
 80049d6:	4630      	mov	r0, r6
 80049d8:	6862      	ldr	r2, [r4, #4]
 80049da:	f000 f82f 	bl	8004a3c <memchr>
 80049de:	b108      	cbz	r0, 80049e4 <_printf_i+0x1f4>
 80049e0:	1b80      	subs	r0, r0, r6
 80049e2:	6060      	str	r0, [r4, #4]
 80049e4:	6863      	ldr	r3, [r4, #4]
 80049e6:	6123      	str	r3, [r4, #16]
 80049e8:	2300      	movs	r3, #0
 80049ea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80049ee:	e7a8      	b.n	8004942 <_printf_i+0x152>
 80049f0:	4632      	mov	r2, r6
 80049f2:	4649      	mov	r1, r9
 80049f4:	4640      	mov	r0, r8
 80049f6:	6923      	ldr	r3, [r4, #16]
 80049f8:	47d0      	blx	sl
 80049fa:	3001      	adds	r0, #1
 80049fc:	d0ab      	beq.n	8004956 <_printf_i+0x166>
 80049fe:	6823      	ldr	r3, [r4, #0]
 8004a00:	079b      	lsls	r3, r3, #30
 8004a02:	d413      	bmi.n	8004a2c <_printf_i+0x23c>
 8004a04:	68e0      	ldr	r0, [r4, #12]
 8004a06:	9b03      	ldr	r3, [sp, #12]
 8004a08:	4298      	cmp	r0, r3
 8004a0a:	bfb8      	it	lt
 8004a0c:	4618      	movlt	r0, r3
 8004a0e:	e7a4      	b.n	800495a <_printf_i+0x16a>
 8004a10:	2301      	movs	r3, #1
 8004a12:	4632      	mov	r2, r6
 8004a14:	4649      	mov	r1, r9
 8004a16:	4640      	mov	r0, r8
 8004a18:	47d0      	blx	sl
 8004a1a:	3001      	adds	r0, #1
 8004a1c:	d09b      	beq.n	8004956 <_printf_i+0x166>
 8004a1e:	3501      	adds	r5, #1
 8004a20:	68e3      	ldr	r3, [r4, #12]
 8004a22:	9903      	ldr	r1, [sp, #12]
 8004a24:	1a5b      	subs	r3, r3, r1
 8004a26:	42ab      	cmp	r3, r5
 8004a28:	dcf2      	bgt.n	8004a10 <_printf_i+0x220>
 8004a2a:	e7eb      	b.n	8004a04 <_printf_i+0x214>
 8004a2c:	2500      	movs	r5, #0
 8004a2e:	f104 0619 	add.w	r6, r4, #25
 8004a32:	e7f5      	b.n	8004a20 <_printf_i+0x230>
 8004a34:	08004d85 	.word	0x08004d85
 8004a38:	08004d96 	.word	0x08004d96

08004a3c <memchr>:
 8004a3c:	4603      	mov	r3, r0
 8004a3e:	b510      	push	{r4, lr}
 8004a40:	b2c9      	uxtb	r1, r1
 8004a42:	4402      	add	r2, r0
 8004a44:	4293      	cmp	r3, r2
 8004a46:	4618      	mov	r0, r3
 8004a48:	d101      	bne.n	8004a4e <memchr+0x12>
 8004a4a:	2000      	movs	r0, #0
 8004a4c:	e003      	b.n	8004a56 <memchr+0x1a>
 8004a4e:	7804      	ldrb	r4, [r0, #0]
 8004a50:	3301      	adds	r3, #1
 8004a52:	428c      	cmp	r4, r1
 8004a54:	d1f6      	bne.n	8004a44 <memchr+0x8>
 8004a56:	bd10      	pop	{r4, pc}

08004a58 <memcpy>:
 8004a58:	440a      	add	r2, r1
 8004a5a:	4291      	cmp	r1, r2
 8004a5c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004a60:	d100      	bne.n	8004a64 <memcpy+0xc>
 8004a62:	4770      	bx	lr
 8004a64:	b510      	push	{r4, lr}
 8004a66:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004a6a:	4291      	cmp	r1, r2
 8004a6c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004a70:	d1f9      	bne.n	8004a66 <memcpy+0xe>
 8004a72:	bd10      	pop	{r4, pc}

08004a74 <memmove>:
 8004a74:	4288      	cmp	r0, r1
 8004a76:	b510      	push	{r4, lr}
 8004a78:	eb01 0402 	add.w	r4, r1, r2
 8004a7c:	d902      	bls.n	8004a84 <memmove+0x10>
 8004a7e:	4284      	cmp	r4, r0
 8004a80:	4623      	mov	r3, r4
 8004a82:	d807      	bhi.n	8004a94 <memmove+0x20>
 8004a84:	1e43      	subs	r3, r0, #1
 8004a86:	42a1      	cmp	r1, r4
 8004a88:	d008      	beq.n	8004a9c <memmove+0x28>
 8004a8a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004a8e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004a92:	e7f8      	b.n	8004a86 <memmove+0x12>
 8004a94:	4601      	mov	r1, r0
 8004a96:	4402      	add	r2, r0
 8004a98:	428a      	cmp	r2, r1
 8004a9a:	d100      	bne.n	8004a9e <memmove+0x2a>
 8004a9c:	bd10      	pop	{r4, pc}
 8004a9e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004aa2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004aa6:	e7f7      	b.n	8004a98 <memmove+0x24>

08004aa8 <_free_r>:
 8004aa8:	b538      	push	{r3, r4, r5, lr}
 8004aaa:	4605      	mov	r5, r0
 8004aac:	2900      	cmp	r1, #0
 8004aae:	d043      	beq.n	8004b38 <_free_r+0x90>
 8004ab0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004ab4:	1f0c      	subs	r4, r1, #4
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	bfb8      	it	lt
 8004aba:	18e4      	addlt	r4, r4, r3
 8004abc:	f000 f8d0 	bl	8004c60 <__malloc_lock>
 8004ac0:	4a1e      	ldr	r2, [pc, #120]	; (8004b3c <_free_r+0x94>)
 8004ac2:	6813      	ldr	r3, [r2, #0]
 8004ac4:	4610      	mov	r0, r2
 8004ac6:	b933      	cbnz	r3, 8004ad6 <_free_r+0x2e>
 8004ac8:	6063      	str	r3, [r4, #4]
 8004aca:	6014      	str	r4, [r2, #0]
 8004acc:	4628      	mov	r0, r5
 8004ace:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004ad2:	f000 b8cb 	b.w	8004c6c <__malloc_unlock>
 8004ad6:	42a3      	cmp	r3, r4
 8004ad8:	d90a      	bls.n	8004af0 <_free_r+0x48>
 8004ada:	6821      	ldr	r1, [r4, #0]
 8004adc:	1862      	adds	r2, r4, r1
 8004ade:	4293      	cmp	r3, r2
 8004ae0:	bf01      	itttt	eq
 8004ae2:	681a      	ldreq	r2, [r3, #0]
 8004ae4:	685b      	ldreq	r3, [r3, #4]
 8004ae6:	1852      	addeq	r2, r2, r1
 8004ae8:	6022      	streq	r2, [r4, #0]
 8004aea:	6063      	str	r3, [r4, #4]
 8004aec:	6004      	str	r4, [r0, #0]
 8004aee:	e7ed      	b.n	8004acc <_free_r+0x24>
 8004af0:	461a      	mov	r2, r3
 8004af2:	685b      	ldr	r3, [r3, #4]
 8004af4:	b10b      	cbz	r3, 8004afa <_free_r+0x52>
 8004af6:	42a3      	cmp	r3, r4
 8004af8:	d9fa      	bls.n	8004af0 <_free_r+0x48>
 8004afa:	6811      	ldr	r1, [r2, #0]
 8004afc:	1850      	adds	r0, r2, r1
 8004afe:	42a0      	cmp	r0, r4
 8004b00:	d10b      	bne.n	8004b1a <_free_r+0x72>
 8004b02:	6820      	ldr	r0, [r4, #0]
 8004b04:	4401      	add	r1, r0
 8004b06:	1850      	adds	r0, r2, r1
 8004b08:	4283      	cmp	r3, r0
 8004b0a:	6011      	str	r1, [r2, #0]
 8004b0c:	d1de      	bne.n	8004acc <_free_r+0x24>
 8004b0e:	6818      	ldr	r0, [r3, #0]
 8004b10:	685b      	ldr	r3, [r3, #4]
 8004b12:	4401      	add	r1, r0
 8004b14:	6011      	str	r1, [r2, #0]
 8004b16:	6053      	str	r3, [r2, #4]
 8004b18:	e7d8      	b.n	8004acc <_free_r+0x24>
 8004b1a:	d902      	bls.n	8004b22 <_free_r+0x7a>
 8004b1c:	230c      	movs	r3, #12
 8004b1e:	602b      	str	r3, [r5, #0]
 8004b20:	e7d4      	b.n	8004acc <_free_r+0x24>
 8004b22:	6820      	ldr	r0, [r4, #0]
 8004b24:	1821      	adds	r1, r4, r0
 8004b26:	428b      	cmp	r3, r1
 8004b28:	bf01      	itttt	eq
 8004b2a:	6819      	ldreq	r1, [r3, #0]
 8004b2c:	685b      	ldreq	r3, [r3, #4]
 8004b2e:	1809      	addeq	r1, r1, r0
 8004b30:	6021      	streq	r1, [r4, #0]
 8004b32:	6063      	str	r3, [r4, #4]
 8004b34:	6054      	str	r4, [r2, #4]
 8004b36:	e7c9      	b.n	8004acc <_free_r+0x24>
 8004b38:	bd38      	pop	{r3, r4, r5, pc}
 8004b3a:	bf00      	nop
 8004b3c:	200000d4 	.word	0x200000d4

08004b40 <_malloc_r>:
 8004b40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b42:	1ccd      	adds	r5, r1, #3
 8004b44:	f025 0503 	bic.w	r5, r5, #3
 8004b48:	3508      	adds	r5, #8
 8004b4a:	2d0c      	cmp	r5, #12
 8004b4c:	bf38      	it	cc
 8004b4e:	250c      	movcc	r5, #12
 8004b50:	2d00      	cmp	r5, #0
 8004b52:	4606      	mov	r6, r0
 8004b54:	db01      	blt.n	8004b5a <_malloc_r+0x1a>
 8004b56:	42a9      	cmp	r1, r5
 8004b58:	d903      	bls.n	8004b62 <_malloc_r+0x22>
 8004b5a:	230c      	movs	r3, #12
 8004b5c:	6033      	str	r3, [r6, #0]
 8004b5e:	2000      	movs	r0, #0
 8004b60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004b62:	f000 f87d 	bl	8004c60 <__malloc_lock>
 8004b66:	4921      	ldr	r1, [pc, #132]	; (8004bec <_malloc_r+0xac>)
 8004b68:	680a      	ldr	r2, [r1, #0]
 8004b6a:	4614      	mov	r4, r2
 8004b6c:	b99c      	cbnz	r4, 8004b96 <_malloc_r+0x56>
 8004b6e:	4f20      	ldr	r7, [pc, #128]	; (8004bf0 <_malloc_r+0xb0>)
 8004b70:	683b      	ldr	r3, [r7, #0]
 8004b72:	b923      	cbnz	r3, 8004b7e <_malloc_r+0x3e>
 8004b74:	4621      	mov	r1, r4
 8004b76:	4630      	mov	r0, r6
 8004b78:	f000 f862 	bl	8004c40 <_sbrk_r>
 8004b7c:	6038      	str	r0, [r7, #0]
 8004b7e:	4629      	mov	r1, r5
 8004b80:	4630      	mov	r0, r6
 8004b82:	f000 f85d 	bl	8004c40 <_sbrk_r>
 8004b86:	1c43      	adds	r3, r0, #1
 8004b88:	d123      	bne.n	8004bd2 <_malloc_r+0x92>
 8004b8a:	230c      	movs	r3, #12
 8004b8c:	4630      	mov	r0, r6
 8004b8e:	6033      	str	r3, [r6, #0]
 8004b90:	f000 f86c 	bl	8004c6c <__malloc_unlock>
 8004b94:	e7e3      	b.n	8004b5e <_malloc_r+0x1e>
 8004b96:	6823      	ldr	r3, [r4, #0]
 8004b98:	1b5b      	subs	r3, r3, r5
 8004b9a:	d417      	bmi.n	8004bcc <_malloc_r+0x8c>
 8004b9c:	2b0b      	cmp	r3, #11
 8004b9e:	d903      	bls.n	8004ba8 <_malloc_r+0x68>
 8004ba0:	6023      	str	r3, [r4, #0]
 8004ba2:	441c      	add	r4, r3
 8004ba4:	6025      	str	r5, [r4, #0]
 8004ba6:	e004      	b.n	8004bb2 <_malloc_r+0x72>
 8004ba8:	6863      	ldr	r3, [r4, #4]
 8004baa:	42a2      	cmp	r2, r4
 8004bac:	bf0c      	ite	eq
 8004bae:	600b      	streq	r3, [r1, #0]
 8004bb0:	6053      	strne	r3, [r2, #4]
 8004bb2:	4630      	mov	r0, r6
 8004bb4:	f000 f85a 	bl	8004c6c <__malloc_unlock>
 8004bb8:	f104 000b 	add.w	r0, r4, #11
 8004bbc:	1d23      	adds	r3, r4, #4
 8004bbe:	f020 0007 	bic.w	r0, r0, #7
 8004bc2:	1ac2      	subs	r2, r0, r3
 8004bc4:	d0cc      	beq.n	8004b60 <_malloc_r+0x20>
 8004bc6:	1a1b      	subs	r3, r3, r0
 8004bc8:	50a3      	str	r3, [r4, r2]
 8004bca:	e7c9      	b.n	8004b60 <_malloc_r+0x20>
 8004bcc:	4622      	mov	r2, r4
 8004bce:	6864      	ldr	r4, [r4, #4]
 8004bd0:	e7cc      	b.n	8004b6c <_malloc_r+0x2c>
 8004bd2:	1cc4      	adds	r4, r0, #3
 8004bd4:	f024 0403 	bic.w	r4, r4, #3
 8004bd8:	42a0      	cmp	r0, r4
 8004bda:	d0e3      	beq.n	8004ba4 <_malloc_r+0x64>
 8004bdc:	1a21      	subs	r1, r4, r0
 8004bde:	4630      	mov	r0, r6
 8004be0:	f000 f82e 	bl	8004c40 <_sbrk_r>
 8004be4:	3001      	adds	r0, #1
 8004be6:	d1dd      	bne.n	8004ba4 <_malloc_r+0x64>
 8004be8:	e7cf      	b.n	8004b8a <_malloc_r+0x4a>
 8004bea:	bf00      	nop
 8004bec:	200000d4 	.word	0x200000d4
 8004bf0:	200000d8 	.word	0x200000d8

08004bf4 <_realloc_r>:
 8004bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004bf6:	4607      	mov	r7, r0
 8004bf8:	4614      	mov	r4, r2
 8004bfa:	460e      	mov	r6, r1
 8004bfc:	b921      	cbnz	r1, 8004c08 <_realloc_r+0x14>
 8004bfe:	4611      	mov	r1, r2
 8004c00:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004c04:	f7ff bf9c 	b.w	8004b40 <_malloc_r>
 8004c08:	b922      	cbnz	r2, 8004c14 <_realloc_r+0x20>
 8004c0a:	f7ff ff4d 	bl	8004aa8 <_free_r>
 8004c0e:	4625      	mov	r5, r4
 8004c10:	4628      	mov	r0, r5
 8004c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004c14:	f000 f830 	bl	8004c78 <_malloc_usable_size_r>
 8004c18:	42a0      	cmp	r0, r4
 8004c1a:	d20f      	bcs.n	8004c3c <_realloc_r+0x48>
 8004c1c:	4621      	mov	r1, r4
 8004c1e:	4638      	mov	r0, r7
 8004c20:	f7ff ff8e 	bl	8004b40 <_malloc_r>
 8004c24:	4605      	mov	r5, r0
 8004c26:	2800      	cmp	r0, #0
 8004c28:	d0f2      	beq.n	8004c10 <_realloc_r+0x1c>
 8004c2a:	4631      	mov	r1, r6
 8004c2c:	4622      	mov	r2, r4
 8004c2e:	f7ff ff13 	bl	8004a58 <memcpy>
 8004c32:	4631      	mov	r1, r6
 8004c34:	4638      	mov	r0, r7
 8004c36:	f7ff ff37 	bl	8004aa8 <_free_r>
 8004c3a:	e7e9      	b.n	8004c10 <_realloc_r+0x1c>
 8004c3c:	4635      	mov	r5, r6
 8004c3e:	e7e7      	b.n	8004c10 <_realloc_r+0x1c>

08004c40 <_sbrk_r>:
 8004c40:	b538      	push	{r3, r4, r5, lr}
 8004c42:	2300      	movs	r3, #0
 8004c44:	4d05      	ldr	r5, [pc, #20]	; (8004c5c <_sbrk_r+0x1c>)
 8004c46:	4604      	mov	r4, r0
 8004c48:	4608      	mov	r0, r1
 8004c4a:	602b      	str	r3, [r5, #0]
 8004c4c:	f7fc fc86 	bl	800155c <_sbrk>
 8004c50:	1c43      	adds	r3, r0, #1
 8004c52:	d102      	bne.n	8004c5a <_sbrk_r+0x1a>
 8004c54:	682b      	ldr	r3, [r5, #0]
 8004c56:	b103      	cbz	r3, 8004c5a <_sbrk_r+0x1a>
 8004c58:	6023      	str	r3, [r4, #0]
 8004c5a:	bd38      	pop	{r3, r4, r5, pc}
 8004c5c:	20000200 	.word	0x20000200

08004c60 <__malloc_lock>:
 8004c60:	4801      	ldr	r0, [pc, #4]	; (8004c68 <__malloc_lock+0x8>)
 8004c62:	f000 b811 	b.w	8004c88 <__retarget_lock_acquire_recursive>
 8004c66:	bf00      	nop
 8004c68:	20000208 	.word	0x20000208

08004c6c <__malloc_unlock>:
 8004c6c:	4801      	ldr	r0, [pc, #4]	; (8004c74 <__malloc_unlock+0x8>)
 8004c6e:	f000 b80c 	b.w	8004c8a <__retarget_lock_release_recursive>
 8004c72:	bf00      	nop
 8004c74:	20000208 	.word	0x20000208

08004c78 <_malloc_usable_size_r>:
 8004c78:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004c7c:	1f18      	subs	r0, r3, #4
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	bfbc      	itt	lt
 8004c82:	580b      	ldrlt	r3, [r1, r0]
 8004c84:	18c0      	addlt	r0, r0, r3
 8004c86:	4770      	bx	lr

08004c88 <__retarget_lock_acquire_recursive>:
 8004c88:	4770      	bx	lr

08004c8a <__retarget_lock_release_recursive>:
 8004c8a:	4770      	bx	lr

08004c8c <_init>:
 8004c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c8e:	bf00      	nop
 8004c90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c92:	bc08      	pop	{r3}
 8004c94:	469e      	mov	lr, r3
 8004c96:	4770      	bx	lr

08004c98 <_fini>:
 8004c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004c9a:	bf00      	nop
 8004c9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004c9e:	bc08      	pop	{r3}
 8004ca0:	469e      	mov	lr, r3
 8004ca2:	4770      	bx	lr
